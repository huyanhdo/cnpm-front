{"version":3,"sources":["components/dashboard.module.css","fire_base.js","context/AuthContext.js","components/sidebar.js","components/mainCart.js","store/cartSlice.js","store/cartComboSlice.js","store/cartExtraSlice.js","store/orderSlice.js","pages/cartPage.js","components/cart.js","components/categories.js","components/decorator.js","components/trending.js","components/carousel.js","pages/Home.js","components/pizzaMenu.js","pages/pizza.js","components/topping.js","components/comment.js","store/categories/pizzaSlice.js","components/singlePizza.js","pages/singlePage.js","components/dashboard.js","components/searchbar.js","components/combo.js","pages/comboPage.js","assets/img/pic1.png","components/SignIn/SignInForm.js","pages/SignIn.js","store/categories/dessertSlice.js","store/categories/drinkSlice.js","store/categories/vegetableSlice.js","store/categories/kidSlice.js","store/categories/appetizerSlice.js","components/singleExtra.js","pages/singleExtraPage.js","components/SignIn/ForgetPassForm.js","pages/ForgetPassword.js","components/OrderReport/OrderDetail/index.js","pages/OrderReport/index.js","store/comboSlice.js","components/manageCard.js","components/manageCategory.js","pages/managePage.js","components/singleCombo.js","pages/singleComboPage.js","components/bill.js","pages/orderPage.js","App.js","store/store.js","index.js"],"names":["module","exports","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","AuthContext","createContext","currentUser","login","Promise","logout","resetPassword","useAuth","useContext","AuthContextProvider","children","useState","setCurrentUser","value","email","password","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","useEffect","unsubscribe","onAuthStateChanged","user","Provider","name","CustomIconButton","styled","IconButton","width","height","backgroundColor","color","CustomListItem","ListItem","fontFamily","fontWeight","fontSize","lineHeight","marginLeft","borderRadius","Admin","id","categories","MenuBar","navigate","useNavigate","expand","SetExpand","focus","SetFocus","switchExpand","prev","Box","sx","top","left","bottom","alignSelf","boxShadow","zIndex","display","onMouseLeave","onMouseEnter","Collapse","in","unmountOnExit","orientation","AppBar","position","minWidth","marginTop","marginBottom","Badge","badgeContent","Avatar","src","overlap","Typography","variant","Divider","light","List","spacing","ListItemButton","className","onClick","component","map","item","pl","category","Stack","alignItems","round","num","Math","PizzaCartItem","props","cartInfo","cartId","pizza","handleCartChange","md","sm","xs","p","image_url","alt","title","style","objectFit","boxSizing","padding","justifyContent","textAlign","direction","marginRight","total","pizzaId","state","size","sole","number","toppings","type_detail","type","flexWrap","topping","toppingId","Chip","label","topping_name","margin","ExtraCartItem","extra","image","price","extraId","handleClick","SetNum","newNum","RemoveRounded","ComboMiniItem","ComboCartItem","combo","useSelector","combos","entities","comboId","handleComboChange","setExpand","slot","pizzaSlot","selector","pizzas","kid","kidSlot","kids","vegetable","vegetableSlot","vegetables","appetizer","appetizerSlot","appetizers","dessert","dessertSlot","desserts","drink","drinkSlot","drinks","free","off","Object","values","range","i","push","productId","Cart","cart","cartExtras","cartCombos","allPizzas","Card","m","paddingLeft","paddingRight","ids","length","itemId","keys","replace","c","toUpperCase","cartItem","handleExtraChange","cartSlice","createSlice","initialState","nextId","reducers","itemAdded","action","payload","itemRemoved","index","indexOf","splice","itemUpdated","data","actions","cartComboSlice","cartExtraSlice","undefined","find","axios","require","fetchOrders","createAsyncThunk","a","get","result","console","log","orderSlice","fetchingStatus","addOrder","extraReducers","builders","addCase","pending","fulfilled","rejected","EmptyCart","flexDirection","CartPage","dispatch","useDispatch","pay","SetPay","totalPizza","reduce","totalExtra","totalCombo","totalValue","SetTotalValue","customer","setCustomer","phone","setPhone","province","setProvince","address","setAddress","inPlace","setInPlace","posted","setPosted","message","setMessage","makeOrder","shipment","time","Date","now","detail","orderedPizzas","cartPizza","filter","cartCombo","comboNumber","pizzaNumber","pizzaInfo","comNumber","existedIndex","findIndex","order","postOrder","post","status","_id","comboRemoved","remove","add","delta","newData","extraRemoved","extraUpdated","Button","disabled","Modal","open","onClose","Fade","timeout","transform","TextField","required","onChange","e","target","multiline","maxRows","inputProps","InputLabelProps","FormControlLabel","control","Checkbox","checked","Select","MenuProps","SelectDisplayProps","pro","MenuItem","test","validForm","Snackbar","autoHideDuration","CartItem","maxHeight","overflow","minHeight","cates","emptyCart","maxWidth","Category","hov","setHov","switchHov","menuLink","PizzaCard","link","substring","rate","Rating","readOnly","icon","emptyIcon","Categories","Newest","sortedIds","sort","id1","id2","rating","ImageDecorator","right","Trending","order_number","TrendingList","products","mostOrder","mostId","ComboCarousel","setIndex","Carousel","indicators","activeIndex","onSelect","selectedIndex","onSlid","slidIndex","Item","interval","banner","controls","fade","description","Home","useStyle","makeStyles","textField","border","borderWidth","borderColor","borderTopRightRadius","borderBottomRightRadius","WebkitBoxShadow","iconButton","CustomPagination","Pagination","PizzaMenu","classes","menuName","singlePath","useParams","search","setSearch","page","setPage","totalPage","ceil","pageList","placeholder","InputProps","startAdornment","InputAdornment","backgroundImage","Grow","mountOnEnter","includes","toString","CircularProgress","shape","count","event","PizzaPage","ToppingCard","handleAdd","added","setAdded","Comment","comment","date","comment_time","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","user_name","user_rating","textOverflow","content","fetchAllPizzas","response","error","pizzaSlice","updatePizza","add1Pizza","delete1Pizza","deleteId","newIds","SinglePizza","location","useLocation","comments","sizes","soles","setSize","setSole","setNum","setTotal","cmt","setCmt","tops","setTops","done","setDone","yourName","setYourName","yourCmt","setYourCmt","yourRate","setYourRate","setMess","closeCmt","postComment","newCmt","floor","newPizza","assign","put","topping_price","sizeChanged","o","n","type_price","rows","newRate","SinglePage","MostOrder","setMenu","setStatus","mostList","setmostList","fetch","json","responseJSON","array","entries","entry","v","v1","v2","fetchMenu","styles","table","borderSpacing","Dashboard","OrderLists","setOrderLists","fetchOrderLists","totalpay","totaldish","totalcustomer","forEach","py","hr","useStyles","customButton","Searchbar","anchorEl","setAnchorEl","Boolean","changePassword","alert","handleClose","Toolbar","flexGrow","to","currentTarget","startIcon","Menu","anchorOrigin","vertical","horizontal","textDecorationLine","timeToDate","ComboMenuItem","valid","start","end","subtitle","slice","persons","ComboList","ComboPage","forgetPass","cursor","container","button","SignInForm","userName","setUserName","pass","setPass","setError","btn","useRef","handleSubmit","preventDefault","listener","keyCode","current","click","document","addEventListener","removeEventListener","opacity","textColor","ref","SignIn","Grid","Hidden","only","pic1","fetchAllDesserts","dessertSlice","updateDessert","add1Dessert","delete1Dessert","fetchAllDrinks","drinkSlice","updateDrink","add1Drink","delete1Drink","fetchAllVegetables","vegetableSlice","updateVegetable","newItem","add1Vegetable","delete1Vegetable","fetchAllKids","kidSlice","updateKid","add1Kid","delete1Kid","fetchAllAppetizers","appetizerSlice","updateAppetizer","add1Appetizer","delete1Appetizer","SingleExtra","update","newExtra","SingleExtraPage","ForgetPassForm","setEmail","submited","setSubmited","handleResetPassword","ForgetPassword","OrderDetail","detailItem","detailId","Status","detailURL","detailKeys","menu","setTime","onHanleSubmitStatus","callback","option","method","body","JSON","stringify","then","putData","setTimeout","window","reload","borderBottom","items","constructor","OrderReport","setKeys","orderStart","setOrderStart","orderEnd","setOrderEnd","setDetailItem","OrderList","reverse","tabIndex","flex","fetchAllCombos","comboSlice","add1Combo","itm","delete1Combo","PizzaManageCard","delete","url","cardUrl","editPizza","setEditPizza","deletePizza","setDeletePizza","setName","setPrice","setSizes","setDescription","setImage","setToppings","handleSizeChange","Sizes","handleToppingChange","Toppings","EditHandle","parseInt","statusText","DeleteHandle","resp","stopPropagation","defaultValue","endAdornment","handleRemoveSize","handleRemoveTopping","isNaN","checkItem","ComboManageCard","editCombo","setEditCombo","deleteCombo","setDeleteCombo","currencies","setTitle","setSubTitle","setBanner","toLocaleString","setStart","setEnd","setOff","setPerson","setPizza","b","hasOwnProperty","k","setFree","categorys","setCategorys","comboType","setComboType","setType","handleCategoryChange","handleFreeChange","Free","handleEditCombo","parse","handleDeleteCombo","FormControl","FormLabel","RadioGroup","row","Radio","fre","select","handleRemoveFree","handleRemoveCategory","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","newValue","renderInput","params","ComboManage","addCombo","setAddCombo","handleAddCombo","PizzaManage","dbPath","addPizza","setAddPizza","newName","setNewName","newPrice","setNewPrice","newSizes","setNewSizes","newToppings","setNewToppings","newDescription","setNewDescription","newImage","setNewImage","handleAddPizza","newSize","newTopping","MyTab","Tab","textTransform","ManagePage","React","setValue","typography","TabContext","TabList","TabPanel","ChooseCard","slotId","InfoRounded","ComboChooseModal","AddSlot","openModal","borderStyle","AddedExtra","product","SwapHorizontalCircleRounded","AddedPizza","handleChange","currentSize","newType","currentTopping","currentPrice","CustomProduct","offset","setOpen","openSlot","setOpenSlot","SingleCombo","setKidSlot","setDrinkSlot","setVegetableSlot","setAppetizerSlot","setDessertSlot","setPizzaSlot","extras","setSlot","proNum","freeNumber","initTotal","filled","setFilled","CardMedia","CardContent","New","textDecoration","SingleComboPage","Bill","steps","activeStep","step","code","Stepper","alternativeLabel","Step","StepLabel","OrderPage","orders","currentId","setCurrentId","App","exact","path","element","persistConfig","key","storage","rootReducer","combineReducers","pizzaReducer","cartReducer","cartExtraReducer","cartComboReducer","comboReducer","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.38d7c35a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"dashboard_board__2PFaA\",\"hr\":\"dashboard_hr__33_E7\"};","import { initializeApp } from \"firebase/app\";\r\nimport {getAuth} from 'firebase/auth';\r\n\r\nconst app= initializeApp  ({\r\n    apiKey: 'AIzaSyBRKoLkB5VVonG35NTu2EWryh3o01CzwCA',\r\n    authDomain: 'pizzahust-d7124.firebaseapp.com',\r\n    databaseURL: \"https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n    projectId: 'pizzahust-d7124',\r\n    storageBucket: 'pizzahust-d7124.appspot.com',\r\n    messagingSenderId: '969729411649',\r\n    appId: '1:969729411649:web:7298cc63bd3caa965e54c0',\r\n    measurementId: '${config.measurementId}'\r\n  });\r\nexport default app;\r\nexport const auth = getAuth(app);\r\n\r\n\r\n  ","import { createContext,useContext,useState,useEffect } from \"react\";\r\nimport {auth} from '../fire_base';\r\nimport { signOut ,\r\n        signInWithEmailAndPassword, \r\n        onAuthStateChanged,\r\n        sendPasswordResetEmail,\r\n        } from \"firebase/auth\";\r\nconst AuthContext = createContext({\r\n    currentUser:null,  \r\n    login:()=>Promise,\r\n    logout:()=>Promise,\r\n    resetPassword:()=>Promise\r\n})\r\n\r\nexport const useAuth = ()=>useContext(AuthContext);\r\n\r\nexport default function AuthContextProvider({children}){\r\n    const [currentUser,setCurrentUser] = useState(null);\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        resetPassword\r\n    }\r\n    function login(email,password) {\r\n        return signInWithEmailAndPassword(auth,email,password);\r\n     }\r\n\r\n     function logout(){\r\n         return signOut(auth);\r\n     } \r\n\r\n     function resetPassword(email){\r\n         return sendPasswordResetEmail(auth,email);\r\n     }\r\n\r\n    useEffect(()=>{\r\n        const unsubscribe = onAuthStateChanged(auth,user => setCurrentUser(user))\r\n        return ()=>{unsubscribe()}\r\n    },[])\r\n    return(\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Avatar, Badge, Box, Typography, Divider, Stack, IconButton, List, ListItem, ListItemButton, Collapse, AppBar } from '@mui/material';\r\nimport DashboardRoundedIcon from '@mui/icons-material/DashboardRounded';\r\nimport MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\r\nimport AccountCircleRoundedIcon from '@mui/icons-material/AccountCircleRounded';\r\nimport {styled} from '@mui/styles';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport ContactSupportRoundedIcon from '@mui/icons-material/ContactSupportRounded'\r\nimport YoutubeSearchedForRoundedIcon from '@mui/icons-material/YoutubeSearchedForRounded';\r\nimport {useNavigate} from 'react-router';\r\n\r\nconst name ={\r\n    'pizza': 'Pizza',\r\n    'dessert': 'Tráng miệng',\r\n    'appetizer':'Khai vị',\r\n    'vegetable': 'Món chay',\r\n    'kid': 'Đồ cho bé',\r\n    'drink':'Đồ uống',\r\n}\r\n\r\nexport const CustomIconButton = styled(IconButton)({\r\n    width: 45,\r\n    height: 45,\r\n    backgroundColor: '#F5F5F5',\r\n    '&:hover':{\r\n        backgroundColor: '#EA6A12',\r\n        color: 'white',\r\n        width: 60,\r\n        height: 60,\r\n        '& .icon':{\r\n            color: 'white',\r\n        }\r\n    },\r\n    '& .icon':{\r\n        color: '#EA6A12',\r\n    }\r\n})\r\nexport const CustomListItem = styled(ListItem)({\r\n    '& .icon':{\r\n        color: '#EA6A12',\r\n    },\r\n    '& .typo':{\r\n        fontFamily: 'be Vietnam',\r\n        fontWeight: 400,\r\n        fontSize: '16px',\r\n        lineHeight: '28px',\r\n        marginLeft: '10px',\r\n        color: 'black'\r\n    },\r\n    '& .button':{\r\n        borderRadius: '50px'\r\n    },\r\n    '&:hover .button':{\r\n        backgroundColor: '#EA6A12',\r\n        color: 'white'\r\n    },\r\n    '&:hover .icon':{\r\n        color: 'white'\r\n    },\r\n    '&:hover .typo':{\r\n        color: 'white'\r\n    },\r\n})\r\n\r\nconst Admin=[\r\n        {name:'Thống kê',id:'statistic'},\r\n        {name:'Tạo menu',id:'create_menu'},\r\n        {name:'Đơn hàng',id:'order_report'}]\r\n\r\n\r\nconst categories = [\r\n    'pizza', 'dessert', 'appetizer', 'vegetable', 'kid', 'drink'\r\n]\r\nexport const MenuBar = ()=>{\r\n    const navigate = useNavigate();\r\n    const [expand, SetExpand] = useState(false);\r\n    const [focus, SetFocus] = useState('');\r\n    const {currentUser} = useAuth();\r\n   // const categories = useSelector(state => state.categories);\r\n    const switchExpand = ()=>{\r\n        SetExpand(prev => !prev);\r\n    }\r\n    return(\r\n    <Box sx={{\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        alignSelf: 'stretch',\r\n        backgroundColor: 'white',\r\n        boxShadow: \"0px 10px 30px rgba(234, 106, 18, 0.05)\",\r\n        zIndex: 200,\r\n        display: 'flex'\r\n    }}\r\n    onMouseLeave = {() =>{switchExpand(); SetFocus('')}}\r\n    onMouseEnter = {switchExpand}\r\n    >\r\n    <Collapse in={expand} unmountOnExit orientation=\"horizontal\">\r\n    <AppBar\r\n        position='sticky'\r\n        sx={{\r\n            minWidth:'200px',\r\n            boxShadow: 'none',\r\n            backgroundColor: 'white'\r\n        }}\r\n        \r\n        >\r\n            <Box sx={{\r\n            marginTop: '10px',\r\n            marginBottom: '10px'\r\n        }}>\r\n        <Badge\r\n        badgeContent={<Avatar src=\"/sweet.png\"\r\n        sx={{\r\n            width: 22,\r\n            height: 22,\r\n        }}\r\n        />}\r\n        overlap=\"circular\"\r\n        >\r\n            <Avatar \r\n                sx={{\r\n                    backgroundColor: 'rgba(234, 106, 18, 0.32)',\r\n                    width: 60,\r\n                    height: 60,\r\n                    color: 'black'\r\n                }}\r\n                \r\n            >\r\n                <Typography variant=\"h2\" sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 48,\r\n                    lineHeight: 120\r\n                }}>\r\n                    A\r\n                </Typography>\r\n            </Avatar>\r\n        </Badge>\r\n        </Box>\r\n            <Divider light/>\r\n            <List\r\n                spacing={2}\r\n                sx={{\r\n                    marginTop: '10px'\r\n                }}\r\n            >\r\n                <CustomListItem>\r\n                    <ListItemButton className='button' onClick={()=>{navigate('/')}}>\r\n                    <HomeRoundedIcon className='icon'/>\r\n                    <Typography className='typo'>\r\n                        Trang chủ\r\n                    </Typography>\r\n                    </ListItemButton>\r\n                </CustomListItem>\r\n\r\n                {currentUser &&\r\n                <>\r\n                <CustomListItem>\r\n                    <ListItemButton className='button' onClick={()=>{SetFocus(\r\n                        prev => {return prev==='user'? '': 'user'}\r\n                    )}}>\r\n                    <AccountCircleRoundedIcon className='icon'/>\r\n                    <Typography className='typo' component = 'pre'>\r\n                        Admin{'      '} \r\n                    </Typography>   \r\n                    {focus==='user'?<ExpandLessIcon/>: <ExpandMoreIcon/>}\r\n                    </ListItemButton>\r\n                </CustomListItem>\r\n\r\n                <Collapse in={focus==='user'} unmountOnExit>\r\n                    \r\n                    <List>\r\n                    {\r\n                    Admin.map(item => {\r\n                        return(\r\n                            <CustomListItem sx={{\r\n                                pl: 4\r\n                            }}>\r\n                                <ListItemButton className='button' onClick = {()=>{navigate( item.id)}}>\r\n                                <FiberManualRecordIcon className='icon'/>\r\n                                <Typography className='typo'>\r\n                                    {item.name}\r\n                                </Typography>\r\n                                </ListItemButton>\r\n                            </CustomListItem>\r\n                        )\r\n                    })\r\n                    }\r\n                    </List>\r\n                </Collapse>\r\n                </>}\r\n\r\n                <CustomListItem>\r\n                    <ListItemButton className='button' onClick={()=>{SetFocus(prev => {return prev==='menu'? '': 'menu'})}}>\r\n                    <MenuRoundedIcon className='icon'/>\r\n                    <Typography className='typo' component=\"pre\">\r\n                        Thực đơn {'      '} \r\n                    </Typography>\r\n                    {focus==='menu'?<ExpandLessIcon/>: <ExpandMoreIcon/>}\r\n                    </ListItemButton>\r\n                </CustomListItem>\r\n\r\n                <Collapse in={focus==='menu'} unmountOnExit>\r\n                    \r\n                        <List>\r\n                        {\r\n                        categories.map(category => {\r\n                            return(\r\n                                <CustomListItem sx={{\r\n                                    pl: 4\r\n                                }}>\r\n                                    <ListItemButton className='button' onClick = {()=>{navigate('/menu/' + category)}}>\r\n                                    <FiberManualRecordIcon className='icon'/>\r\n                                    <Typography className='typo'>\r\n                                        {name[category]}\r\n                                    </Typography>\r\n                                    </ListItemButton>\r\n                                </CustomListItem>\r\n                            )\r\n                        })\r\n                        }\r\n                        <CustomListItem sx={{\r\n                                    pl: 4\r\n                                }}>\r\n                                    <ListItemButton className='button' onClick = {()=>{navigate('/combo')}}>\r\n                                    <FiberManualRecordIcon className='icon'/>\r\n                                    <Typography className='typo'>\r\n                                        Combo\r\n                                    </Typography>\r\n                                    </ListItemButton>\r\n                                </CustomListItem>\r\n                        </List>\r\n                    </Collapse>\r\n                { !currentUser &&\r\n                <CustomListItem>\r\n                    <ListItemButton className='button' onClick={()=>{navigate('/order')}}>\r\n                    <ContactSupportRoundedIcon className='icon'/>\r\n                    <Typography className='typo'>\r\n                        Đơn của bạn\r\n                    </Typography>\r\n                    </ListItemButton>\r\n                </CustomListItem> }\r\n            </List>\r\n        </AppBar>    \r\n    </Collapse>\r\n    <Collapse in={!expand} unmountOnExit orientation=\"horizontal\">\r\n        <AppBar\r\n        position='sticky'\r\n        sx={{\r\n        minWidth:'80px',\r\n        boxShadow: 'none',\r\n        backgroundColor: 'white'\r\n        }}>\r\n        <Box sx={{\r\n            marginTop: '10px',\r\n            marginBottom: '10px'\r\n        }}>\r\n        <Badge\r\n        badgeContent={<Avatar src=\"/sweet.png\"\r\n        sx={{\r\n            width: 22,\r\n            height: 22,\r\n        }}\r\n        />}\r\n        overlap=\"circular\"\r\n        >\r\n            <Avatar \r\n                sx={{\r\n                    backgroundColor: 'rgba(234, 106, 18, 0.32)',\r\n                    width: 60,\r\n                    height: 60,\r\n                    color: 'black'\r\n                }}\r\n                \r\n            >\r\n                <Typography variant=\"h2\" sx={{\r\n                    fontFamily: 'Playfair Display, serif',\r\n                    fontWeight: 'bold',\r\n                    fontSize: 48,\r\n                    lineHeight: 120\r\n                }}>\r\n                    A\r\n                </Typography>\r\n            </Avatar>\r\n        </Badge>\r\n        </Box>\r\n        <Divider light/>\r\n        <Stack\r\n            spacing={2}\r\n            sx={{\r\n                marginTop: '10px',\r\n                alignItems: 'center'\r\n            }}\r\n        >\r\n            <CustomIconButton>\r\n            <HomeRoundedIcon className='icon'/>\r\n            </CustomIconButton>\r\n            {currentUser &&\r\n            <CustomIconButton>\r\n             <AccountCircleRoundedIcon className='icon'/>\r\n            </CustomIconButton>}\r\n            <CustomIconButton>\r\n            <DashboardRoundedIcon className='icon'/>\r\n            </CustomIconButton>\r\n            {!currentUser &&\r\n            <CustomIconButton>\r\n            <YoutubeSearchedForRoundedIcon className='icon'/>\r\n            </CustomIconButton>}\r\n        </Stack>\r\n    </AppBar>\r\n    </Collapse>\r\n\r\n    </Box>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport {Box, Divider, IconButton, Stack, Typography, Card, List, ListItem, Chip, Collapse} from \"@mui/material\";\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useSelector} from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AddRounded from \"@mui/icons-material/AddRounded\";\r\nimport { ExpandLess, ExpandMore, RemoveRounded } from \"@mui/icons-material\";\r\nconst round = (num)=> Math.round(num * 100) / 100;\r\nexport const PizzaCartItem = (props)=>{\r\n    const cartInfo = props.cartInfo\r\n    const cartId = props.cartId\r\n    const pizza = props.pizza\r\n    const handleCartChange = props.handleCartChange;\r\n    const navigate = useNavigate();\r\n    const remove = ()=>{\r\n        handleCartChange(cartId);\r\n    }\r\n    return(\r\n        <Box sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            //maxHeight: '200px'\r\n            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n            backgroundColor:'white',\r\n            borderRadius: {md: '200px 0px 150px 200px', sm: '10px', xs: '10px'},\r\n            p: 1,\r\n            minWidth: '300px'\r\n        }}>\r\n            <Box\r\n            sx={{\r\n                display: {md: 'block', sm: 'none', xs: 'none'}\r\n            }}\r\n            >\r\n            <img\r\n            src={pizza.image_url}\r\n            alt={pizza.title}\r\n            style={{\r\n                borderRadius: '200px',\r\n                width: '150px',\r\n                height: '150px',\r\n                boxShadow: '5px 0px 20px rgba(0, 0, 0, 0.1)',\r\n                zIndex: 2,\r\n                objectFit: 'cover'\r\n            }}\r\n            />\r\n            </Box>\r\n            <Stack\r\n            sx={{\r\n                display: 'flex',\r\n                width: '90%',\r\n                boxSizing: 'border-box',\r\n                zIndex: 1,\r\n                padding: {md: '5px 50px 5px 50px', sm: '5px 10px 5px 20px'},\r\n            }}>\r\n                <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                }}\r\n                >\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{pizza.title}\r\n                    </Typography>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        marginRight: '20px',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        display: {md: 'block', sm: 'none', xs: 'none'}\r\n                    }}\r\n                    >Tổng tiền:  {cartInfo.total}VND\r\n                    </Typography>\r\n                        <IconButton\r\n                        onClick={() =>{\r\n                            navigate(\"/pizza/\" + cartInfo.pizzaId, \r\n                            {state: {\r\n                                id: cartId,\r\n                                size: cartInfo.size,\r\n                                sole: cartInfo.sole,\r\n                                number: cartInfo.number,\r\n                                total: cartInfo.total,\r\n                                toppings: cartInfo.toppings\r\n                            }}\r\n                            )\r\n                        }}\r\n                        sx={{\r\n                            width: {md: '40px', sm: '30px', xs: '20px'},\r\n                            height: {md: '40px', sm: '30px', xs: '20px'},\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n                            '&:hover, &:active':{\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        >\r\n                            <ModeEditIcon sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                        </IconButton>\r\n                        <IconButton\r\n                        sx={{\r\n                            width: {md: '40px', sm: '30px', xs: '20px'},\r\n                            height: {md: '40px', sm: '30px', xs: '20px'},\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n                            '&:hover, &:active':{\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        onClick={remove}\r\n                        >\r\n                            <DeleteIcon sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                            \r\n                        </IconButton>\r\n                    </Stack>\r\n                </Box>\r\n                <Stack\r\n                direction=\"row\"\r\n                spacing={3}\r\n                >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '16px', sm: '14px', xs: '13px'},\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >Cỡ: {pizza.size[cartInfo.size].type_detail}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '16px', sm: '14px', xs: '13px'},\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >Đế: {pizza.type[cartInfo.sole]}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '16px', sm: '14px', xs: '13px'},\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >Số lượng: {cartInfo.number}\r\n                    </Typography>\r\n                </Stack>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        marginRight: '20px',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        display: {md: 'none', sm: 'block', xs: 'block'}\r\n                    }}\r\n                    >Tổng tiền: {cartInfo.total}đ\r\n                    </Typography>\r\n                <Divider sx={{width: '50%'}}/>\r\n                <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    //width: '90%',\r\n                    //justifyContent: 'space-between'\r\n                }}>\r\n\r\n                    {\r\n                        pizza.topping.map((topping, toppingId)=>{\r\n                            return cartInfo.toppings[toppingId] && \r\n                            <Chip label={topping.topping_name} sx={{\r\n                                margin: '5px 5px 5px 0',\r\n                                fontFamily: 'be Vietnam'\r\n                            }}/>\r\n                        })\r\n                        // : <Chip label='No Topping' sx={{\r\n                        //     margin: '5px 5px 5px 0',\r\n                        //     fontFamily: 'be Vietnam'\r\n                        // }}/>\r\n                    }\r\n                </Box>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\nexport const ExtraCartItem = (props)=>{\r\n    const name = props.extra.title;\r\n    const image = props.extra.image_url;\r\n    const price = props.extra.price;\r\n    const extraId = props.extraId;\r\n    const handleClick = props.handleClick;\r\n    const category = props.category;\r\n    const [num, SetNum] = useState(props.number ? props.number : 1);\r\n    return(\r\n        <Box sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            //maxHeight: '200px'\r\n            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n            backgroundColor:'white',\r\n            borderRadius: {md: '200px 0px 150px 200px', sm: '10px', xs: '10px'},\r\n            p: 1,\r\n            minWidth: '300px',\r\n            marginTop: '20px'\r\n        }}>\r\n            <Box\r\n            sx={{\r\n                display: {md: 'block', sm: 'none', xs: 'none'}\r\n            }}\r\n            >\r\n            <img\r\n            src={image}\r\n            alt={name}\r\n            style={{\r\n                borderRadius: '200px',\r\n                width: '150px',\r\n                height: '150px',\r\n                boxShadow: '5px 0px 20px rgba(0, 0, 0, 0.1)',\r\n                objectFit: 'cover'\r\n            }}\r\n            />\r\n            </Box>\r\n            <Stack\r\n            sx={{\r\n                display: 'flex',\r\n                width: '90%',\r\n                boxSizing: 'border-box',\r\n                zIndex: 1,\r\n                padding: {md: '5px 50px 5px 50px', sm: '5px 10px 5px 20px'},\r\n            }}>\r\n                <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                }}\r\n                >\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{name}\r\n                    </Typography>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        marginRight: '20px',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        display: {md: 'block', sm: 'none', xs: 'none'}\r\n                    }}\r\n                    >Tổng tiền:  {round(num * price)}VND\r\n                    </Typography>\r\n                        <IconButton\r\n                        sx={{\r\n                            width: {md: '40px', sm: '30px', xs: '20px'},\r\n                            height: {md: '40px', sm: '30px', xs: '20px'},\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n                            '&:hover, &:active':{\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        onClick={() =>{\r\n                            handleClick(category, extraId, true, false, num*price);\r\n                        }}\r\n                        >\r\n                            <DeleteIcon sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                            \r\n                        </IconButton>\r\n                    </Stack>\r\n                </Box>\r\n                <Stack spacing={2} direction=\"row\">\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '20px', sm: '16px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Số lượng: \r\n            </Typography>\r\n            <Stack direction=\"row\" spacing={5}\r\n            sx={{\r\n                alignItems: 'center',\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                borderRadius: '100px'\r\n            }}\r\n            >\r\n                <IconButton\r\n                onClick = {()=>{\r\n                    const newNum = (num === 1)? 1: num - 1;\r\n                    if(num > 1)\r\n                    handleClick(category, extraId, false, false, price, {\r\n                        number: newNum,\r\n                        total: round(newNum * price)\r\n                    });\r\n                    SetNum(newNum);\r\n                }}\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <RemoveRounded\r\n                    \r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{num}\r\n                </Typography>\r\n                <IconButton\r\n                onClick = {()=>{\r\n                    const newNum = (num === 10) ? 10: num + 1;\r\n                    if(num < 10)\r\n                    handleClick(category, extraId, false, true, price, {\r\n                        number: newNum,\r\n                        total: round(newNum * price)\r\n                    });\r\n                    SetNum(newNum);\r\n                }}\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <AddRounded\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n            </Stack>\r\n            </Stack>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        marginRight: '20px',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        display: {md: 'none', sm: 'block', xs: 'block'}\r\n                    }}\r\n                    >Tổng tiền: {round(price * num)}VND\r\n                    </Typography>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\nexport const ComboMiniItem = (props) =>{\r\n    const image = props.image;\r\n    const title = props.title;\r\n    return(\r\n        <Box\r\n        sx={{\r\n            borderRadius: '25px',\r\n            backgroundColor : 'rgba(252, 237, 227, 0.3)',\r\n            height: '50px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '30%',\r\n            margin: '10px'\r\n        }}\r\n        >\r\n            <img\r\n            src={image}\r\n            alt={title}\r\n            style={{\r\n                borderRadius: '50px',\r\n                width: '60px',\r\n                height: '60px',\r\n                objectFit: 'cover'\r\n            }}\r\n            />\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '16px', sm: '14px', xs: '13px'},\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginLeft: '10%'\r\n                    }}\r\n                    >{title}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\nexport const ComboCartItem = (props)=>{\r\n    const cartId = props.cartId;\r\n    const cartInfo = props.cartInfo;\r\n    const combo = useSelector(state => state.combos.entities[cartInfo.comboId])\r\n    const handleComboChange = props.handleComboChange\r\n    const [expand, setExpand] = useState(false);\r\n    const categories = {\r\n        'pizza':{\r\n            number: combo.pizza ? combo.pizza : 0, slot: cartInfo.pizzaSlot, selector: useSelector(state => state.pizzas.entities)\r\n        },\r\n        'kid':{\r\n            number: combo.kid ? combo.kid : 0, slot: cartInfo.kidSlot, selector: useSelector(state => state.kids.entities)\r\n        },\r\n        'vegetable':{\r\n            number: combo.vegetable ? combo.vegetable : 0, slot: cartInfo.vegetableSlot, selector: useSelector(state => state.vegetables.entities)\r\n        },\r\n        'appetizer':{\r\n            number: combo.appetizer ? combo.appetizer : 0, slot: cartInfo.appetizerSlot, selector: useSelector(state => state.appetizers.entities)\r\n        },\r\n        'dessert':{\r\n            number: combo.dessert ? combo.dessert : 0, slot: cartInfo.dessertSlot, selector: useSelector(state => state.desserts.entities)\r\n        },\r\n        'drink':{\r\n            number: combo.drink ? combo.drink : 0, slot: cartInfo.drinkSlot, selector: useSelector(state => state.drinks.entities)\r\n        },\r\n    }\r\n    if(combo.free){\r\n        categories['pizza'].number += combo.free.pizza ? combo.free.pizza : 0;\r\n        categories['kid'].number += combo.free.kid ? combo.free.kid : 0;\r\n        categories['vegetable'].number += combo.free.vegetable ? combo.free.vegetable : 0;\r\n        categories['appetizer'].number += combo.free.appetizer ? combo.free.appetizer : 0;\r\n        categories['dessert'].number += combo.free.dessert ? combo.free.dessert : 0;\r\n        categories['drink'].number += combo.free.drink ? combo.free.drink : 0;\r\n    }\r\n    const navigate = useNavigate()\r\n    return (\r\n        <Box sx={{\r\n            width: '100%',\r\n            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n            backgroundColor:'white',\r\n            borderRadius: '10px',\r\n            minWidth: '300px'\r\n        }}>\r\n            <Box sx= {{\r\n                display: 'flex',\r\n                width: '100%',\r\n                p: 1,alignItems: 'center',\r\n            }}>\r\n            <Box\r\n            sx={{\r\n                display: {md: 'block', sm: 'none', xs: 'none'}\r\n            }}\r\n            >\r\n            <img\r\n            src={combo.image}\r\n            alt={combo.title}\r\n            style={{\r\n                borderRadius: '10px',\r\n                width: '150px',\r\n                height: '150px',\r\n                //boxShadow: '5px 0px 20px rgba(0, 0, 0, 0.1)',\r\n                zIndex: 2,\r\n                objectFit: 'cover'\r\n            }}\r\n            />\r\n            \r\n            </Box>\r\n            <Stack\r\n            sx={{\r\n                width: '90%',\r\n                boxSizing: 'border-box',\r\n                zIndex: 1,\r\n                padding: {md: '5px 50px 5px 50px', sm: '5px 10px 5px 20px'},\r\n            }}>\r\n                <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                }}\r\n                >\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{combo.title}\r\n                    </Typography>\r\n                    <Stack direction=\"row\" spacing={2}>\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        marginRight: '20px',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        display: {md: 'block', sm: 'none', xs: 'none'}\r\n                    }}\r\n                    >Tổng tiền: {cartInfo.total}VND\r\n                    </Typography>\r\n                        <IconButton\r\n                        onClick={() =>{\r\n                            navigate(\"/combo/\" + cartInfo.comboId, \r\n                            {state: {\r\n                                cartId: cartId,\r\n                                cartInfo: cartInfo\r\n                            }})\r\n                        }}\r\n                        sx={{\r\n                            width: {md: '40px', sm: '30px', xs: '20px'},\r\n                            height: {md: '40px', sm: '30px', xs: '20px'},\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n                            '&:hover, &:active':{\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        >\r\n                            <ModeEditIcon sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                        </IconButton>\r\n                        <IconButton\r\n                        sx={{\r\n                            width: {md: '40px', sm: '30px', xs: '20px'},\r\n                            height: {md: '40px', sm: '30px', xs: '20px'},\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n                            '&:hover, &:active':{\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        onClick={() =>{\r\n                            handleComboChange(cartId)\r\n                        }}\r\n                        >\r\n                            <DeleteIcon sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                            \r\n                        </IconButton>\r\n                        <IconButton\r\n                        sx={{\r\n                            width: {md: '40px', sm: '30px', xs: '20px'},\r\n                            height: {md: '40px', sm: '30px', xs: '20px'},\r\n                            backgroundColor: 'white',\r\n                            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n                            '&:hover, &:active':{\r\n                                backgroundColor: 'white'\r\n                            }\r\n                        }}\r\n                        onClick={() =>{setExpand(prev => !prev)}}\r\n                        >\r\n                            {\r\n                            !expand ?\r\n                            <ExpandMore sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                            : <ExpandLess sx={{\r\n                                width: {md: '30px', sm: '20px', xs: '15px'},\r\n                                height: {md: '30px', sm: '20px', xs: '15px'},\r\n                            }}/>\r\n                            }\r\n                        </IconButton>\r\n                    </Stack>\r\n                </Box>\r\n                <Stack\r\n                direction=\"row\"\r\n                spacing={3}\r\n                >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '16px', sm: '14px', xs: '13px'},\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{combo.off > 0 ? combo.off + \" %Off\" : \"Bonus\"}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '16px', sm: '14px', xs: '13px'},\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >Số lượng: {cartInfo.number}\r\n                    </Typography>\r\n                </Stack>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        marginRight: '20px',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        display: {md: 'none', sm: 'block', xs: 'block'}\r\n                    }}\r\n                    >Tổng tiền: {cartInfo.total}VND\r\n                </Typography>\r\n                \r\n            </Stack>\r\n            </Box>\r\n            \r\n            <Collapse\r\n                in={expand}\r\n                >\r\n                    <Divider sx ={{\r\n                    margin: '0 20px'\r\n                    }}/>\r\n                    <Box\r\n                    sx={{\r\n                    //backgroundColor : 'rgba(252, 237, 227, 0.3)',\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    justifyContent: 'space-between',\r\n                    p: 3\r\n                    }}\r\n                    >\r\n                        {\r\n                            Object.values(categories).map(category =>{\r\n                                if(!category.number) return false\r\n                                const range = []\r\n                                for(let i = 0; i < category.number;i++)range.push(i)\r\n                                return range.map(i =>{\r\n                                    const productId = category.slot[i].productId\r\n                                    return productId && category.selector[productId] && <ComboMiniItem \r\n                                    image = {category.selector[productId].image_url}\r\n                                    title = {category.selector[productId].title}/>\r\n                                })\r\n                            })\r\n                        }\r\n                    </Box>\r\n            </Collapse>\r\n        </Box>\r\n    )\r\n}\r\nexport const EmptyCart = () =>{\r\n    return(\r\n        <Box\r\n        sx={{width: '100%'}}\r\n        >\r\n            <img\r\n            src= 'pizza1.png'\r\n            alt='empty cart'\r\n            />\r\n        </Box>\r\n\r\n    )\r\n}\r\nexport const Cart = (props)=>{\r\n    const categories = {\r\n        'dessert':{\r\n            selector: useSelector(state => state.desserts),\r\n        },\r\n        'drink':{\r\n            selector: useSelector(state => state.drinks),\r\n        },\r\n        'vegetable':{\r\n            selector: useSelector(state => state.vegetables),\r\n        },\r\n        'kid':{\r\n            selector: useSelector(state => state.kids),\r\n        },\r\n        'appetizer':{\r\n            selector: useSelector(state => state.appetizers),\r\n        }\r\n    }\r\n    const cart = useSelector(state => state.cart);\r\n    const cartExtras = useSelector(state => state.cartExtras);\r\n    const cartCombos = useSelector(state => state.cartCombos);\r\n    const allPizzas = useSelector(state => state.pizzas.entities);\r\n    \r\n    return (\r\n        <Card\r\n        sx={{\r\n            m: 3,\r\n            paddingLeft: '50px', paddingRight:'50px',\r\n            borderRadius: '20px'\r\n        }}\r\n        >\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '50px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        width: '100%',\r\n                        marginTop: '50px',\r\n                        marginBottom: '50px'\r\n                    }}\r\n                >Giỏ hàng của bạn\r\n            </Typography>\r\n            <Divider variant=\"middle\"/>\r\n            {\r\n            cart.ids.length > 0 &&\r\n            <Box sx = {{width: '100%'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        margin: '20px'\r\n                    }}\r\n                >Pizzas\r\n            </Typography>\r\n            <List sx={{\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                borderRadius: '10px', p: 3\r\n            }}>\r\n            { \r\n                cart.ids.map((itemId) =>{\r\n                    const cartInfo = cart.entities[itemId]\r\n                    const pizza = allPizzas[cart.entities[itemId].pizzaId]\r\n                    return cartInfo && pizza &&(\r\n                            <ListItem>\r\n                                <PizzaCartItem \r\n                                cartInfo = {cartInfo}\r\n                                pizza = {pizza}\r\n                                cartId = {itemId}\r\n                                handleCartChange = {props.handleCartChange}\r\n                                />\r\n                            </ListItem>\r\n                    )\r\n                })\r\n            }\r\n            </List>\r\n            </Box>\r\n            }\r\n            {\r\n            Object.keys(categories).map(category => \r\n            cartExtras[category].ids.length > 0 &&\r\n            <Box sx={{width: '100%'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        margin: '20px'\r\n                    }} \r\n                >{category.replace(/^\\w/, (c) => c.toUpperCase())}s\r\n            </Typography>\r\n            <List sx={{\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                borderRadius: '10px', p: 3\r\n            }}>\r\n            {\r\n                cartExtras[category].ids.map((itemId) =>{\r\n                    const cartItem = cartExtras[category].entities[itemId]\r\n                    const extra = categories[cartItem.category].selector.entities[itemId]\r\n                    return extra && cartItem && (\r\n                            <ListItem>\r\n                                <ExtraCartItem \r\n                                category = {category}\r\n                                extra = {extra} \r\n                                number={cartItem.number}\r\n                                handleClick = {props.handleExtraChange} \r\n                                extraId={itemId}\r\n                                />\r\n                            </ListItem>\r\n                    )\r\n                })\r\n            }\r\n            </List>\r\n            </Box>\r\n            )}\r\n            {\r\n            cartCombos.ids.length > 0 &&\r\n            <Box sx={{width: '100%'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        margin: '20px'\r\n                    }}\r\n                >Combos\r\n            </Typography>\r\n            <List sx={{\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                borderRadius: '10px',\r\n                p: 3\r\n            }}>\r\n                {\r\n                cartCombos.ids.map((cartId) =>{\r\n                    return(\r\n                            <ListItem>\r\n                                <ComboCartItem cartId = {cartId} cartInfo = {cartCombos.entities[cartId]} handleComboChange = {props.handleComboChange}/>\r\n                            </ListItem>\r\n                    )\r\n                })\r\n            }\r\n            </List>\r\n            <Divider variant=\"middle\" sx={{\r\n                marginTop: '20px',\r\n                marginBottom: '50px'\r\n            }}/>\r\n            </Box>\r\n            }\r\n            \r\n        </Card>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        ids: [],\r\n        entities: {},\r\n        nextId: 0\r\n    },\r\n    reducers: {\r\n        itemAdded(state, action){\r\n            state.ids = [...state.ids, state.nextId];\r\n            state.entities[state.nextId] = action.payload;\r\n            state.nextId += 1;\r\n        },\r\n        itemRemoved(state, action){\r\n            const id = action.payload;\r\n            const index = state.ids.indexOf(id);\r\n            if(index !== -1){\r\n                state.ids.splice(index, 1);\r\n            }\r\n        },itemUpdated(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.data;\r\n        }\r\n    }\r\n})\r\nexport const {itemAdded, itemRemoved, itemUpdated} = cartSlice.actions;\r\nexport default cartSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartComboSlice = createSlice({\r\n    name: 'cartCombos',\r\n    initialState: {\r\n        ids: [],\r\n        entities: {},\r\n        nextId: 0\r\n    },\r\n    reducers: {\r\n        itemAdded(state, action){\r\n            state.ids = [...state.ids, state.nextId];\r\n            state.entities[state.nextId] = action.payload;\r\n            state.nextId += 1;\r\n        },\r\n        itemRemoved(state, action){\r\n            const id = action.payload;\r\n            const index = state.ids.indexOf(id);\r\n            if(index !== -1){\r\n                state.ids.splice(index, 1);\r\n            }\r\n        },\r\n        itemUpdated(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.data;\r\n        }\r\n    }\r\n})\r\nexport const {itemAdded, itemRemoved, itemUpdated} = cartComboSlice.actions;\r\nexport default cartComboSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartExtraSlice = createSlice({\r\n    name: 'cartExtras',\r\n    initialState: {\r\n        'kid':{\r\n            ids: [],\r\n            entities: {}\r\n        },\r\n        'dessert':{\r\n            ids: [],\r\n            entities: {}\r\n        },\r\n        'appetizer':{\r\n            ids: [],\r\n            entities: {}\r\n        },\r\n        'drink':{\r\n            ids: [],\r\n            entities: {}\r\n        },\r\n        'vegetable':{\r\n            ids: [],\r\n            entities: {}\r\n        }\r\n    },\r\n    reducers: {\r\n        itemAdded(state, action){\r\n            const extraId = action.payload.extraId;\r\n            const category = action.payload.category;\r\n            const existingId = state[category].ids.find(id => id === extraId);\r\n            if(existingId !== undefined){\r\n                state[category].entities[extraId].number += action.payload.number;\r\n                if(state[category].entities[extraId].number > 10) state[category].entities[extraId].number = 10;\r\n                state[category].entities[extraId].total += action.payload.total;\r\n            }else{\r\n                state[category].ids.push(extraId);\r\n                state[category].entities[extraId] = action.payload\r\n            }\r\n        },\r\n        itemRemoved(state, action){\r\n            const id = action.payload.id;\r\n            const category = action.payload.category;\r\n            const index = state[category].ids.indexOf(id);\r\n            if(index !== -1){\r\n                state[category].ids.splice(index, 1);\r\n            }\r\n        },itemUpdated(state, action){\r\n            const extraId = action.payload.id;\r\n            const category = action.payload.category;\r\n            state[category].entities[extraId].number = action.payload.number;\r\n            state[category].entities[extraId].total = action.payload.total;\r\n        }\r\n    }\r\n})\r\nexport const {itemAdded, itemRemoved, itemUpdated} = cartExtraSlice.actions;\r\nexport default cartExtraSlice.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios')\r\nexport const fetchOrders = createAsyncThunk('orders/fetchOrders', async() =>{\r\n    try{\r\n        const result = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/order.json') \r\n        return result.data\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n})\r\nconst orderSlice = createSlice({\r\n    name: 'orders',\r\n    initialState: {\r\n        ids: [],\r\n        entities: {},\r\n        fetchingStatus: 'INITIAL'\r\n    },\r\n    reducers:{\r\n        addOrder(state, action){\r\n            state.ids.push(action.payload.id)\r\n            state.entities[action.payload.id] = action.payload.data\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchOrders.pending, (state, action)=>{\r\n            state.fetchingStatus='LOADING'\r\n        })\r\n        .addCase(fetchOrders.fulfilled, (state, action)=>{\r\n            state.entities = action.payload\r\n            console.log(state.entities)\r\n            state.fetchingStatus='SUCCESS'\r\n        })\r\n        .addCase(fetchOrders.rejected, (state, action)=>{\r\n            state.fetchingStatus='FAILED'\r\n        })\r\n    }\r\n})\r\nexport default orderSlice.reducer;\r\nexport const {addOrder} = orderSlice.actions;","import React, {useState} from \"react\";\r\nimport {Box, Button, Typography, Modal, TextField, Fade, Stack, Select, MenuItem, Snackbar, Checkbox, FormControlLabel} from '@mui/material';\r\nimport { Cart } from \"../components/mainCart\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {itemRemoved} from '../store/cartSlice';\r\nimport { itemRemoved as comboRemoved} from \"../store/cartComboSlice\";\r\nimport { itemRemoved as extraRemoved, itemUpdated as extraUpdated } from \"../store/cartExtraSlice\";\r\nimport { addOrder } from \"../store/orderSlice\";\r\nconst axios = require('axios')\r\nconst round = (num)=> Math.round(num * 100) / 100;\r\nexport const EmptyCart = () =>{\r\n    return(\r\n        <Box\r\n        sx={{width: '100%', marginTop: '50px',\r\n        display: 'flex', flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n        }}\r\n        >\r\n            <img\r\n            src= 'pizza1.png'\r\n            alt='empty cart'\r\n            style={{\r\n                width: '500px'\r\n            }}\r\n            />\r\n        <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '35px',\r\n                        lineHeight: '175%',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        marginTop: '50px'\r\n                    }}\r\n                    >Giỏ hàng trống\r\n                </Typography>\r\n        </Box>\r\n\r\n    )\r\n}\r\nexport const CartPage = ()=>{\r\n    const dispatch = useDispatch();\r\n    const [pay, SetPay] = useState(false);\r\n    const cart = useSelector(state => state.cart);\r\n    const cartExtras = useSelector(state => state.cartExtras);\r\n    const cartCombos = useSelector(state => state.cartCombos);\r\n    const totalPizza = cart.ids.reduce((total, itemId)=>{return round(total + cart.entities[itemId].total)}, 0);\r\n    let totalExtra = 0;\r\n    Object.keys(cartExtras).map(category => {\r\n        totalExtra += cartExtras[category].ids.reduce((total, itemId) => {return round(total + cartExtras[category].entities[itemId].total)}, 0);\r\n    })\r\n    const totalCombo = cartCombos.ids.reduce((total, itemId) => {return round(total + cartCombos.entities[itemId].total)}, 0);\r\n    const [totalValue, SetTotalValue] = useState(round(totalPizza + totalExtra + totalCombo));\r\n    const handleCartChange = (_id)=>{\r\n        SetTotalValue(prev => round(prev - cart.entities[_id].total));\r\n        dispatch(itemRemoved(_id));\r\n    }\r\n    const handleComboChange = (_id)=>{\r\n        SetTotalValue(prev => round(prev - cartCombos.entities[_id].total));\r\n        dispatch(comboRemoved(_id));\r\n    }   \r\n    const handleExtraChange = (category, _id, remove ,add, delta, newData)=>{\r\n        if(remove){\r\n            SetTotalValue(prev => round(prev - delta));\r\n            dispatch(extraRemoved({id: _id, category: category}));\r\n        }else{\r\n            if(add){\r\n                SetTotalValue(prev => round(prev + delta));\r\n            }else{\r\n                SetTotalValue(prev => round(prev - delta));\r\n            }\r\n            \r\n            dispatch(extraUpdated({\r\n                id: _id,\r\n                category: category,\r\n                ...newData\r\n            }))\r\n            \r\n        }\r\n    }   \r\n    const [customer, setCustomer] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [province, setProvince] = useState('Ha Noi')\r\n    const [address, setAddress] = useState('')\r\n    const [inPlace, setInPlace] = useState(false);\r\n    const [posted, setPosted] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const pros = ['Ha Noi', 'Ha Nam', 'Ninh Binh', 'Nam Dinh', 'Hai Duong', 'Hung Yen']\r\n    const validForm = () =>{\r\n        if(customer.length ===0) return false;\r\n        if(!inPlace){\r\n        if(address.length ===0) return false;\r\n        if(province.length ===0) return false;\r\n        }\r\n        return /[0-9]{10}/.test(phone)\r\n    }\r\n    const pizzas = useSelector(state => state.pizzas.entities)\r\n    const combos = useSelector(state => state.combos.entities)\r\n    const makeOrder = () =>{\r\n        const shipment = inPlace || province ==='Ha Noi'? 0 : 30000\r\n        const time = Date.now()\r\n        const detail = {\r\n            'pizza': [],\r\n            'drink': [],\r\n            'vegetable': [],\r\n            'kid': [],\r\n            'appetizer': [],\r\n            'dessert': [],\r\n        }\r\n        const orderedPizzas = []\r\n        if(cart.ids.length > 0){\r\n            cart.ids.map(cartId =>{\r\n                const cartPizza = cart.entities[cartId]\r\n                const pizzaId = cartPizza.pizzaId;\r\n                const pizza = pizzas[pizzaId]\r\n                orderedPizzas.push({\r\n                    id: pizzaId,\r\n                    size: pizza.size[cartPizza.size].type_detail,\r\n                    type: pizza.type[cartPizza.sole],\r\n                    topping: pizza.topping.filter((top,index) => cartPizza.toppings[index] === true).map(top => top.topping_name),\r\n                    number: cartPizza.number\r\n                })\r\n            })\r\n        }\r\n        if(cartCombos.ids.length > 0){\r\n            cartCombos.ids.map(cartId =>{\r\n                const cartCombo = cartCombos.entities[cartId]\r\n                const comboId = cartCombo.comboId\r\n                const combo = combos[comboId]\r\n                const comboNumber = cartCombo.number;\r\n                let pizzaNumber = combo.pizza\r\n                if(combo.free && combo.free.pizza) pizzaNumber += combo.free.pizza;\r\n                if(pizzaNumber && pizzaNumber > 0){\r\n                    const pizzaSlot = cartCombo.pizzaSlot\r\n                    for(let i = 0;i< pizzaNumber;i++){\r\n                        const pizzaInfo = pizzaSlot[i].pizzaInfo\r\n                        const pizzaId = pizzaSlot[i].productId\r\n                        const pizza = pizzas[pizzaId]\r\n                        orderedPizzas.push({\r\n                            id: pizzaId,\r\n                            size: pizza.size[pizzaInfo.size].type_detail,\r\n                            type: pizza.type[pizzaInfo.type],\r\n                            topping: pizza.topping.filter((top,index) => pizzaInfo.topping[index] === true).map(top => top.topping_name),\r\n                            number: comboNumber\r\n                        })\r\n                    }\r\n                }\r\n                const categories = {\r\n                    'drink': {\r\n                        comNumber: combo.drink ? combo.drink : 0 + combo.free && combo.free.drink ? combo.free.drink : 0, slot: cartCombo.drinkSlot\r\n                    },\r\n                    'kid': {\r\n                        comNumber: combo.kid ? combo.kid : 0 + combo.free && combo.free.kid ? combo.free.kid : 0, slot: cartCombo.kidSlot\r\n                    },\r\n                    'appetizer': {\r\n                        comNumber: combo.appetizer ? combo.appetizer : 0 + combo.free && combo.free.appetizer ? combo.free.appetizer : 0, slot: cartCombo.appetizerSlot\r\n                    },\r\n                    'dessert': {\r\n                        comNumber: combo.dessert ? combo.dessert : 0 + combo.free && combo.free.dessert ? combo.free.dessert : 0, slot: cartCombo.dessertSlot\r\n                    },\r\n                    'vegetable': {\r\n                        comNumber: combo.vegetable ? combo.vegetable : 0 + combo.free && combo.free.vegetable ? combo.free.vegetable : 0, slot: cartCombo.vegetableSlot\r\n                    },\r\n                }\r\n                Object.keys(categories).map(category =>{\r\n                const number = categories[category].comNumber;\r\n                if(number && number > 0){\r\n                    const slot = categories[category].slot\r\n                    for(let i = 0;i< number;i++){\r\n                        const id = slot[i].productId\r\n                        const existedIndex = detail[category].findIndex(item => item.id === id)\r\n                        if(existedIndex === -1)detail[category].push({\r\n                            id: id,\r\n                            number: comboNumber\r\n                        })\r\n                        else{\r\n                            detail[category][existedIndex].number += comboNumber\r\n                        }\r\n                    }\r\n                }\r\n                })\r\n            })\r\n        }\r\n        Object.keys(cartExtras).map(category => {\r\n            cartExtras[category].ids.map(id =>{\r\n                const existedIndex = detail[category].findIndex(item => item.id === id)\r\n                        if(existedIndex === -1)detail[category].push({\r\n                            id: id,\r\n                            number: cartExtras[category].entities[id].number\r\n                        })\r\n                        else{\r\n                            detail[category][existedIndex].number += cartExtras[category].entities[id].number\r\n                        }\r\n            })\r\n        })\r\n        detail['pizza'] = orderedPizzas;\r\n        const fullAddress = inPlace ? \"Đặt tại quán\" :address + ',' + province\r\n        const order = {\r\n            \"customer\": customer,\r\n            \"phone\": phone,\r\n            \"address\": fullAddress,\r\n            \"status\": 'Pending',\r\n            \"time\": time,\r\n            \"total payment\": totalValue,\r\n            \"shipping payment\": shipment,\r\n            \"detail\": detail \r\n        }\r\n        console.log(order)\r\n        return order\r\n    }\r\n    const postOrder = async () =>{\r\n        const order = makeOrder()\r\n        try{\r\n            const result = await axios.post(\r\n                'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/order.json',\r\n                order\r\n            )\r\n            if(result && result.status === 200){\r\n                console.log(result)\r\n                setMessage('Thêm món thành công')\r\n                dispatch(addOrder({id:result.data.name, data: order}))\r\n            }\r\n            else setMessage('Có lỗi xảy ra!')\r\n            setPosted(true)\r\n        }catch(err){\r\n            setMessage('Có lỗi xảy ra!')\r\n            setPosted(true)\r\n        }\r\n    }\r\n    return totalValue > 1 ?(\r\n            <Box style={{\r\n                width: '100%',\r\n                }}>\r\n                <Cart style={{zIndex: 0}} handleCartChange = {handleCartChange} \r\n                handleComboChange={handleComboChange}\r\n                handleExtraChange={handleExtraChange}\r\n                />\r\n                <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-evenly',\r\n                    alignItems: 'center', marginBottom: '100px'\r\n                }}\r\n                >\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Tổng tiền: {totalValue} VND\r\n                    </Typography>\r\n                    <Button variant=\"contained\" \r\n                    disabled = {totalValue < 0.01}\r\n                    onClick = {()=>{SetPay(true)}}\r\n                    sx={{\r\n                        zIndex: 10,\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '50px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '16px',\r\n                        width: '100px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                    }}\r\n                >\r\n                    Đặt hàng\r\n                </Button>\r\n                </Box>\r\n                <Modal open={pay} onClose = {() => {SetPay(false)}}>\r\n            <Fade in={pay} timeout={500}>\r\n            <Stack\r\n            spacing = {1}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 4,\r\n                boxShadow: 24,\r\n                width: '500px'\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    > Vui lòng điền đơn này                \r\n                </Typography>\r\n                <TextField\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Tên\"\r\n                value={customer}\r\n                onChange={(e) =>{\r\n                    setCustomer(e.target.value)\r\n                }}\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                />\r\n                <TextField\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Số điện thoại\"\r\n                value = {phone}\r\n                onChange={(e) =>{\r\n                    setPhone(e.target.value)\r\n                }}\r\n                multiline\r\n                type=\"number\"\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                />\r\n                <FormControlLabel\r\n                label=\"Đặt tại quán\"\r\n                control = {\r\n                    <Checkbox\r\n                        color=\"warning\"\r\n                        checked={inPlace}\r\n                        onChange={e => setInPlace(prev => !prev)}\r\n                    />\r\n                }\r\n                />\r\n                \r\n                \r\n                \r\n                \r\n                { !inPlace &&\r\n                <Select\r\n                label=\"Province\"\r\n                value={province}\r\n                onChange={(e) =>{\r\n                    setProvince(e.target.value)\r\n                }}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}}\r\n                MenuProps={{style: {fontFamily: 'be Vietnam'}}}\r\n                SelectDisplayProps={{style: {fontFamily: 'be Vietnam'}}}\r\n                color='warning'\r\n                >\r\n                    {\r\n                        pros.map(pro => \r\n                            <MenuItem \r\n                            value={pro}\r\n                            sx={{\r\n                                fontFamily: 'be Vietnam'\r\n                            }}\r\n                            >\r\n                                {pro}\r\n                            </MenuItem>    \r\n                        )    \r\n                    }\r\n                </Select>\r\n                }\r\n                {!inPlace &&\r\n                <TextField\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Địa chỉ chi tiết\"\r\n                multiline\r\n                value={address}\r\n                onChange={(e) =>{\r\n                    setAddress(e.target.value)\r\n                }}\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                />\r\n                }\r\n                \r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '15px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                    >Phí ship: {inPlace || province ==='Ha Noi'? 0 : 30000}\r\n                </Typography>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                    >Tổng đơn: {totalValue + (inPlace || province ==='Ha Noi'? 0 : 30000)}\r\n                </Typography>\r\n                <Button variant=\"contained\" \r\n                    disabled={!validForm()}\r\n                    onClick={()=>{\r\n                        postOrder()\r\n                        SetPay(false)\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2,\r\n                        width: '150px'\r\n                    }}\r\n                    >\r\n                    Đặt hàng\r\n                </Button>\r\n            </Stack>\r\n            </Fade>\r\n            </Modal>\r\n            <Snackbar\r\n        open={posted}\r\n        onClose={() => {setPosted(false)}}\r\n        message={message}\r\n        autoHideDuration={6000}\r\n        />\r\n            </Box>\r\n    ): <EmptyCart/>\r\n}","import { Box, Divider, Stack, Typography, Card, Button, List } from '@mui/material';\r\nimport RemoveShoppingCartIcon from '@mui/icons-material/RemoveShoppingCart';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nconst CartItem = (props)=>{\r\n    const name = props.name;\r\n    const image = props.image;\r\n    const number = props.number;\r\n    const price = props.price;\r\n    return(\r\n    <Box\r\n    sx={{\r\n        display: 'flex',\r\n        width: '100%',\r\n        backgroundColor: '#FFF5EE',\r\n        borderRadius: '100px 0 50px 100px',\r\n        margin: '20px 0',\r\n        maxHeight: '90px',\r\n        alignItems: 'center'\r\n    }}\r\n    >\r\n        <img\r\n            src={image}\r\n            alt={name}\r\n            style={{\r\n            borderRadius: '50%',\r\n            boxShadow: '10px 0px 10px rgb(0,0,0, 0.1)',\r\n            width: '100px',\r\n            height: '100px',\r\n            zIndex: 100,\r\n            objectFit:'cover'\r\n            }}\r\n        />\r\n        <Stack\r\n        sx={{\r\n\r\n            width: '100%',\r\n            zIndex: 0,\r\n            marginLeft: '10px'\r\n        }}\r\n        >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{name}\r\n                </Typography>\r\n                \r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                width: '100%',\r\n                justifyContent: 'space-between',\r\n                paddingRight: '10px'\r\n            }}\r\n            >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    ><strong style={{color: 'red'}}>x{' '}</strong>{number}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px',\r\n                    }}\r\n                    > {price} VND\r\n                </Typography>\r\n            </Box>\r\n        </Stack>\r\n    </Box>\r\n    )\r\n}\r\n\r\nexport const Cart = ()=>{\r\n    const categories = {\r\n        'dessert':{\r\n            selector: useSelector(state => state.desserts.entities),\r\n        },\r\n        'drink':{\r\n            selector: useSelector(state => state.drinks.entities),\r\n        },\r\n        'vegetable':{\r\n            selector: useSelector(state => state.vegetables.entities),\r\n        },\r\n        'kid':{\r\n            selector: useSelector(state => state.kids.entities),\r\n        },\r\n        'appetizer':{\r\n            selector: useSelector(state => state.appetizers.entities),\r\n        }\r\n    }\r\n    const cart = useSelector(state => state.cart);\r\n    const cartExtras = useSelector(state => state.cartExtras);\r\n    const cartCombos = useSelector(state => state.cartCombos);\r\n    const pizzas = useSelector(state => state.pizzas.entities);\r\n    const combos = useSelector(state => state.combos.entities);\r\n    const navigate = useNavigate();\r\n    const emptyCart = () =>{\r\n        if (cart.ids.length > 0) return false;\r\n        if (cartCombos.ids.length > 0) return false;\r\n        const cates = Object.keys(categories)\r\n        for(let i = 0; i< cates.length ;i++){\r\n            if(cartExtras[cates[i]].ids.length > 0) return false;\r\n        }\r\n        return true;\r\n    }\r\n    return(\r\n        <Card\r\n        sx={{\r\n            borderRadius: '24px',\r\n            height: '100%',\r\n            width: {md: '30%', sm: '100%', xs: '100%'},\r\n            margin: '50px 0'\r\n        }}\r\n        >\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginLeft: '10%'\r\n                    }}\r\n                >Giỏ hàng của tôi\r\n            </Typography>\r\n            \r\n            <Divider variant=\"middle\"/>\r\n            <List sx={{width: '100%', height: '90%', overflow: 'auto', \r\n            maxHeight: '600px',  padding: '0 20px',\r\n            minHeight: {md: '150px', sm: '50px', xs: '50px'}\r\n            }}>\r\n            \r\n            {\r\n                cart.ids && cart.ids.map(id =>{\r\n                    const cartInfo = cart.entities[id]\r\n                    const pizza = pizzas[cartInfo.pizzaId]\r\n                    return pizza && cartInfo && (\r\n                        <CartItem \r\n                        image={pizza.image_url} \r\n                        name={pizza.title}\r\n                        number={cartInfo.number} \r\n                        price={cartInfo.total}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            \r\n            {\r\n            Object.keys(categories).map(category => \r\n            cartExtras[category] && cartExtras[category].ids && cartExtras[category].ids.length > 0 &&\r\n            \r\n                cartExtras[category].ids.map((itemId) =>{\r\n                    const extra = categories[category].selector[itemId]\r\n                    const cartInfo = cartExtras[category].entities[itemId]\r\n                    return extra && cartInfo && (\r\n                        <CartItem \r\n                            image = {extra.image_url}\r\n                            name = {extra.title}\r\n                            number = {cartInfo.number}\r\n                            price = {cartInfo.total}\r\n                        />\r\n                    )\r\n                })\r\n            )}\r\n            \r\n            {\r\n            cartCombos.ids && cartCombos.ids.map(id =>{\r\n                    const cartInfo = cartCombos.entities[id]\r\n                    const comboId = cartInfo.comboId;\r\n                    const combo = combos[comboId];\r\n                    return combo && cartInfo && (\r\n                        <CartItem \r\n                        image={combo.image} \r\n                        name={combo.title}\r\n                        number={cartInfo.number} \r\n                        price={cartInfo.total}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                emptyCart()\r\n                &&\r\n                <Box sx = {{\r\n                    marginTop: '30px'\r\n                }}>\r\n                <RemoveShoppingCartIcon sx={{\r\n                    width: '50px', height: '50px'\r\n                }}/>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '16px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        \r\n                    }}\r\n                >Giỏ hàng đang rỗng\r\n                </Typography>\r\n                </Box>\r\n                \r\n            }\r\n            </List>\r\n            <Divider variant=\"middle\" />\r\n            <Button variant=\"contained\" \r\n                    onClick={()=>{navigate('/cart')}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        maxWidth: '150px',\r\n                        color: 'white',\r\n                        margin: '10px 0',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        }\r\n                    }}\r\n            >\r\n                Kiểm tra giỏ\r\n            </Button>\r\n        </Card>\r\n    )\r\n}","import { Box, Divider , IconButton, Rating, Stack, Typography,} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport KeyboardArrowRightRoundedIcon from '@mui/icons-material/KeyboardArrowRightRounded';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Category = (props)=>{\r\n    const label ={\r\n        'Kid':'Đồ cho bé',\r\n        'Pizza':'Pizza',\r\n        'Appetizer':'Khai vị',\r\n        'Vegetable':'Đồ chay',\r\n        'Drink':'Đồ uống',\r\n        'Dessert':'Tráng miệng'\r\n    }\r\n    const navigate = useNavigate();\r\n    const category = props.category;\r\n    const [hov, setHov] = useState(false);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n    }\r\n    return(\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {switchHov}\r\n        sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-evenly',\r\n            alignItems: 'center',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\r\n            minWidth: '112px',\r\n            minHeight: '236px',\r\n            borderRadius: '24px',\r\n            marginRight: {md: '20px', sm: '10px', xs: '10px'},\r\n            marginBottom: '10px'\r\n        }}\r\n        >\r\n            <img\r\n            src={category.image}\r\n            alt={category.name}\r\n            style={{\r\n            borderRadius: '50%',\r\n            width: '64px',\r\n            height: '64px'\r\n            }}\r\n            />\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{label[category.name]  }\r\n            </Typography>\r\n            <Divider variant=\"middle\" \r\n            sx={{\r\n                color: hov? 'white': 'rgba(234, 106, 18, 0.7)',\r\n                width: hov? '51px': '32px',\r\n                \r\n            }}\r\n            />\r\n            <IconButton\r\n            onClick = {()=>{\r\n                navigate(category.menuLink); \r\n            }}\r\n            sx={{\r\n                backgroundColor: hov? 'white': 'rgba(234, 106, 18, 0.7)',\r\n                '&:active, &:hover':{\r\n                    backgroundColor:  'white'\r\n                }\r\n            }}\r\n            >\r\n                <KeyboardArrowRightRoundedIcon\r\n                    sx={{\r\n                        color: hov ?'rgba(234, 106, 18, 0.7)': 'white',\r\n                    }}\r\n                />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\nexport const ViewAll = ()=>{\r\n    return(\r\n        <Stack\r\n        direction='row'\r\n        spacing={1}\r\n        sx={{\r\n            alignItems: 'center'\r\n        }}\r\n        >\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: 'black',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Xem tất cả\r\n            </Typography>\r\n            <IconButton\r\n            size=\"small\"\r\n            sx={{\r\n                backgroundColor: 'rgba(234, 106, 18, 0.7)',\r\n                width: '24px',\r\n                height: '24px',\r\n                '&:hover':{\r\n                    backgroundColor: 'rgba(234, 106, 18, 0.9)'\r\n                }\r\n            }}\r\n            >\r\n                <KeyboardArrowRightRoundedIcon\r\n                    sx={{\r\n                        color: 'white',\r\n                    }}\r\n                />\r\n            </IconButton>\r\n        </Stack>\r\n    )\r\n}\r\nexport const PizzaCard = (props)=>{\r\n    const navigate = useNavigate();\r\n    const link = props.link;\r\n    const image = props.image;\r\n    let name = props.name;\r\n    if(name.length > 20){\r\n        name = name.substring(0, 15);\r\n        name += '...';\r\n    }\r\n    const price = props.price;\r\n    const rate = props.rate;\r\n    const [hov, setHov] = useState(false);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n    }\r\n    return (\r\n        <Box\r\n        sx={{\r\n            marginTop: '100px',\r\n            alignSelf: 'flex-end'\r\n        }}\r\n        >\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {switchHov}\r\n        onClick={()=>{navigate(link)}}\r\n        sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'start',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\r\n            width: '200px',\r\n            height: '230px',\r\n            borderRadius: '24px',\r\n            p: 3,\r\n            boxSizing: 'border-box',\r\n            marginRight: {md: 0, sm: 2, xs: 2}\r\n        }}\r\n        >\r\n            <img\r\n            src={image}\r\n            alt={name}\r\n            style={{\r\n            borderRadius: '50%',\r\n            boxShadow: '0px 30px 30px rgba(234, 106, 18, 0.05)',\r\n            alignSelf: 'center',\r\n            marginTop: '-1000px',\r\n            transform: 'translateY(-20px)',\r\n            width: '150px', height: '150px',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{name}\r\n            </Typography>\r\n            <Rating value={rate} readOnly\r\n            sx={{\r\n                color: hov? 'white':'#EA6A12',\r\n            }}\r\n            icon={<StarRoundedIcon/>}\r\n            emptyIcon={<StarRoundedIcon/>}\r\n            />\r\n            <Box sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                marginTop: '20%'\r\n            }}>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': '#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{price} VND\r\n                </Typography>\r\n                <IconButton\r\n                size=\"small\"\r\n                sx={{\r\n                width: '24px',\r\n                height: '24px'\r\n                }}\r\n                >\r\n                <AddCircleRoundedIcon\r\n                    sx={{\r\n                        color: hov ? 'white':'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n                </IconButton> \r\n            </Box>\r\n        </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport const Categories = ()=>{\r\n    const categories = [\r\n        {name: 'Pizza', image: '/pizza1.png', menuLink : '/menu/pizza'},\r\n        {name: 'Vegetable', image: '/vegetable.png', menuLink : '/menu/vegetable'},\r\n        {name: 'Kid', image: '/sweet.png', menuLink : '/menu/kid'},\r\n        {name: 'Dessert', image: '/trend1.png', menuLink : '/menu/dessert'},\r\n        {name: 'Appetizer', image: '/trend2.png', menuLink : '/menu/appetizer'},\r\n        {name: 'Drink', image: '/trend3.png', menuLink : '/menu/drink'},\r\n    ]\r\n\r\n    return(\r\n    <Box sx = {{\r\n        width: '100%'\r\n    }}>\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '30px', sm: '20px', xs: '16px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start', \r\n                        m: 3,\r\n                        \r\n                    }}\r\n                    >Danh mục các món\r\n        </Typography>\r\n    <Box\r\n    sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        paddingLeft: '5%'\r\n    }}\r\n    >\r\n        {\r\n            categories.map(category =>{\r\n                return <Category category={category}/>\r\n            })\r\n        }\r\n    </Box>\r\n    \r\n    </Box>\r\n    )\r\n}\r\nexport const Newest = () =>{\r\n    const pizzas = useSelector(state => state.pizzas);\r\n    let sortedIds = [...pizzas.ids];\r\n    sortedIds.sort((id1, id2)=> pizzas.entities[id2].rating - pizzas.entities[id1].rating)\r\n    return (\r\n        <Box sx = {{\r\n            width: '100%'\r\n        }}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '30px', sm: '20px', xs: '16px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m:3\r\n                    }}\r\n                    >Đánh giá tốt nhất\r\n        </Typography>\r\n    <Box\r\n    sx={{\r\n        display: 'flex',\r\n        justifyContent: {md: 'space-evenly', sm: 'flex-start', xs: 'space-evenly'},\r\n        flexWrap: 'wrap',\r\n    }}\r\n    >\r\n        {\r\n            sortedIds.map((id, index) => {\r\n                return (index < 4) && <PizzaCard image={pizzas.entities[id].image_url} name={pizzas.entities[id].title} rate={pizzas.entities[id].rating} \r\n                price={pizzas.entities[id].price} link={`/pizza/${id}`}/>\r\n            })\r\n        }\r\n    </Box>\r\n        </Box>\r\n    )\r\n}","import React from \"react\";\r\nexport const ImageDecorator = ()=>{\r\n    return(\r\n        <img\r\n        src='./burgerBack.png'\r\n        alt='decorator'\r\n        style={{\r\n            position: 'absolute',\r\n            bottom: '0',\r\n            right: '-10px',\r\n            zIndex: 4\r\n        }}\r\n        />\r\n    )\r\n}","import AddCircleRounded from '@mui/icons-material/AddCircleRounded';\r\nimport { Divider, IconButton, Stack, Typography, Box } from '@mui/material';\r\nimport React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom'\r\nconst label ={\r\n    'kid':'Đồ cho bé',\r\n    'pizza':'Pizza',\r\n    'appetizer':'Khai vị',\r\n    'vegetable':'Đồ chay',\r\n    'drink':'Đồ uống',\r\n    'dessert':'Tráng miệng'\r\n}\r\nexport const Trending = (props)=>{\r\n    const navigate = useNavigate();\r\n    const order = props.order;\r\n    const category = props.category;\r\n    const [hov, setHov] = useState(false);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n        console.log(order);\r\n    }\r\n    return(\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {switchHov}\r\n        sx={{\r\n            boxShadow:'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            maxWidth: '274px',\r\n            maxHeight: '237px',\r\n            borderRadius: '24px',\r\n            p: 3,\r\n            boxSizing: 'border-box',\r\n            marginRight: '5%',\r\n            marginLeft: '2.5%'\r\n        }}\r\n        >\r\n            <Stack spacing={1} sx={{minWidth: '150px'}}>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        \r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: hov? 'white':'#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >👑 {label[category]}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{order.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: hov? 'white': '#959895',\r\n                        textAlign: 'start',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{order.order_number} người đã gọi                 \r\n            </Typography>\r\n            <Divider variant=\"light\"  sx={{\r\n                width: '50%',\r\n                color: hov?'white': 'rgb(0,0,0,0.5)'\r\n            }}/>\r\n            <Stack\r\n            direction='row'\r\n            spacing={1}\r\n            sx={{\r\n                marginTop: '20px'\r\n            }}\r\n            >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': '#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{order.price} VND\r\n                </Typography>\r\n                <IconButton\r\n                size=\"small\"\r\n                sx={{\r\n                width: '24px',\r\n                height: '24px'\r\n                }}\r\n                onClick = {() =>{\r\n                    navigate('/'+category+'/'+props.id)\r\n                }}\r\n                >\r\n                <AddCircleRounded\r\n                    sx={{\r\n                        color: hov ? 'white':'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n                </IconButton>\r\n            </Stack>\r\n            </Stack>\r\n            \r\n            <img\r\n            src={order.image_url}\r\n            alt={order.title}\r\n            style={{\r\n            borderRadius: '100px',\r\n            boxShadow: '-10px 0px 30px rgba(0, 0, 0, 0.1)',\r\n            alignSelf: 'center',\r\n            width: '160px',\r\n            height: '160px',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const TrendingList = ()=>{\r\n    let categories = [\r\n        {category: 'pizza', selector: useSelector(state => state.pizzas)},\r\n        {category: 'vegetable', selector: useSelector(state => state.vegetables)},\r\n        {category: 'kid', selector: useSelector(state => state.kids)},\r\n        {category: 'dessert', selector: useSelector(state => state.desserts)},\r\n        {category: 'appetizer', selector: useSelector(state => state.appetizers)},\r\n        {category: 'drink', selector: useSelector(state => state.drinks)},\r\n    ]\r\n    categories.map((category) =>{\r\n        const products = category.selector;\r\n        const sortedIds = [...products.ids];\r\n        sortedIds.sort((id1, id2) => products.entities[id2].order_number - products.entities[id1].order_number)\r\n        category.mostOrder = products.entities[sortedIds[0]]\r\n        category.mostId = sortedIds[0]\r\n    })\r\n    return(\r\n        <Box\r\n        sx={{\r\n            width: '100%'\r\n        }}\r\n        >\r\n        <Box\r\n        sx={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        p: 5\r\n        }}\r\n        >\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '30px', sm: '20px', xs: '16px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Được gọi nhiều nhất\r\n        </Typography>\r\n        </Box>\r\n        <Box\r\n        sx={{\r\n            display: 'flex',\r\n            flexWrap:'wrap'\r\n        }}\r\n        >\r\n        {\r\n            categories.map(category=>{\r\n                return(\r\n                    category.selector.fetchingStatus === 'SUCCESS' && <Trending order = {category.mostOrder} category = {category.category}\r\n                    id= {category.mostId}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        </Box>\r\n        </Box>\r\n    )\r\n}","\r\nimport {React, useState} from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport const ComboCarousel = function(){\r\n    const [index, setIndex] = useState(0);\r\n    const ids = useSelector(state => state.combos.ids);\r\n    const combos = useSelector(state => state.combos.entities);\r\n    const fetchingStatus = useSelector(state => state.combos.fetchingStatus);\r\n    const navigate = useNavigate();\r\n    const handleSelect = (selectedIndex, e)=>{\r\n        setIndex(selectedIndex);\r\n    }\r\n    const handleSlid = (slidIndex, direction)=>{\r\n        setIndex(slidIndex);\r\n    }\r\n    return fetchingStatus === 'SUCCESS' &&(\r\n        \r\n        <Box>\r\n\r\n        <Box \r\n\r\n            sx ={{\r\n            flexWrap: 'nowrap',\r\n            p: {md: 5, sm: 0, xs: 0},\r\n            alignItems: 'center',\r\n            display: {md: 'flex', sm: 'none', xs: 'none'}\r\n        }}>\r\n        <Carousel indicators={false} variant=\"dark\" activeIndex={index} onSelect={handleSelect} onSlid={handleSlid}\r\n        style={{\r\n            height: '100%',\r\n            width: '72%',\r\n        }}\r\n        >\r\n            {\r\n                ids.map(id =>{\r\n                    return(\r\n                        <Carousel.Item interval={3000}>\r\n                            <img src={combos[id].banner} className=\"d-block w-100\" alt=\"img\" \r\n                            style={{\r\n                                borderRadius: \"24px\",\r\n                                height: '350px',\r\n                                objectFit: 'cover'\r\n                            }}\r\n                            onClick = {()=>{navigate('/combo/'+id)}}\r\n                            />\r\n                        </Carousel.Item>\r\n                    )\r\n                })\r\n            }\r\n            \r\n            \r\n        </Carousel>\r\n        <Carousel controls={false} activeIndex={index} fade variant=\"dark\" indicators = {false} className=\"ms-3\"\r\n        style={{\r\n            height: '100%',\r\n            width: '28%'\r\n        }}\r\n        >\r\n            {\r\n                ids.map(id =>{\r\n                    return(\r\n                        <Carousel.Item >\r\n                <Box\r\n                onClick = {()=>{navigate('/combo')}}\r\n                sx={{\r\n                    backgroundColor: 'rgba(255, 255, 255, 0.4)',\r\n                    boxShadow: '0px 20px 45px rgba(151, 151, 151, 0.05)',\r\n                    borderRadius: '24px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'flex-end',\r\n                    alignItems: 'center',\r\n                    //maxHeight: '250px',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    boxSizing: 'border-box',\r\n                }}\r\n                >\r\n                    <img\r\n                    src={combos[id].image}\r\n                    alt=\"combo\"\r\n                    style={{\r\n                        width: '200px',\r\n                        height: '200px',\r\n                        objectFit: 'cover',\r\n                        //transform: 'translateY(10%)'\r\n                        maxWidth: '250px',\r\n                        borderRadius: '150px'\r\n                        //height: '300px'\r\n                    }}\r\n                    />\r\n                    <Typography variant=\"h3\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '40px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{combos[id].off > 0 ? combos[id].off + \" % Off\": \"Tặng kèm\" }\r\n                    </Typography>\r\n                    <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{combos[id].description}            \r\n                    </Typography>\r\n                </Box>\r\n            </Carousel.Item>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </Carousel>\r\n        </Box>\r\n        <Box\r\n        sx={{\r\n            display: {md: 'none', sm: 'block', xs: 'block'}\r\n        }}\r\n        >\r\n\r\n        <Carousel controls={true} fade variant=\"dark\" indicators = {false} className=\"ms-3\"\r\n        style={{\r\n            height: '100%',\r\n            width: '90%'\r\n        }}\r\n        >\r\n            {\r\n                ids.map(id =>{\r\n                    return(\r\n                        <Carousel.Item >\r\n                <Box\r\n                sx={{\r\n                    backgroundColor: 'rgba(255, 255, 255, 0.4)',\r\n                    boxShadow: '0px 20px 45px rgba(151, 151, 151, 0.05)',\r\n                    borderRadius: '24px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'flex-end',\r\n                    alignItems: 'center',\r\n                    //maxHeight: '250px',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    boxSizing: 'border-box',\r\n                }}\r\n                >\r\n                    <img\r\n                    src={combos[id].image}\r\n                    alt=\"combo\"\r\n                    style={{\r\n                        width: '200px',\r\n                        height: '200px',\r\n                        objectFit: 'cover',\r\n                        borderRadius: '150px',\r\n                        maxWidth: '250px',\r\n                        //height: '300px'\r\n                    }}\r\n                    onClick = {()=>{navigate('/combo')}}\r\n                    />\r\n                    <Typography variant=\"h3\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '40px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{combos[id].off > 0 ? combos[id].off + \" % Off\": \"Tặng kèm\" }\r\n                    </Typography>\r\n                    <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{combos[id].description}             \r\n                    </Typography>\r\n                </Box>\r\n            </Carousel.Item>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </Carousel>\r\n                    \r\n        </Box>\r\n        </Box>\r\n    )\r\n}","import {Box} from '@mui/material';\r\nimport { Cart } from '../components/cart';\r\nimport { Categories, Newest } from '../components/categories';\r\nimport { ImageDecorator } from '../components/decorator';\r\nimport { TrendingList } from '../components/trending';\r\nimport React from 'react';\r\nimport { ComboCarousel } from '../components/carousel';\r\nexport const Home = () =>{\r\n    return(\r\n            <Box style={{\r\n            width: '100%',\r\n            }}>\r\n                <ComboCarousel/>\r\n                <Box sx={{alignItems: 'stretch', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between',\r\n                margin: '0 20px'\r\n                }}>\r\n                    <Box sx={{width: {md: '70%', sm: '100%', xs : '100%'}}}>\r\n                    <Categories/>\r\n                    <Newest/>\r\n                    </Box>\r\n                \r\n                    <Cart/>\r\n                </Box>\r\n                <ImageDecorator/>\r\n                <Box sx={{marginTop: '50px', marginBottom: '150px', paddingRight: '20px', alignItems: 'stretch',\r\n                    display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between', zIndex: 10\r\n                }}>\r\n                <TrendingList/>\r\n                </Box>\r\n                </Box>\r\n    )\r\n}","import React, { useState,useEffect } from \"react\";\r\nimport { PizzaCard } from \"./categories\";\r\nimport {IconButton, Box, Typography, styled, Pagination, Grow, CircularProgress,TextField,InputAdornment} from '@mui/material';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded';\r\nconst label ={\r\n    'Kids':'Đồ cho bé',\r\n    'Pizzas':'Pizza',\r\n    'Appetizers':'Khai vị',\r\n    'Vegetables':'Đồ chay',\r\n    'Drinks':'Đồ uống',\r\n    'Desserts':'Tráng miệng',\r\n    'Combo':'Combo',\r\n}\r\nconst useStyle = makeStyles({\r\n    textField:{\r\n    '& .MuiOutlinedInput-root': {\r\n    borderRadius:100,\r\n    border:'solid',\r\n    borderWidth:'1px',\r\n    backgroundColor:'white',\r\n    '&.Mui-focused fieldset': {\r\n        borderColor: 'white',\r\n    },\r\n    '& input':{\r\n        height:'8px',\r\n        backgroundColor:'white',\r\n        borderTopRightRadius:'100px',\r\n        borderBottomRightRadius:'100px',\r\n        \"&:-webkit-autofill\": {\r\n        WebkitBoxShadow: \"0 0 0 1000px white inset\"\r\n        }\r\n     },\r\n    },\r\n    '& fieldset':{\r\n        border:'none',\r\n        fontFamily: 'be Vietnam',\r\n        paddingLeft:'10px',\r\n    },      \r\n    width:'100%',\r\n    },\r\n    iconButton:{backgroundColor:'white'}\r\n})\r\n\r\nexport const CustomPagination = styled(Pagination)({\r\n    \"& .MuiPaginationItem-root\": {\r\n        fontFamily: 'be Vietnam'\r\n    },\r\n    \"& .MuiPaginationItem-root:active\": {\r\n        backgroundColor: 'rgb(234, 106, 18, 0.5)',\r\n    },\r\n    '& .Mui-selected': {\r\n        backgroundColor: 'rgb(234, 106, 18, 0.5)',\r\n    }\r\n})\r\n\r\nexport const PizzaMenu = ()=>{\r\n    const classes = useStyle();\r\n    const categories = {\r\n        'pizza':{\r\n            selector: useSelector(state => state.pizzas),\r\n            menuName: 'Pizzas',\r\n            singlePath: '/pizza/'\r\n        },\r\n        'dessert':{\r\n            selector: useSelector(state => state.desserts),\r\n            menuName: 'Desserts',\r\n            singlePath: '/dessert/'\r\n        },\r\n        'drink':{\r\n            selector: useSelector(state => state.drinks),\r\n            menuName: 'Drinks',\r\n            singlePath: '/drink/'\r\n        },\r\n        'vegetable':{\r\n            selector: useSelector(state => state.vegetables),\r\n            menuName: 'Vegetables',\r\n            singlePath: '/vegetable/'\r\n        },\r\n        'kid':{\r\n            selector: useSelector(state => state.kids),\r\n            menuName: 'Kids',\r\n            singlePath: '/kid/'\r\n        },\r\n        'appetizer':{\r\n            selector: useSelector(state => state.appetizers),\r\n            menuName: 'Appetizers',\r\n            singlePath: '/appetizer/'\r\n        }\r\n    }\r\n    const {category} = useParams();\r\n    const [search,setSearch] = useState('');\r\n  //  const [ids,setids] = useState([]);\r\n    const ids = categories[category].selector.ids;\r\n    const [page, setPage] = useState(1);\r\n    const fetchingStatus = categories[category].selector.fetchingStatus\r\n    const products = categories[category].selector.entities\r\n   // const ids = categories[category].selector.ids\r\n    const max = 10;\r\n    //const [page, setPage] = useState(1);\r\n    const totalPage = Math.ceil(ids.length / max);\r\n    const pageList = [];\r\n    for(let i = 1;i <= totalPage;i++)pageList.push(i);\r\n    useEffect(()=>{\r\n        setSearch('');\r\n    },[category])\r\n    \r\n    return(\r\n        <Box sx={{p: 5, marginBottom: '100px', width: '100%'}}>\r\n        <Box sx={{display:'flex',flexDirection:'row'}}>\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >{label[categories[category].menuName]}\r\n        </Typography>\r\n        <Box sx={{display:'flex',alignItems:'center'}}>\r\n        <TextField \r\n            className = {classes.textField}\r\n            placeholder=\"Tìm kiếm...\"\r\n            value={search}\r\n            onChange = {(e)=>setSearch(e.target.value)}\r\n            InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\" sx={{backgroundImage:'white'}}>\r\n                            <IconButton className = {classes.iconButton}><SearchRoundedIcon /></IconButton>\r\n                            </InputAdornment>,\r\n              }}/>\r\n             \r\n        </Box>\r\n        </Box>\r\n        {\r\n        fetchingStatus === 'SUCCESS'?\r\n        <Box>\r\n        {\r\n            pageList.map(p => {return(\r\n            <Grow in={page===p} mountOnEnter unmountOnExit timeout={page===p ? 1000: 0}>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            {   \r\n                ids.filter(id=>   \r\n                    !search ? id : products[id].title.toUpperCase().includes(search.toString().toUpperCase())\r\n                   )\r\n                .map((id, index) =>{\r\n                    return (index >= (page - 1)*max && index < page * max) &&\r\n                        <Box sx={{marginLeft: '20px'}}>\r\n                            <PizzaCard image={products[id].image_url} name={products[id].title} \r\n                            rate={products[id].rating} price={products[id].price}\r\n                            id = {id} link = {categories[category].singlePath + id}\r\n                            />\r\n                        </Box>\r\n                })\r\n            }\r\n            </Box>\r\n                </Grow>   \r\n            )})\r\n        }\r\n        </Box>\r\n        :\r\n        fetchingStatus === 'LOADING' || fetchingStatus === 'INITIAL'?\r\n        <Box sx= {{width: '100%', alignItems: 'center'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >Hãy đợi một chút\r\n            </Typography>\r\n            <CircularProgress/>\r\n        </Box>\r\n        :<Box sx= {{width: '100%', alignItems: 'center'}}>\r\n        <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '30px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    m: 3\r\n                }}\r\n                >Có vẻ có lỗi đã xảy ra\r\n        </Typography>\r\n        </Box>\r\n        }\r\n        <Box sx={{marginTop: '100px', alignItems: 'center', width: '100%', marginLeft: '40%'}}>\r\n        <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}\r\n        />\r\n        </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Box} from '@mui/material';\r\nimport { PizzaMenu } from \"../components/pizzaMenu\";\r\nimport { ComboCarousel } from \"../components/carousel\";\r\nexport const PizzaPage = ()=>{\r\n    return(\r\n            <Box style={{\r\n                width: '100%',\r\n                }}>\r\n                <ComboCarousel/>\r\n                <PizzaMenu/>\r\n            </Box>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport {Box, IconButton, Typography} from \"@mui/material\";\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport RemoveRoundedIcon from '@mui/icons-material/RemoveRounded';\r\nexport const ToppingCard = (props) =>{\r\n    const name = props.name;\r\n    const handleAdd = props.handleAdd;\r\n    const price = props.price;\r\n    const _id = props._id;\r\n    const [added, setAdded] = useState(props.added);\r\n    return (\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                borderRadius: '100px',\r\n                justifyContent: 'space-between',\r\n                width: {md: '45%', sm: '80%', xs:'90%'},\r\n                alignItems: 'center',\r\n                padding: '5px 10px 5px 20px',\r\n                boxSizing: 'border-box',\r\n                zIndex: 1,\r\n                backgroundColor: added ? '#EA6A12':'rgba(252, 237, 227, 0.3)',\r\n                marginRight: {md: '30px', sm: '0', xs:'0'},\r\n                marginBottom: '20px'\r\n            }}\r\n            >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '18px',\r\n                        lineHeight: '175%',\r\n                        color: added?'white':'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{name}\r\n                </Typography>\r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    alignItems:'center'\r\n                }}>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: added? 'white': '#EA6A12',\r\n                        textAlign: 'start',\r\n                        marginRight:'20px'\r\n                    }}\r\n                    > {price} VND\r\n                </Typography>\r\n                <IconButton\r\n                sx={{\r\n                width: '40px',\r\n                height: '40px',\r\n                '&:hover, &:active':{\r\n                    color: 'white'\r\n                }\r\n                }}\r\n                onClick={\r\n                    ()=>{\r\n                        setAdded(prev => !prev);\r\n                        handleAdd(_id, !added);\r\n                    }\r\n                }\r\n                >\r\n                {\r\n                    added ? <RemoveRoundedIcon\r\n                    sx={{\r\n                        color: 'white',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />:\r\n                    <AddCircleRoundedIcon\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                />\r\n                }\r\n                \r\n                </IconButton>\r\n                </Box>\r\n            </Box>\r\n    )\r\n}","import React from \"react\";\r\nimport {Stack, Typography, Rating, Divider} from \"@mui/material\";\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nexport const Comment = (props) =>{\r\n    const comment = props.comment;\r\n    let date = new Date(comment.comment_time * 1000)\r\n    let year = date.getFullYear()\r\n    let month = date.getMonth()\r\n    let day = date.getDate()\r\n    let hour = date.getHours()\r\n    let minute = date.getMinutes()\r\n    let second = date.getSeconds()\r\n    return(\r\n        <Stack\r\n        spacing={1}\r\n        sx={{\r\n            p: 2,\r\n            backgroundColor: 'white',\r\n            boxShadow: '1px 1px 5px rgb(0,0,0,0.2)',\r\n            borderRadius: '24px',\r\n            width: '100%',\r\n            margin: '10px 20px'\r\n        }}\r\n        >\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '16px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{comment.user_name}\r\n            </Typography>\r\n            <Stack direction = \"row\" spacing={5}>\r\n            <Rating value={comment.user_rating} readOnly\r\n                sx={{\r\n                    color: '#EA6A12',\r\n                }}\r\n                icon={<StarRoundedIcon/>}\r\n            emptyIcon={<StarRoundedIcon/>}\r\n            />\r\n                <Typography variant=\"subtitle1\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 600,\r\n                    fontSize: '13px',\r\n                    lineHeight: '175%',\r\n                    color: 'black',\r\n                    textAlign: 'start',\r\n                    marginBottom: '10px'\r\n                }}\r\n                >\r\n                    {\r\n                        'Thời gian: '+year+'/'+month+'/'+day+'-'+hour+':'+minute+':'+second\r\n                    }\r\n                </Typography>\r\n            </Stack>\r\n            <Divider sx={{width: '50%'}}/>\r\n            <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'start',\r\n                        textOverflow: 'ellipsis',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{comment.content}\r\n                </Typography>\r\n        </Stack>\r\n    )\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\n\r\nexport const fetchAllPizzas = createAsyncThunk('pizzas/fetchAllPizzas', async () =>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_main_courses.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst initialState = {\r\n    ids:[],\r\n    entities:{},\r\n    fetchingStatus: 'INITIAL'\r\n}\r\nconst pizzaSlice = createSlice({\r\n    name: 'pizzas',\r\n    initialState: initialState,\r\n    reducers: {\r\n        updatePizza(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n        },\r\n        add1Pizza(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Pizza(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllPizzas.pending, (state,action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllPizzas.fulfilled, (state,action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllPizzas.rejected, (state,action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default pizzaSlice.reducer;\r\nexport const {updatePizza,add1Pizza, delete1Pizza} = pizzaSlice.actions;\r\n\r\n","import React, { useState } from \"react\";\r\nimport {Box, Divider, IconButton, Stack, Typography, Rating, Button, List, ListItem, Modal, TextField,  Fade, Snackbar} from '@mui/material';\r\nimport KeyboardArrowLeftRoundedIcon from '@mui/icons-material/KeyboardArrowLeftRounded';\r\nimport KeyboardArrowRightRoundedIcon from '@mui/icons-material/KeyboardArrowRightRounded';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport  AddRoundedIcon  from \"@mui/icons-material/AddRounded\";\r\nimport RemoveRoundedIcon from '@mui/icons-material/RemoveRounded';\r\nimport { ToppingCard } from \"./topping\";\r\nimport { Comment } from \"./comment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { itemAdded, itemUpdated } from \"../store/cartSlice\";\r\nimport { CustomPagination } from \"./pizzaMenu\";\r\nimport { updatePizza } from \"../store/categories/pizzaSlice\";\r\nconst axios = require('axios')\r\nconst round = (num)=> Math.round(num * 100) / 100;\r\nexport const SinglePizza = ()=>{\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const {productId} = useParams();\r\n    const pizza = useSelector(state => state.pizzas.entities[productId]);\r\n    const toppings = pizza.topping;\r\n    const comments = pizza.comment ? pizza.comment : [];\r\n    const sizes = pizza.size;\r\n    const soles = pizza.type;\r\n    const [size, setSize] = useState(location.state? location.state.size: 0);\r\n    const [sole, setSole] = useState(location.state? location.state.sole: 0);\r\n    const [num, setNum] = useState(location.state? location.state.number: 1);\r\n    const [total, setTotal] = useState(location.state? round(location.state.total / location.state.number) : pizza.price);\r\n    const [cmt, setCmt] = useState(false);\r\n    const [tops, setTops] = useState(location.state? location.state.toppings: {});\r\n    const [done, setDone] = useState(false);\r\n    //comment\r\n    const [yourName, setYourName] = useState('')\r\n    const [yourCmt, setYourCmt] = useState('')\r\n    const [yourRate, setYourRate] = useState(0)\r\n    const [posted, setPosted] = useState(false);\r\n    const [message, setMess] = useState('');\r\n    const max = 2\r\n    const totalPage = Math.ceil(comments ? comments.length / max : 1);\r\n    const pageList = [];\r\n    for(let i = 1;i <= totalPage;i++)pageList.push(i);\r\n    const [page, setPage] = useState(1);\r\n    const closeCmt = () =>{\r\n            setCmt(false)\r\n            setYourName('')\r\n            setYourCmt('')\r\n    }\r\n    const postComment = async () =>{\r\n        try{\r\n            const newCmt = {\r\n                comment_time: Math.floor(Date.now()/1000),\r\n                content: yourCmt,\r\n                user_name: yourName,\r\n                user_rating: yourRate\r\n            }\r\n            let newPizza = {}\r\n            newPizza = Object.assign(newPizza, pizza)\r\n            newPizza.comment = [...comments, newCmt]\r\n            newPizza.rating = (pizza.rating * comments.length + yourRate)/ (comments.length + 1)\r\n            const result = await axios.put(\r\n                    'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_main_courses/' + productId + '/.json',\r\n                    newPizza)\r\n            if(result.status === 200){\r\n                dispatch(updatePizza({id: productId, item: newPizza}))\r\n                setMess('Your comment has been posted successfully')\r\n                setPosted(true)\r\n            }\r\n            setYourRate(0);\r\n            closeCmt()\r\n        }catch(err){\r\n            setMess('Sorry, Failed to post your comment')\r\n            setPosted(true)\r\n            console.log(err)\r\n        }\r\n    }\r\n    const handleAdd = (_id, add)=>{\r\n        setTotal(prev => add ? round(prev + toppings[_id].topping_price) : round(prev - toppings[_id].topping_price));\r\n        if(add) {\r\n            \r\n            setTops(prev => {\r\n                prev[_id] = true;\r\n                return prev;\r\n            });\r\n        }\r\n        else {\r\n            setTops(prev => {\r\n                prev[_id] = false;\r\n                return prev;\r\n                });\r\n        }\r\n    }\r\n    const sizeChanged = (o, n)=>{\r\n        setSize(n);\r\n        setTotal(prev => round(prev - sizes[o].type_price + sizes[n].type_price));\r\n    }\r\n    return(\r\n        <Box\r\n        sx={{\r\n            backgroundColor: 'white',\r\n            borderRadius: '24px',\r\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\r\n            padding: '20px 0px',\r\n            alignItems: 'center',\r\n            m:3,marginBottom: '150px'\r\n        }}\r\n        >\r\n        <Box\r\n        sx={{\r\n            backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n            display: 'flex',\r\n            borderRadius: '24px',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            p: 5,\r\n            m: 5,\r\n            flexWrap: {xs: 'wrap',sm: 'wrap', md: 'nowrap'}\r\n        }}\r\n        >\r\n            <img\r\n            src={pizza.image_url}\r\n            alt={pizza.title}\r\n            style={{\r\n            width: '300px',\r\n            height: '300px',\r\n            borderRadius: '50%',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            <Stack spacing={2}\r\n            sx={{\r\n                marginLeft: {md: '100px', sm: 0, xs: 0},\r\n                marginTop: {md: 0, sm: '50px', xs: '50px'}\r\n            }}>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n                    >{pizza.title}\r\n                </Typography>\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'start',\r\n                        textOverflow: 'ellipsis',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{pizza.description}\r\n                </Typography>\r\n                <Divider sx = {{maxWidth: '50%'}}/>\r\n                <div\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '20px',\r\n                        lineHeight: '175%',\r\n                        color:'#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >$ {pizza.price + sizes[size].type_price}\r\n                </div>\r\n                <Rating value={pizza.rating} readOnly\r\n                sx={{\r\n                    color: '#EA6A12',\r\n                }}\r\n                icon={<StarRoundedIcon/>}\r\n            emptyIcon={<StarRoundedIcon/>}\r\n            />\r\n                <Stack spacing={1} direction=\"row\"\r\n                sx={{\r\n                    alignItems: 'center'\r\n                }}\r\n                >\r\n                <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '20px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Cỡ: \r\n                </Typography>\r\n                <IconButton \r\n                onClick={() => sizeChanged(size, size > 0 ? size - 1 : 0)}\r\n                >\r\n                    <KeyboardArrowLeftRoundedIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: '20px',\r\n                        lineHeight: '175%',\r\n                        color:'#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{sizes[size].type_detail}\r\n                </Typography>\r\n                <IconButton \r\n                onClick={() => sizeChanged(size, (size + 1) < sizes.length ? size + 1 : size)}\r\n                >\r\n                    <KeyboardArrowRightRoundedIcon/>\r\n                </IconButton>\r\n                </Stack>\r\n                <Stack spacing={1} direction=\"row\"\r\n                \r\n                sx={{\r\n                    alignItems: 'center'\r\n                }}\r\n                \r\n                >\r\n                <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '20px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Đế: \r\n                </Typography>\r\n                <IconButton\r\n                onClick={() => setSole(prev => {return prev === 1 ? 0: 1})}\r\n                >\r\n                    <KeyboardArrowLeftRoundedIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: '20px',\r\n                        lineHeight: '175%',\r\n                        color:'#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{soles[sole]}\r\n                </Typography>\r\n                <IconButton \r\n                onClick={() => setSole(prev => {return prev === 1 ? 0: 1})}\r\n                >\r\n                    <KeyboardArrowRightRoundedIcon/>\r\n                </IconButton>\r\n                </Stack>\r\n            </Stack>\r\n        </Box>\r\n        <Divider variant=\"middle\" sx={{m: 5}}/>\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 1,\r\n                        marginLeft: '50px'\r\n                    }}\r\n                    >Toppings\r\n        </Typography>\r\n        \r\n        <Box\r\n        sx={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            m: 5,\r\n        }}\r\n        >\r\n            {\r\n            toppings.map((topping, toppingId) =>{\r\n                return (<ToppingCard \r\n                    name={topping.topping_name} \r\n                    price = {topping.topping_price} \r\n                    _id = {toppingId} \r\n                    handleAdd = {handleAdd} \r\n                    added = {tops[toppingId]}\r\n                />\r\n                )\r\n            })\r\n            }\r\n        </Box>\r\n        <Divider variant=\"middle\" sx ={{marginBottom: 3}}/>\r\n        <Box sx={{\r\n            m: 1,\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around'\r\n        }}>\r\n            <Stack spacing={2} direction=\"row\">\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Số lượng: \r\n            </Typography>\r\n            <Stack direction=\"row\" spacing={5}\r\n            sx={{\r\n                alignItems: 'center',\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                borderRadius: '100px'\r\n            }}\r\n            >\r\n                <IconButton\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <RemoveRoundedIcon\r\n                    onClick = {()=>{setNum(prev => (prev === 1)? 1: prev - 1)}}\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{num}\r\n                </Typography>\r\n                <IconButton\r\n                onClick = {()=>{setNum(prev => (prev === 10)? 10: prev + 1)}}\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <AddRoundedIcon\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n            </Stack>\r\n            </Stack>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Tổng tiền:  {round(total * num)} VND\r\n            </Typography>\r\n        </Box>\r\n        <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        if(location.state){\r\n                            dispatch(itemUpdated({\r\n                                id: location.state.id,\r\n                                data: {\r\n                                    pizzaId: productId,\r\n                                    size: size,\r\n                                    sole: sole,\r\n                                    toppings: tops,\r\n                                    total: round(total * num),\r\n                                    number: num\r\n                                }\r\n                            }));\r\n                        }else{\r\n                            dispatch(itemAdded({\r\n                                pizzaId: productId,\r\n                                size: size,\r\n                                sole: sole,\r\n                                toppings: tops,\r\n                                total: round(total * num),\r\n                                number: num\r\n                            }));\r\n                        }\r\n                        setDone(true);\r\n                        \r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginTop: 3\r\n                    }}\r\n                    >\r\n                        {location.state ? \"Cập nhập giỏ hàng\" : \"Thêm vào giỏ hàng\"}\r\n        </Button>\r\n        <Divider variant=\"middle\" sx={{m: 5}}/>\r\n        <Box sx={{display: 'flex', justifyContent: 'space-between', padding: '20px 50px'}}>\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                    >Bình luận\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n                    onClick = {() => {setCmt(true)}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Thêm bình luận\r\n        </Button>\r\n        <Modal open={cmt} onClose = {closeCmt}>\r\n            <Fade in={cmt} timeout={500}>\r\n            <Stack\r\n            spacing = {1}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 4,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '80%', xs: '90%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Bình luận của bạn\r\n                </Typography>\r\n                <TextField\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Tên\"\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                onChange={(e)=>{\r\n                    setYourName(e.target.value)\r\n                }}\r\n                />\r\n                <TextField\r\n                color='warning'\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Bình luận\"\r\n                multiline\r\n                rows={4}\r\n                maxRows = {4}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                onChange={(e)=>{\r\n                    setYourCmt(e.target.value)\r\n                }}\r\n                />\r\n                <Stack direction=\"row\" spacing={5}\r\n                sx={{alignItems: 'center'}}\r\n                >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '15px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Đánh giá: \r\n                </Typography>\r\n                <Rating\r\n                \r\n                onChange={(e,newRate)=>{\r\n                    setYourRate(newRate)\r\n                }}\r\n                sx={{\r\n                    color: '#EA6A12',\r\n                }}\r\n                icon={<StarRoundedIcon/>}\r\n                emptyIcon={<StarRoundedIcon/>}\r\n                />\r\n                </Stack>\r\n                {\r\n                (yourName.length === 0 || yourCmt.length === 0) &&\r\n                (<Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '15px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    Hãy điền đủ thông tin\r\n                </Typography>)\r\n                }\r\n                <Button variant=\"contained\" \r\n                    onClick={postComment}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    disabled = {yourName.length === 0 || yourCmt.length === 0}\r\n                    >\r\n                    Đăng\r\n                </Button>\r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        </Box>\r\n            \r\n            <Divider variant=\"middle\"/>\r\n            <Box sx={{margin: '0 20px'}}>\r\n            <List sx={{width: '100%', height: '90%', backgroundColor: 'rgba(252, 237, 227, 0.3)', alignSelf: 'center'\r\n            }}>\r\n            {\r\n                comments && comments.length > 0 ? \r\n                comments.map((comment, index) =>\r\n                    (index >= (page - 1)*max && index < page * max) ?\r\n                            <ListItem>\r\n                                <Comment comment = {comment}/>\r\n                            </ListItem>\r\n                    : false\r\n                )\r\n                : \r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        marginTop: '50px'\r\n                    }}\r\n                >No comment\r\n            </Typography>\r\n            }\r\n            </List>\r\n            </Box>\r\n            <Box sx={{width: '100%', justifyContent: 'center', marginTop: '10px', display: 'flex'}}>\r\n            <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}/>\r\n            </Box>\r\n        <Divider variant=\"middle\" sx={{m: 5}}/>\r\n        <Modal open={done} >\r\n            <Fade in={done} timeout={500}>\r\n            <Stack\r\n            spacing={3}\r\n            sx={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '24px',\r\n                width: '500px',\r\n                p: 5,\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                alignItems: 'center'\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Đã thêm vào giỏ hàng\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={5}>\r\n                <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        setDone(false);\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        height: '45px',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Hoàn thành\r\n                </Button>\r\n                <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        navigate('/cart');\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        height: '45px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Xem giỏ hàng\r\n                </Button>\r\n                </Stack>\r\n                \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        <Snackbar\r\n        open={posted}\r\n        onClose={() => {setPosted(false)}}\r\n        message={message}\r\n        autoHideDuration={6000}\r\n        />\r\n        </Box>\r\n        \r\n    )\r\n}","import React from \"react\";\r\nimport {Box, CircularProgress, Typography} from '@mui/material';\r\nimport { SinglePizza } from \"../components/singlePizza\";\r\nimport { useSelector } from \"react-redux\";\r\nexport const SinglePage = ()=>{\r\n    const fetchingStatus = useSelector(state => state.pizzas.fetchingStatus)\r\n    return(\r\n        <Box style={{\r\n            width: '100%',\r\n        }}>\r\n        {\r\n        fetchingStatus === 'SUCCESS'?\r\n            <SinglePizza/>:\r\n        fetchingStatus === 'LOADING' || fetchingStatus === 'INITIAL'?\r\n        <Box sx= {{width: '100%', alignItems: 'center'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >Hãy chờ một chút\r\n            </Typography>\r\n            <CircularProgress/>\r\n        </Box>\r\n        :<Box sx= {{width: '100%', alignItems: 'center'}}>\r\n        <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '30px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    m: 3\r\n                }}\r\n                >Có lỗi xảy ra\r\n        </Typography>\r\n        </Box>\r\n        }\r\n        </Box>\r\n    )\r\n}","import MonetizationOnRoundedIcon from '@mui/icons-material/MonetizationOnRounded';\r\nimport BookmarkRoundedIcon from '@mui/icons-material/BookmarkRounded';\r\nimport AccountCircleRoundedIcon from '@mui/icons-material/AccountCircleRounded';\r\nimport styles from \"./dashboard.module.css\"\r\nimport { Box } from '@mui/system';\r\nimport { Typography} from '@mui/material';\r\nimport React, {useEffect,useState} from 'react';\r\nimport {Home} from '../pages/Home';\r\nimport { useAuth } from '../context/AuthContext';\r\nexport const MostOrder=()=>{\r\n    const [menu, setMenu] = useState({});\r\n    const [status,setStatus]=useState('pending');\r\n    const[mostList,setmostList]=useState([]);\r\n    useEffect(()=>{\r\n        async function fetchMenu() {\r\n            \r\n            const menuURL = 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu.json';\r\n            setStatus('pending')\r\n            const response = await fetch(menuURL);\r\n            const responseJSON =await response.json();\r\n            setMenu(responseJSON);\r\n            if(response.status===200){\r\n                setStatus('success')\r\n                const array=[];\r\n                    for(const entry of Object.entries(responseJSON)){\r\n                    \r\n                            \r\n                        const v=Object.values(entry[1])\r\n                        v.sort((v1,v2)=>v2.order_number-v1.order_number)\r\n                        v[0].category=entry[0];\r\n                        array.push(v[0])\r\n                        \r\n        }setmostList(array)\r\n            \r\n            }\r\n            else{\r\n                setStatus('fail')\r\n            }\r\n            \r\n        }\r\n        fetchMenu();\r\n    },[])\r\n    \r\n    \r\n       \r\n    \r\n    \r\n\r\n        \r\n    return status==='success'&&(\r\n        <Box sx={{ \r\n        display: 'grid',\r\n        flexDirection: 'row',\r\n        alignItems: 'flex-start',\r\n        padding: '0px'\r\n        }}>\r\n             <table className={styles.table}>\r\n                            <tr>\r\n                                <th style={{width:'20%',color:'black',fontSize:'30px'}}>Ảnh</th>\r\n                                <th style={{width:'50%',color:'black',fontSize:'30px',textAlign:'start',paddingLeft:'10%' }}>Món</th>\r\n                                <th style={{width:'30%',color:'black',fontSize:'30px',textAlign:'start'  }}>Menu</th>\r\n                            </tr>\r\n            {mostList.map(v=>\r\n                <tr style={{borderSpacing:'10px'}}>\r\n                    <td style={{textAlign:'center'}}>\r\n                    <img\r\n                    src={v.image_url}\r\n                    alt=''\r\n                    style={{\r\n                        \r\n                        borderRadius: '200px',\r\n                        width: '80px',\r\n                        height: '80px',\r\n                       \r\n                    }}\r\n                    />\r\n                    </td>\r\n                    <td style={{textAlign:'start'}}>\r\n                        <Box>\r\n                        <Typography variant='h1' sx={{\r\n                                    marginTop:'8px',\r\n                                    fontWeight:550,\r\n                                    fontSize:'28px',\r\n                                    textAlign:'start',\r\n                                    color:'black',\r\n                                    paddingLeft:'20%'\r\n                                }}>{v.title}</Typography>\r\n                        <Typography variant='p' sx={{\r\n                                    marginTop:'8px',\r\n                                    fontWeight:550,\r\n                                    fontSize:'15px',\r\n                                    textAlign:'start',  \r\n                                    color:'gray',\r\n                                    paddingLeft:'20%',\r\n                                    \r\n                                }}>{`${v.order_number} dishes ordered`}\r\n                        </Typography>\r\n                        </Box>\r\n                    </td>\r\n                    <td>\r\n                    <Typography variant='h1' sx={{\r\n                                    \r\n                                    fontWeight:550,\r\n                                    fontSize:'28px',\r\n                                    textAlign:'start',\r\n                                    color:'black',\r\n                                    \r\n                                }}>{v.category}</Typography>\r\n                    </td>\r\n                </tr>)}\r\n            </table>\r\n        </Box>\r\n        \r\n    )\r\n\r\n                \r\n    \r\n}\r\n\r\n\r\n\r\nconst Dashboard =() =>{\r\n    const {currentUser} = useAuth();\r\n    const [OrderLists,setOrderLists]=useState([]);\r\n    useEffect(()=>{\r\n        async function fetchOrderLists() {\r\n            const requestUrl='https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/order.json';\r\n            const response = await fetch(requestUrl);\r\n            const responseJSON = await response.json();\r\n\r\n            setOrderLists(responseJSON);\r\n            \r\n            \r\n        }\r\n\r\n        fetchOrderLists();\r\n    },[])  \r\n    \r\n    let totalpay = 0;\r\n    let totaldish = 0;\r\n    let totalcustomer =Object.values(OrderLists).length;    \r\n    \r\n    Object.values(OrderLists).forEach(order => {\r\n        totalpay += order['total payment'];\r\n        \r\n        \r\n        const detail = order.detail;\r\n        for (var pizza in detail){\r\n            totaldish += detail[pizza].length;\r\n        }\r\n    });\r\n\r\n    totalpay /= 1000;\r\n    \r\n    return (\r\n            currentUser ? \r\n            <Box \r\n                sx={{\r\n                backgroundColor: '#FFE6CC',\r\n                width:'80%',\r\n                height:'100%',\r\n                marginLeft:'10%',\r\n                marginRight:'10%'\r\n            }}>\r\n                <Box py={1}></Box>\r\n                <Box sx={{\r\n                display:'flex',\r\n                justifyContent:'space-evenly',\r\n                alignItems:'rows',\r\n                 }}>\r\n                \r\n                    <Box sx={{\r\n                        width:'200px',\r\n                        backgroundColor:'#F9C4A6',\r\n                        height:'150px',\r\n                        borderRadius:'8px',\r\n                        padding:'16px'\r\n                    }}> \r\n                    <Box sx={{display:'flex',flexDirection:'row',alignItems:'center'}}>\r\n                    <Box sx={{\r\n                        width:'38px',\r\n                        height:'38px',\r\n                        backgroundColor:'#FFD3A8',\r\n                        padding:'5px',\r\n                        borderRadius:'8px',\r\n                    }}>\r\n                    <MonetizationOnRoundedIcon sx={{color:'#ffbe0b'}}/>\r\n                    </Box>\r\n                    <Box pl={1}></Box>\r\n                    <Typography variant='h3' sx={{\r\n                        marginTop:'8px',\r\n                        fontWeight:500,\r\n                        fontSize:'20px',\r\n                        textAlign:'start',\r\n                        color:'#252836'\r\n                    }}>Doanh thu</Typography>\r\n                    </Box>\r\n                    <Typography variant='h1' sx={{\r\n                        marginTop:'10%',\r\n                        fontWeight:550,\r\n                        fontSize:'28px',\r\n                        textAlign:'start',\r\n                        color:'black'\r\n                    }}>{`${totalpay} K`}</Typography>\r\n                    </Box>\r\n\r\n                    <Box sx={{\r\n                        width:'200px',\r\n                        backgroundColor:'#F9C4A6',\r\n                        height:'150px',\r\n                        borderRadius:'8px',\r\n                        padding:'16px'\r\n                    }}> \r\n                    <Box sx={{display:'flex',flexDirection:'row',alignItems:'center'}}>\r\n                    <Box sx={{\r\n                        width:'38px',\r\n                        height:'38px',\r\n                        backgroundColor:'#FFD3A8',\r\n                        padding:'5px',\r\n                        borderRadius:'8px',\r\n                    }}>\r\n                    <BookmarkRoundedIcon sx={{color:'#E97500'}}/>\r\n                    </Box>\r\n                    <Box pl={1}></Box>\r\n                    <Typography variant='h3' sx={{\r\n                        marginTop:'8px',\r\n                        fontWeight:500,\r\n                        fontSize:'20px',\r\n                        textAlign:'start',\r\n                        color:'#252836'\r\n                    }}>Tổng món</Typography>\r\n                    </Box>\r\n                    <Typography variant='h1' sx={{\r\n                        marginTop:'10%',\r\n                        fontWeight:550,\r\n                        fontSize:'28px',\r\n                        textAlign:'start',\r\n                        color:'black'\r\n                    }}>{`${totaldish}`}</Typography>\r\n                    </Box>\r\n                    <Box sx={{\r\n                        width:'200px',\r\n                        backgroundColor:'#F9C4A6',\r\n                        height:'150px',\r\n                        borderRadius:'8px',\r\n                        padding:'16px'\r\n                    }}> \r\n                    <Box sx={{display:'flex',flexDirection:'row',alignItems:'center'}}>\r\n                    <Box sx={{\r\n                        width:'38px',\r\n                        height:'38px',\r\n                        backgroundColor:'#FFD3A8',\r\n                        padding:'5px',\r\n                        borderRadius:'8px',\r\n                    }}>\r\n                    <AccountCircleRoundedIcon sx={{color:'#1d3557'}}/>\r\n                    </Box>\r\n                    <Box pl={1}></Box>\r\n                    <Typography variant='h3' sx={{\r\n                        marginTop:'8px',\r\n                        fontWeight:500,\r\n                        fontSize:'20px',\r\n                        textAlign:'start',\r\n                        color:'#252836'\r\n                    }}>Tổng đơn</Typography>\r\n                    </Box>\r\n                    <Typography variant='h1' sx={{\r\n                        marginTop:'10%',\r\n                        fontWeight:550,\r\n                        fontSize:'28px',\r\n                        textAlign:'start',\r\n                        color:'black'\r\n                    }}>{`${totalcustomer}`}</Typography>\r\n                    </Box>\r\n                                        \r\n                    </Box> \r\n                    <br/>\r\n                    \r\n                <Box sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    padding: '0px',\r\n                }}>\r\n                    <Typography variant='h1' sx={{\r\n                    marginTop:'8px',\r\n                    fontWeight:550,\r\n                    fontSize:'50px',\r\n                    textAlign:'center',\r\n                    color:'black'\r\n                }}>Món nổi bật nhất </Typography>\r\n                    \r\n                            \r\n                </Box>\r\n                <hr className={styles.hr}/>\r\n                <MostOrder/>\r\n            </Box> : <Home/>\r\n            \r\n        \r\n    );\r\n}\r\nexport default Dashboard","import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { TextField, styled, IconButton, Avatar, AppBar, Toolbar, Box, Stack,Button,Menu,MenuItem } from \"@mui/material\";\r\nimport { useAuth } from '../context/AuthContext';\r\nimport React,{useState} from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@mui/styles';\r\nconst useStyles = makeStyles({\r\n    customButton:{\r\n        \"&.MuiButton-root\":{\r\n                    border:'none',\r\n                    borderRadius:'25px',\r\n                    color:'black',\r\n                   '&:hover':{ \r\n                       color: '#EA6A12',\r\n                      '.MuiAvatar-root':{color: '#EA6A12'}\r\n                    }\r\n        },\r\n     \r\n    }\r\n})\r\n\r\nexport const Searchbar = ()=>{\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const {logout} = useAuth();\r\n    const {resetPassword} = useAuth(); \r\n    const {currentUser} = useAuth();\r\n    const navigate = useNavigate();\r\n    const handlelogout= ()=>{logout();setAnchorEl(null);navigate('/') }\r\n\r\n    const changePassword = async ()=>{\r\n        resetPassword(currentUser.email);\r\n        alert('Hãy kiểm tra email của bạn');\r\n    }\r\n\r\n    const handleClose = () => {setAnchorEl(null)}\r\n    const handleClick = (e) => {setAnchorEl(e.currentTarget);}\r\n\r\n    return(\r\n        <AppBar\r\n            position='sticky'\r\n            sx={{\r\n                backgroundColor:'white',\r\n                boxShadow: '0px 10px 30px rgba(234, 106, 18, 0.05)',\r\n                zIndex: 105,\r\n            }}\r\n        >\r\n            {console.log(anchorEl)}\r\n            <Toolbar\r\n            sx={{\r\n                width: '100%'\r\n            }}\r\n            >\r\n       \r\n            <Box sx={{ flexGrow: 10 }} />\r\n            <Stack sx={{flexGrow: 2,height:'40px'}} spacing={2} direction=\"row\">\r\n                <Link to=\"/cart\">\r\n                <IconButton>\r\n                <ShoppingCartIcon\r\n                sx={{\r\n                    '&:hover':{\r\n                        color: '#EA6A12'\r\n                    }\r\n                }}/>\r\n                </IconButton>\r\n                </Link>\r\n                \r\n                { currentUser ?\r\n                <>\r\n                <Button \r\n                    onClick={handleClick}\r\n                    className={classes.customButton}\r\n                    startIcon={ <Avatar />}>\r\n                Xin chào \r\n                </Button>\r\n                <Menu sx={{width:'100%'}}\r\n                    open = {open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                      }}\r\n                >\r\n                <MenuItem sx={{width:'100%'}} \r\n                        onClick={()=>{\r\n                        handleClose();\r\n                        changePassword();\r\n                        }}>Đổi mật khẩu</MenuItem>\r\n                <MenuItem sx={{width:'100%'}} onClick={handlelogout}>Đăng xuất</MenuItem>\r\n                </Menu>\r\n                </>\r\n                :\r\n                    <Button\r\n                        onClick={()=>{navigate('/signin')}}\r\n                        sx={{\r\n                            borderRadius:'25px',\r\n                            color:'black',\r\n                            textDecorationLine:'none',\r\n                            '&:hover':{\r\n                            backgroundColor:'#EA6A12',\r\n                            color:'white',\r\n                            }\r\n                        }}\r\n                        >\r\n                            Đăng nhập</Button>\r\n             \r\n                }\r\n            </Stack>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Stack, Typography, Box, IconButton, Divider , Collapse, Grow} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport AddCircleRounded from '@mui/icons-material/AddCircleRounded';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { CustomPagination } from './pizzaMenu';\r\nconst timeToDate = (time) =>{\r\n    let date = new Date(time * 1000)\r\n    let year = date.getFullYear()\r\n    let month = date.getMonth() + 1\r\n    let day = date.getDate()\r\n    return year + '/' + month + '/' + day;   \r\n}\r\nexport const ComboPizzaItem = (props) =>{\r\n    const item = props.item;\r\n    const [expand, SetExpand] = useState(false);\r\n    const allToppings = useSelector(state => state.toppings.entities);\r\n    const pizza = useSelector(state => state.pizzas.entities[item.pizzaId]);\r\n    return (\r\n        <Box\r\n        sx={{\r\n            width: {md: '45%', sm: '95%', xs: '100%'},\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n            marginLeft: {md: '10px', sm: '20px', xs: '20px'},\r\n            marginRight: {md: '10px', sm: '5px', xs: '5px'},\r\n        }}\r\n        >\r\n        <Box\r\n        onClick = {()=>{\r\n            SetExpand(prev => !prev)\r\n        }}\r\n        sx={{\r\n            backgroundColor: 'white',\r\n            boxShadow: '0 1px 5px rgb(0,0,0,0.5)',\r\n            borderRadius: '50px',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            padding: '5px',\r\n            alignItems: 'center',\r\n            height: '50px', \r\n            position: 'relative',\r\n            zIndex: 100\r\n        }}\r\n        >\r\n            <img\r\n            src={pizza.image}\r\n            alt={pizza.name}\r\n            style={{\r\n                borderRadius: '200px',\r\n                width: '80px',\r\n                height: '80px',\r\n                transform: 'translateX(-20px)',\r\n                zIndex: 2\r\n            }}\r\n            />\r\n            <Stack direction=\"row\">\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '13px', xs: '12px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginLeft: {md: '20px', sm: '5px', xs: '2px'}\r\n                    }}\r\n                >{pizza.name}\r\n            </Typography>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginLeft: {md: '20px'},\r\n                        display: {md: 'block', sm: 'none', xs: 'none'}\r\n                    }}\r\n                >(Xem thêm)\r\n            </Typography>\r\n            </Stack>\r\n            <Box sx={{\r\n                borderRadius: '50px',\r\n                width: '45px', height: '45px',\r\n                backgroundColor: 'rgba(234, 106, 18, 0.2)',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '15px', xs: '13px'},\r\n                        lineHeight: '52px',\r\n                        color: 'rgba(234, 106, 18, 1)',\r\n                        textAlign: 'center',\r\n                    }}\r\n                >x {item.number}\r\n            </Typography>\r\n            </Box>\r\n        </Box> \r\n        {\r\n        <Collapse in = {expand} unmountOnExit style={{zIndex: 0, position: 'relative'}}>\r\n            <Box sx={{width: '98%', borderRadius: '0 0 24px 24px', backgroundColor: 'white', paddingLeft: '10%'\r\n            }}>\r\n            <Stack direction=\"row\" spacing={5}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '15px', xs: '13px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                >Cỡ: {item.size}\r\n            </Typography>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '15px', xs: '13px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                >Đế: {item.sole}\r\n            </Typography>\r\n            </Stack>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '15px', xs: '13px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                >Toppings: {\r\n                    item.availableToppings.map((toppingId) => allToppings[toppingId].name + ',  ')\r\n                }\r\n            </Typography>\r\n            </Box>\r\n        </Collapse>   \r\n        }\r\n        </Box>\r\n    )\r\n}\r\nexport const ComboExtraItem = (props) =>{\r\n    const item = props.item;\r\n    const extra = useSelector(state => state.extras.entities[item.extraId]);\r\n    return(\r\n        <Box\r\n        sx={{\r\n            width: {md: '45%', sm: '95%', xs: '100%'},\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n            marginLeft: {md: '10px', sm: '20px', xs: '20px'},\r\n            marginRight: {md: '10px', sm: '5px', xs: '5px'},\r\n        }}\r\n        >\r\n            <Box\r\n        sx={{\r\n            backgroundColor: 'white',\r\n            boxShadow: '0 1px 5px rgb(0,0,0,0.5)',\r\n            borderRadius: '50px',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            padding: '5px',\r\n            alignItems: 'center',\r\n            height: '50px', \r\n            position: 'relative',\r\n            zIndex: 100\r\n        }}\r\n        >\r\n            <img\r\n            src={extra.image}\r\n            alt={extra.name}\r\n            style={{\r\n                borderRadius: '200px',\r\n                width: '80px',\r\n                height: '80px',\r\n                transform: 'translateX(-20px)',\r\n                zIndex: 2\r\n            }}\r\n            />\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '13px', xs: '12px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginLeft: {md: '20px', sm: '5px', xs: '2px'}\r\n                    }}\r\n                >{extra.name}\r\n            </Typography>\r\n            <Box sx={{\r\n                borderRadius: '50px',\r\n                width: '45px', height: '45px',\r\n                backgroundColor: 'rgba(234, 106, 18, 0.2)',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '15px', sm: '15px', xs: '13px'},\r\n                        lineHeight: '52px',\r\n                        color: 'rgba(234, 106, 18, 1)',\r\n                        textAlign: 'center',\r\n                    }}\r\n                >x {item.number}\r\n            </Typography>\r\n            </Box>\r\n        </Box> \r\n        </Box>\r\n    )\r\n}\r\nexport const ComboMenuItem = (props) =>{\r\n    const navigate = useNavigate();\r\n    const combo = props.combo;\r\n    const [hov, setHov] = useState(false);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n    }\r\n    const valid = Date.now() / 1000 >= combo.start && Date.now() / 1000 <= combo.end\r\n    return(\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {switchHov}\r\n        sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            maxWidth: '274px',\r\n            maxHeight: '237px',\r\n            borderRadius: '24px',\r\n            p: 3,\r\n            boxSizing: 'border-box',\r\n            marginRight: '2.5%',\r\n            marginLeft: '2.5%',\r\n            boxShadow: '1px 1px 5px rgba(0,0,0, 0.5)'\r\n        }}\r\n        >\r\n            <Stack spacing={1} sx={{minWidth: '150px'}}>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        \r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: hov? 'white':'#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >❤️ {combo.subtitle.length <= 20 ? combo.subtitle : combo.subtitle.slice(0, 17) + '...'}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{combo.title.slice(0, 15)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: hov? 'white': valid ? '#959895': 'red',\r\n                        textAlign: 'start',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{valid ? timeToDate(combo.start) + \" - \" + timeToDate(combo.end): \"Expired\"}   \r\n            </Typography>\r\n            <Divider variant=\"light\"  sx={{\r\n                width: '50%',\r\n                color: hov?'white': 'rgb(0,0,0,0.5)'\r\n            }}/>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        textAlign: 'start',\r\n                        color: hov? 'white': '#959895',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{combo.persons} người                 \r\n            </Typography>\r\n            <Stack\r\n            direction='row'\r\n            spacing={1}\r\n            sx={{\r\n                marginTop: '20px'\r\n            }}\r\n            >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': '#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{combo.off && combo.off > 0 ? combo.off + ' %Off': 'Bonus'}\r\n                </Typography>\r\n                <IconButton\r\n                sx={{\r\n                width: '24px',\r\n                height: '24px'\r\n                }}\r\n                onClick={() => {navigate('/combo/' + props.comboId)}}\r\n                >\r\n                <AddCircleRounded\r\n                    sx={{\r\n                        color: hov ? 'white':'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n                </IconButton>\r\n            </Stack>\r\n            </Stack>\r\n            <img\r\n            src={combo.image}\r\n            alt={combo.title}\r\n            style={{\r\n            borderRadius: '50%',\r\n            objectFit: 'cover',\r\n            //boxShadow: '-10px 0px 30px rgba(0, 0, 0, 0.1)',\r\n            alignSelf: 'center',\r\n            //transform: 'translateX(5%)',\r\n            width: '150px',\r\n            height: '150px'\r\n            }}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\nexport const ComboList = ()=>{\r\n    const ids = useSelector(state => state.combos.ids);\r\n    const combos = useSelector(state => state.combos.entities);\r\n    const fetchingStatus = useSelector(state => state.combos.fetchingStatus);\r\n    const max = 6;\r\n    const [page, setPage] = useState(1);\r\n    const totalPage = Math.ceil(ids.length / max);\r\n    const pageList = [];\r\n    for(let i = 1;i <= totalPage;i++)pageList.push(i);\r\n    return fetchingStatus === 'SUCCESS' && (\r\n        <Box sx={{p: 3, width: '100%', marginBottom: '100px'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >Combos\r\n            </Typography>\r\n        {\r\n            pageList.map(p => {return(\r\n            <Grow in={page===p} mountOnEnter unmountOnExit timeout={page===p ? 1000: 0}>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            {\r\n                ids\r\n                .map((id, index) =>{\r\n                    return (index >= (page - 1)*max && index < page * max) ?\r\n                    <Box sx={{margin: '20px 50px'}}>\r\n                        <ComboMenuItem  combo = {combos[id]} comboId={id}/>\r\n                    </Box>\r\n                    : false\r\n                })\r\n            }\r\n            </Box>\r\n                </Grow>   \r\n            )})\r\n        }\r\n        <Box sx={{marginTop: '100px', alignItems: 'center', width: '100%', marginLeft: '40%'}}>\r\n        <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}\r\n        />\r\n        </Box>\r\n        </Box>\r\n    )\r\n}","import React from 'react';\r\nimport { ComboList } from '../components/combo';\r\nexport const ComboPage = ()=>{\r\n    return <ComboList/>\r\n}","export default __webpack_public_path__ + \"static/media/pic1.35c0d705.png\";","import React,{useState,useRef,useEffect} from 'react';\r\nimport{Button,Box,TextField} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyle = makeStyles({\r\n    forgetPass:{\r\n        textAlign:'left',\r\n        width:'100%',\r\n        paddingLeft:'50px',\r\n        fontFamily:'Poppins',\r\n        '&:hover':{\r\n            fontSize:'20px',\r\n            cursor:'pointer'\r\n        }\r\n    },\r\n    container:{\r\n            width:'100%',\r\n            display:'flex',\r\n            \r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            flexDirection:'column',\r\n    },\r\n    button:{\r\n        '&.MuiButton-root':{\r\n            backgroundColor: '#EA6A12',\r\n            borderRadius: '50px',\r\n            fontFamily: 'Poppins',\r\n            fontWeight: 'normal',\r\n            fontSize: '16px',\r\n            width: '200px',\r\n            lineHeight: '175%',\r\n            color: 'white',\r\n            '&:hover, &:active':{\r\n                backgroundColor: '#f57c00'\r\n            },            \r\n        }\r\n    },\r\n    textField:{\r\n        '& .MuiOutlinedInput-root': {\r\n        borderRadius:100,\r\n        border:'solid',\r\n        borderWidth:'1px',\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& input':{\r\n            height:'8px',\r\n            \"&:-webkit-autofill\": {\r\n            WebkitBoxShadow: \"0 0 0 1000px white inset\"\r\n            }\r\n         },\r\n        },\r\n        '& fieldset':{\r\n            border:'none',\r\n            fontFamily: 'Poppins',\r\n            paddingLeft:'10px',\r\n        },      \r\n        width:'80%',\r\n        \r\n\r\n    }\r\n})\r\nconst SignInForm = ()=>{\r\n    const [userName,setUserName] = useState(\"\");\r\n    const [pass,setPass] = useState(\"\");\r\n    const [error,setError] = useState(\"\");\r\n    const {login} = useAuth();\r\n    const navigate = useNavigate();\r\n    const classes = useStyle();\r\n    const btn = useRef(null);\r\n    const handleSubmit= async (e)=>{\r\n        e.preventDefault();\r\n        try{\r\n           setError('');\r\n           await login(userName,pass);\r\n           navigate('/');\r\n        }\r\n        catch{setError('error')}\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n          if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            btn.current.click();\r\n          }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n          document.removeEventListener(\"keydown\", listener);\r\n        };\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <Box className={classes.container}>\r\n        <Box py={6}></Box>\r\n        <h1 style={{\r\n            fontFamily:'Poppins',\r\n            fontSize:'50px'\r\n        }}>Đăng nhập</h1>\r\n        <Box py={3} sx={{width:'100%'}}>\r\n            {error && \r\n            <h3 style={{textAlign:'left',justifyContent:'left',fontSize:'15px',opacity:'0.5',marginLeft:'50px',color:'red'}}>\r\n                Tên đăng nhập hoặc mật khẩu không đúng\r\n            </h3>}\r\n        </Box> \r\n        <Box sx={{width:'100%'}}>\r\n        <h3 style={{textAlign:'left',justifyContent:'left',fontSize:'15px',opacity:'0.5',marginLeft:'50px'}}>Tên đăng nhập</h3>\r\n        <TextField \r\n            value={userName}\r\n            onChange = { e => setUserName(e.target.value)}\r\n            className={classes.textField} \r\n       \r\n            placeholder='Tên đăng nhập'/>\r\n        <Box py={1}></Box>\r\n        </Box>\r\n\r\n        <Box sx={{width:'100%'}}>\r\n        <h3 style={{textAlign:'left',justifyContent:'left',fontSize:'15px',opacity:'0.5',marginLeft:'50px'}}>Mật khẩu</h3>\r\n        <TextField\r\n            value={pass}\r\n            onChange={e=>setPass(e.target.value)}\r\n            className={classes.textField} \r\n            type ='password' \r\n            placeholder='Mật khẩu'/>\r\n        <Box py={1}></Box>\r\n        </Box>\r\n        <Box className={classes.forgetPass}>\r\n        <Link to ='/reset_password' style={{color:'black','&:hover':{textColor:'#EA6A12',}}}> Quên mật khẩu? </Link>\r\n        </Box>\r\n        <Box py={1}></Box>\r\n        <Button variant=\"contained\" \r\n            onClick = {e => handleSubmit(e)}\r\n            className={classes.button}\r\n            ref = {btn}\r\n        >\r\n            Đăng nhập\r\n        </Button>\r\n        \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SignInForm;","import React,{useEffect} from \"react\";\r\nimport {Grid,Box,Hidden} from '@mui/material';\r\nimport pic1 from '../assets/img/pic1.png';\r\nimport SignInForm from \"../components/SignIn/SignInForm\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nconst SignIn = ( )=>{\r\n    const {currentUser} = useAuth();\r\n    const {logout} = useAuth();\r\n    \r\n    useEffect(() => {\r\n        if(currentUser) logout();\r\n    }, [])\r\n    \r\n    return (\r\n        <Box sx={{height:'100%', width:'100%'}}>\r\n   \r\n        <Grid container \r\n            sx={{height:'100%', width:'100%'}}\r\n            spacing ={0}\r\n            display='flex'\r\n            flexDirection='row'>\r\n        <Grid item xs={12} sm={12} md={4} >\r\n        <SignInForm/>\r\n        </Grid>\r\n        <Hidden only={['xs','sm']}>\r\n        <Grid item xs >\r\n            <img\r\n            src={pic1}\r\n            alt='smth' \r\n            style={{\r\n            width:'100%',\r\n            height:'100%',\r\n     \r\n        }}/>\r\n        </Grid>\r\n        </Hidden>\r\n        </Grid> \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\nconst initialState = {\r\n    ids:[],\r\n    entities: {},\r\n    fetchingStatus: 'INITIAL'\r\n}\r\nexport const fetchAllDesserts = createAsyncThunk('desserts/fetchAllDesserts', async ()=>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_dessert.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst dessertSlice = createSlice({\r\n    name: 'desserts',\r\n    initialState: initialState,\r\n    reducers: {\r\n        updateDessert(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n        },\r\n        add1Dessert(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Dessert(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllDesserts.pending, (state,action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllDesserts.fulfilled, (state,action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllDesserts.rejected, (state,action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default dessertSlice.reducer;\r\nexport const {updateDessert,add1Dessert,delete1Dessert} = dessertSlice.actions;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\nconst initialState = {\r\n    ids:[],\r\n    entities: {},\r\n    fetchingStatus: 'INITIAL'\r\n}\r\nexport const fetchAllDrinks = createAsyncThunk('drinks/fetchAllDrinks', async ()=>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_drink.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst drinkSlice = createSlice({\r\n    name: 'drinks',\r\n    initialState: initialState,\r\n    reducers: {\r\n        updateDrink(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n        },\r\n        add1Drink(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Drink(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllDrinks.pending, (state,action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllDrinks.fulfilled, (state,action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllDrinks.rejected, (state,action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default drinkSlice.reducer;\r\nexport const {updateDrink,add1Drink,delete1Drink} = drinkSlice.actions;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\nconst initialState = {\r\n    ids:[],\r\n    entities: {},\r\n    fetchingStatus: 'INITIAL'\r\n}\r\nexport const fetchAllVegetables = createAsyncThunk('vegetables/fetchAllVegetables', async ()=>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_vegetarian.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst vegetableSlice = createSlice({\r\n    name: 'vegetables',\r\n    initialState: initialState,\r\n    reducers: {\r\n        updateVegetable(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.newItem;\r\n        },\r\n        add1Vegetable(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Vegetable(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllVegetables.pending, (state,action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllVegetables.fulfilled, (state,action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllVegetables.rejected, (state,action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default vegetableSlice.reducer;\r\nexport const {updateVegetable,add1Vegetable,delete1Vegetable} = vegetableSlice.actions;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\nconst initialState = {\r\n    ids:[],\r\n    entities: {},\r\n    fetchingStatus: 'INITIAL'\r\n}\r\nexport const fetchAllKids = createAsyncThunk('kids/fetchAllKids', async ()=>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_kid.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst kidSlice = createSlice({\r\n    name: 'kids',\r\n    initialState: initialState,\r\n    reducers: {\r\n        updateKid(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n        },\r\n        add1Kid(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Kid(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllKids.pending, (state,action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllKids.fulfilled, (state,action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllKids.rejected, (state,action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default kidSlice.reducer;\r\nexport const {updateKid,add1Kid,delete1Kid} = kidSlice.actions;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\nconst initialState = {\r\n    ids:[],\r\n    entities: {},\r\n    fetchingStatus: 'INITIAL'\r\n}\r\nexport const fetchAllAppetizers = createAsyncThunk('appetizers/fetchAllAppetizers', async ()=>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_appetizer.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst appetizerSlice = createSlice({\r\n    name: 'appetizers',\r\n    initialState: initialState,\r\n    reducers: {\r\n        updateAppetizer(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n        },\r\n        add1Appetizer(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.item;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Appetizer(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllAppetizers.pending, (state,action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllAppetizers.fulfilled, (state,action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllAppetizers.rejected, (state,action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default appetizerSlice.reducer;\r\nexport const {updateAppetizer,delete1Appetizer,add1Appetizer} = appetizerSlice.actions;\r\n","import React, {useState } from \"react\";\r\nimport {Box, Divider, IconButton, Stack, Typography, Rating, Button, List, ListItem, Modal, TextField, Fade, Snackbar} from '@mui/material';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport  AddRoundedIcon  from \"@mui/icons-material/AddRounded\";\r\nimport RemoveRoundedIcon from '@mui/icons-material/RemoveRounded';\r\nimport { Comment } from \"./comment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { itemAdded } from \"../store/cartExtraSlice\";\r\nimport { CustomPagination } from \"./pizzaMenu\";\r\nimport { updateDessert } from \"../store/categories/dessertSlice\";\r\nimport { updateDrink } from \"../store/categories/drinkSlice\";\r\nimport { updateVegetable } from \"../store/categories/vegetableSlice\";\r\nimport { updateKid } from \"../store/categories/kidSlice\";\r\nimport { updateAppetizer } from \"../store/categories/appetizerSlice\";\r\n\r\nconst axios = require('axios')\r\nconst round = (num)=> Math.round(num * 100) / 100;\r\n\r\nexport const SingleExtra = ()=>{\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const categories = {\r\n        'dessert':{\r\n            selector: useSelector(state => state.desserts),\r\n            link: 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_dessert/',\r\n            update: updateDessert\r\n        },\r\n        'drink':{\r\n            selector: useSelector(state => state.drinks),\r\n            link: 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_drink/',\r\n            update: updateDrink\r\n        },\r\n        'vegetable':{\r\n            selector: useSelector(state => state.vegetables),\r\n            link: 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_vegetarian/',\r\n            update: updateVegetable\r\n        },\r\n        'kid':{\r\n            selector: useSelector(state => state.kids),\r\n            link: 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_kid/',\r\n            update: updateKid\r\n        },\r\n        'appetizer':{\r\n            selector: useSelector(state => state.appetizers),\r\n            link: 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_appetizer/',\r\n            update: updateAppetizer\r\n        }\r\n    }\r\n    const {category , productId} = useParams();\r\n    const extra = categories[category].selector.entities[productId];\r\n    const comments = extra.comment ? extra.comment : [];\r\n    const [num, setNum] = useState(1);\r\n    const [cmt, setCmt] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    //comment\r\n    const [yourName, setYourName] = useState('')\r\n    const [yourCmt, setYourCmt] = useState('')\r\n    const [yourRate, setYourRate] = useState(0)\r\n    const [posted, setPosted] = useState(false);\r\n    const [message, setMess] = useState('')\r\n    const max = 2\r\n    const totalPage = Math.ceil(comments ? comments.length / max : 1);\r\n    const pageList = [];\r\n    for(let i = 1;i <= totalPage;i++)pageList.push(i);\r\n    const [page, setPage] = useState(1);\r\n    const closeCmt = () =>{\r\n        setCmt(false)\r\n        setYourName('')\r\n        setYourCmt('')\r\n}\r\nconst postComment = async () =>{\r\n    try{\r\n        const newCmt = {\r\n            comment_time: Math.floor(Date.now()/1000),\r\n            content: yourCmt,\r\n            user_name: yourName,\r\n            user_rating: yourRate\r\n        }\r\n        let newExtra = {}\r\n        newExtra = Object.assign(newExtra, extra)\r\n        newExtra.comment = [...comments, newCmt]\r\n        newExtra.rating = (extra.rating * comments.length + yourRate)/ (comments.length + 1)\r\n            const result = await axios.put(\r\n                categories[category].link + productId + '/.json',\r\n                newExtra)\r\n            if(result.status === 200){\r\n                dispatch(categories[category].update({id: productId, item: newExtra}))\r\n                setMess('Bình luận của bạn đã được đăng thành công')\r\n                setPosted(true)\r\n            }\r\n        closeCmt()\r\n    }catch(err){\r\n        console.log(err)\r\n        setMess('Xin lỗi, có sự cố xảy ra')\r\n        setPosted(true)\r\n    }\r\n}\r\n\r\n    return(\r\n        <Box\r\n        sx={{\r\n            backgroundColor: 'white',\r\n            borderRadius: '24px',\r\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\r\n            padding: '20px 0px',\r\n            alignItems: 'center',\r\n            m:3,marginBottom: '100px'\r\n        }}\r\n        >\r\n        <Box\r\n        sx={{\r\n            backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n            display: 'flex',\r\n            borderRadius: '24px',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n            p: 5,\r\n            m: 5,\r\n            flexWrap: {xs: 'wrap',sm: 'wrap', md: 'nowrap'}\r\n        }}\r\n        >\r\n            <img\r\n            src={extra.image_url}\r\n            alt={extra.title}\r\n            style={{\r\n            width: '280px',\r\n            height: '280px',\r\n            borderRadius: '50%',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            <Stack spacing={2}\r\n            sx={{\r\n                marginLeft: {md: '100px', sm: 0, xs: 0},\r\n                marginTop: {md: 0, sm: '50px', xs: '50px'}\r\n            }}>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n                    >{extra.title}\r\n                </Typography>\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'start',\r\n                        textOverflow: 'ellipsis',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{extra.description}\r\n                </Typography>\r\n                <Divider sx = {{maxWidth: '50%'}}/>\r\n                <div\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '20px',\r\n                        lineHeight: '175%',\r\n                        color:'#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    > {extra.price} VND\r\n                </div>\r\n                <Rating value={extra.rating} readOnly\r\n                sx={{\r\n                    color: '#EA6A12',\r\n                }}\r\n                icon={<StarRoundedIcon/>}\r\n            emptyIcon={<StarRoundedIcon/>}\r\n            />\r\n            </Stack>\r\n        </Box>\r\n        <Divider variant=\"middle\" sx={{m: 5}}/>\r\n        <Box sx={{\r\n            m: 1,\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around'\r\n        }}>\r\n            <Stack spacing={2} direction=\"row\">\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Số lượng: \r\n            </Typography>\r\n            <Stack direction=\"row\" spacing={5}\r\n            sx={{\r\n                alignItems: 'center',\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                borderRadius: '100px'\r\n            }}\r\n            >\r\n                <IconButton\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <RemoveRoundedIcon\r\n                    onClick = {()=>{setNum(prev => (prev === 1)? 1: prev - 1)}}\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{num}\r\n                </Typography>\r\n                <IconButton\r\n                onClick = {()=>{setNum(prev => (prev === 10)? 10: prev + 1)}}\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <AddRoundedIcon\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n            </Stack>\r\n            </Stack>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Tổng tiền:  {round(extra.price * num)} VND\r\n            </Typography>\r\n        </Box>\r\n        <Button variant=\"contained\" \r\n                    onClick={()=>{\r\n                        setDone(true);\r\n                        dispatch(itemAdded({\r\n                            extraId: productId,\r\n                            number: num,\r\n                            category: category,\r\n                            total: round(num * extra.price)\r\n                        }))\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginTop: 3\r\n                    }}\r\n                    >\r\n                        Thêm vào giỏ\r\n        </Button>\r\n        <Divider variant=\"middle\" sx={{m: 5}}/>\r\n        <Box sx={{display: 'flex', justifyContent: 'space-between', padding: '20px 50px'}}>\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                    >Bình luận\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n                    onClick = {() => {setCmt(true)}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Thêm bình luận\r\n        </Button>\r\n        <Modal open={cmt} onClose = {closeCmt}>\r\n            <Fade in={cmt} timeout={500}>\r\n            <Stack\r\n            spacing = {1}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 4,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '80%', xs: '90%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Bình luận của bạn\r\n                </Typography>\r\n                <TextField\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Name\"\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                onChange={(e)=>{\r\n                    setYourName(e.target.value)\r\n                }}\r\n                />\r\n                <TextField\r\n                color='warning'\r\n                required\r\n                id=\"name-field\"\r\n                label=\"Comment\"\r\n                multiline\r\n                rows={4}\r\n                maxRows = {4}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                onChange={(e)=>{\r\n                    setYourCmt(e.target.value)\r\n                }}\r\n                />\r\n                <Stack direction=\"row\" spacing={5}\r\n                sx={{alignItems: 'center'}}\r\n                >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '15px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Đánh giá: \r\n                </Typography>\r\n                <Rating\r\n                \r\n                onChange={(e,newRate)=>{\r\n                    setYourRate(newRate)\r\n                }}\r\n                sx={{\r\n                    color: '#EA6A12',\r\n                }}\r\n                icon={<StarRoundedIcon/>}\r\n                emptyIcon={<StarRoundedIcon/>}\r\n                />\r\n                </Stack>\r\n                {\r\n                (yourName.length === 0 || yourCmt.length === 0) &&\r\n                (<Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '15px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    Hãy điền đủ thông tin\r\n                </Typography>)\r\n                }\r\n                <Button variant=\"contained\" \r\n                    onClick={postComment}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    disabled = {yourName.length === 0 || yourCmt.length === 0}\r\n                    >\r\n                    Post\r\n                </Button>\r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        </Box>\r\n            \r\n            <Divider variant=\"middle\"/>\r\n            <Box sx={{margin: '0 20px'}}>\r\n            <List sx={{width: '100%', height: '90%', overflow: 'auto', \r\n            maxHeight: '500px', backgroundColor: 'rgba(252, 237, 227, 0.3)', alignSelf: 'center'\r\n            }}>\r\n            {\r\n                comments && comments.length > 0 ? \r\n                comments.map((comment, index) =>\r\n                    (index >= (page - 1)*max && index < page * max) ?\r\n                            <ListItem>\r\n                                <Comment comment = {comment}/>\r\n                            </ListItem>\r\n                    : false\r\n                )\r\n                : \r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        alignSelf: 'start',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        marginTop: '50px'\r\n                    }}\r\n                >Không có bình luận nào\r\n            </Typography>\r\n            }\r\n            </List>\r\n            </Box>\r\n            <Box sx={{width: '100%', justifyContent: 'center', marginTop: '10px', display: 'flex'}}>\r\n            <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}/>\r\n            </Box>\r\n        <Divider variant=\"middle\" sx={{m: 5}}/>\r\n        <Modal open={done} >\r\n            <Fade in={done} timeout={500}>\r\n            <Stack\r\n            spacing={3}\r\n            sx={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '24px',\r\n                width: '500px',\r\n                p: 5,\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                alignItems: 'center'\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Giỏ hàng của bạn đã được cập nhập\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={5}>\r\n                <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        setDone(false);\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        height: '45px',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Hoàn tất\r\n                </Button>\r\n                <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        navigate('/cart');\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        height: '45px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Xem giỏ hàng\r\n                </Button>\r\n                </Stack>\r\n                \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        <Snackbar\r\n        open={posted}\r\n        onClose={() => {setPosted(false)}}\r\n        message={message}\r\n        autoHideDuration={6000}\r\n        />\r\n        </Box>\r\n        \r\n    )\r\n}","import React from \"react\";\r\nimport {Box, CircularProgress, Typography} from '@mui/material';\r\nimport { SingleExtra } from \"../components/singleExtra\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nexport const SingleExtraPage = ()=>{\r\n    const categories = {\r\n        'dessert':{\r\n            status: useSelector(state => state.desserts.fetchingStatus),\r\n        },\r\n        'drink':{\r\n            status: useSelector(state => state.drinks.fetchingStatus),\r\n        },\r\n        'vegetable':{\r\n            status: useSelector(state => state.vegetables.fetchingStatus),\r\n        },\r\n        'kid':{\r\n            status: useSelector(state => state.kids.fetchingStatus),\r\n        },\r\n        'appetizer':{\r\n            status: useSelector(state => state.desserts.fetchingStatus),\r\n        }\r\n    }\r\n    const {category} = useParams()\r\n    const fetchingStatus = categories[category].status\r\n    return(\r\n        <Box style={{\r\n            width: '100%',\r\n        }}>\r\n        {\r\n        fetchingStatus === 'SUCCESS'?\r\n            <SingleExtra/>:\r\n        fetchingStatus === 'LOADING' || fetchingStatus === 'INITIAL'?\r\n        <Box sx= {{width: '100%', alignItems: 'center'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >Hãy chờ một chút\r\n            </Typography>\r\n            <CircularProgress/>\r\n        </Box>\r\n        :<Box sx= {{width: '100%', alignItems: 'center'}}>\r\n        <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '30px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    m: 3\r\n                }}\r\n                >Có lỗi xảy ra\r\n        </Typography>\r\n        </Box>\r\n        }\r\n        </Box>\r\n    )\r\n}","import React,{useState,useEffect,useRef} from 'react';\r\nimport{Button,Box,TextField} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nconst useStyle = makeStyles({\r\n    forgetPass:{\r\n        textAlign:'left',\r\n        width:'100%',\r\n        paddingLeft:'50px',\r\n        fontFamily:'Poppins',\r\n        '&:hover':{\r\n            fontSize:'20px',\r\n            cursor:'pointer'\r\n        }\r\n    },\r\n    container:{\r\n            width:'100%',\r\n            display:'flex',\r\n            \r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            flexDirection:'column',\r\n    },\r\n    button:{\r\n        '&.MuiButton-root':{\r\n            backgroundColor: '#EA6A12',\r\n            borderRadius: '50px',\r\n            fontFamily: 'Poppins',\r\n            fontWeight: 'normal',\r\n            fontSize: '16px',\r\n            width: '200px',\r\n            lineHeight: '175%',\r\n            color: 'white',\r\n            '&:hover, &:active':{\r\n                backgroundColor: '#f57c00'\r\n            },            \r\n        }\r\n    },\r\n    textField:{\r\n        '& .MuiOutlinedInput-root': {\r\n          '&.Mui-focused fieldset': {\r\n            borderColor: 'white',\r\n          },\r\n        borderRadius:100,\r\n        border:'solid',\r\n        borderWidth:'1px',\r\n          '& input':{\r\n              height:'8px',\r\n              \"&:-webkit-autofill\": {\r\n                WebkitBoxShadow: \"0 0 0 1000px white inset\"\r\n              }\r\n         },\r\n        },\r\n        '& fieldset':{\r\n            border:'none',\r\n            fontFamily: 'Poppins',\r\n            paddingLeft:'10px',\r\n        },      \r\n        width:'80%',\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nconst ForgetPassForm = ()=>{\r\n    const [email,setEmail] = useState(\"\");\r\n    const [submited,setSubmited] = useState(false);\r\n    const {resetPassword} = useAuth();\r\n    const classes = useStyle();\r\n    const [error,setError] = useState('');\r\n    const btn = useRef(null);\r\n    const handleResetPassword= async (e)=>{\r\n        e.preventDefault();\r\n        if (!email){\r\n            setError('error');\r\n            return;\r\n        }\r\n        try{\r\n           setError('');\r\n           await resetPassword(email);\r\n           setSubmited(true);\r\n        }\r\n        catch{setError('error')}\r\n    };\r\n\r\n    useEffect(() => {\r\n        const listener = event => {\r\n          if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            btn.current.click();\r\n          }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n          document.removeEventListener(\"keydown\", listener);\r\n        };\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n        {!submited?\r\n        <Box className={classes.container}>\r\n        <Box py={6}></Box>\r\n        <h1 style={{\r\n            fontFamily:'Poppins',\r\n            fontSize:'50px'\r\n        }}>Quên mật khẩu</h1>\r\n        <Box py={3} sx={{width:'100%'}}>\r\n        {error && <h3 style={{textAlign:'left',justifyContent:'left',fontSize:'15px',opacity:'0.5',marginLeft:'50px',color:'red'}}>\r\n                Chưa nhập Email hoặc không có Email này\r\n       </h3>}\r\n        </Box> \r\n        <Box sx={{width:'100%'}}>\r\n        <h3 style={{textAlign:'left',justifyContent:'left',fontSize:'15px',opacity:'0.5',marginLeft:'50px'}}>Email</h3>\r\n        <TextField \r\n            value={email}\r\n            onChange = { e => setEmail(e.target.value)}\r\n            className={classes.textField} \r\n       \r\n            placeholder='Email'/>\r\n        <Box py={1}></Box>\r\n        </Box>\r\n\r\n        <Box className={classes.forgetPass}>\r\n        <Link to ='/signin' style={{color:'black','&:hover':{textColor:'#EA6A12',}}}> Đăng nhập </Link>\r\n        </Box>\r\n        <Box py={1}></Box>\r\n        <Button variant=\"contained\" \r\n            onClick = {e => handleResetPassword(e)}\r\n            className={classes.button}\r\n            ref={btn}\r\n        >\r\n            Reset mật khẩu\r\n        </Button>\r\n        \r\n        </Box> :\r\n        <Box sx={{\r\n            display:'flex',\r\n            alignItems:'center',\r\n            justifyContent:'center',\r\n        }}>\r\n            <div>Hãy kiểm tra email của bạn. Quay về trang  <Link to ='/signin'>{' '}Đăng nhập</Link></div>\r\n        </Box>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgetPassForm;","import React,{useEffect} from \"react\";\r\nimport {Grid,Box,Hidden} from '@mui/material';\r\nimport pic1 from '../assets/img/pic1.png';\r\n\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport ForgetPassForm from \"../components/SignIn/ForgetPassForm\";\r\n\r\nconst ForgetPassword  = ( )=>{\r\n    const {currentUser} = useAuth();\r\n    const {logout} = useAuth();\r\n\r\n    useEffect(() => {\r\n        if(currentUser) logout();\r\n    }, [])\r\n    \r\n    return (\r\n        <Box sx={{height:'100%', width:'100%'}}>\r\n   \r\n        <Grid container \r\n            sx={{height:'100%', width:'100%'}}\r\n            spacing ={0}\r\n            display='flex'\r\n            flexDirection='row'>\r\n        <Grid item xs={12} sm={12} md={4} >\r\n        <ForgetPassForm/>\r\n        </Grid>\r\n        <Hidden only={['xs','sm']}>\r\n        <Grid item xs >\r\n            <img\r\n            src={pic1}\r\n            alt='smth' \r\n            style={{\r\n            width:'100%',\r\n            height:'100%',\r\n     \r\n        }}/>\r\n        </Grid>\r\n        </Hidden>\r\n        </Grid> \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword;","import React, { useEffect } from 'react';\r\nimport {Box, Typography} from '@mui/material'\r\nimport { useState } from 'react';\r\nimport './index.css'\r\n\r\n\r\n\r\nfunction OrderDetail(props) {\r\n    const {detailItem, detailId, Status} = props;\r\n    \r\n    const detailURL = `https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/order/${detailId}.json`\r\n    \r\n    \r\n    \r\n    const [status, setStatus] = useState('')\r\n    \r\n    const detail = detailItem.detail;\r\n    const detailKeys = Object.keys(detail)\r\n    const [menu, setMenu] = useState({});\r\n    const day = new Date();\r\n    \r\n    day.setTime(detailItem.time)\r\n    \r\n    let date = day.getDate();\r\n    let month = day.getMonth();\r\n    let year = day.getFullYear();\r\n    let hour = day.getHours();\r\n    let minute = day.getMinutes();\r\n\r\n    useEffect(()=>{\r\n        async function fetchMenu() {\r\n            const menuURL = 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu.json';\r\n            const response = await fetch(menuURL);\r\n            const responseJSON = await response.json();\r\n            \r\n            setMenu(responseJSON);\r\n            setStatus(Status);\r\n            \r\n            \r\n        }\r\n        fetchMenu();\r\n    },[])\r\n    function putData(data, callback){\r\n        var option = {\r\n            method:'PUT',\r\n            body:JSON.stringify(data)\r\n        };\r\n        fetch(detailURL, option)\r\n        .then(function(response){\r\n            response.json();\r\n        })\r\n        .then(callback)\r\n    }\r\n\r\n    const onHanleSubmitStatus = value=> {\r\n        setStatus(value);\r\n        if (value !== detailItem.status){\r\n            const data = { ...detailItem,\r\n                status: value\r\n                        }\r\n            \r\n            putData(data);\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1000);\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Box sx={{\r\n                padding: '24px',\r\n                \r\n            }}>\r\n                <Typography \r\n                variant='h2'\r\n                sx ={{\r\n                   \r\n                    fontSize:'25px',\r\n                    fontWeight:600,\r\n                    borderBottom:'1px solid white ',\r\n                    padding:'0 0 24px 0'\r\n                }}\r\n                >\r\n                    {detailItem.customer}\r\n                </Typography>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Đơn Hàng</h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px',\r\n                        minWidth:'300px'\r\n                    }}>\r\n                        <table>\r\n                            <tr>\r\n                                <th style={{width:'75%'}}>Món</th>\r\n                                <th style={{width:'25%', textAlign:'center'}}>Số Lượng</th>\r\n                            </tr>\r\n                            \r\n                            {detailKeys.map((items)=>{\r\n                                \r\n                                \r\n                                if((Object.keys(menu)).length === 0 && menu.constructor === Object) return;\r\n                                return(detail[items].map( (item)=>{\r\n                                    \r\n                                const id = item.id;\r\n                                \r\n                            \r\n                                var name = '';\r\n                                const number = item.number;\r\n                                \r\n                                switch(items){\r\n                                    case 'drink': name = menu['menu_drink'][id].title; break;\r\n                                    case 'pizza': name = menu['menu_main_courses'][id].title; break;\r\n                                    case 'appetizer': name = menu['menu_appetizer'][id].title; break;\r\n                                    case 'kid': name = menu['menu_kid'][id].title; break;\r\n                                    case 'dessert': name = menu['menu_dessert'][id].title; break;\r\n                                    case 'vegetable': name = menu['menu_vegetarian'][id].title; break;\r\n                                 }\r\n                                 \r\n                                return(\r\n                                    <tr>\r\n                                        <td style={{padding:'5px 0'}}>{name}</td>\r\n                                        <td style={{padding:'5px 0',textAlign:'center'}}>{number}</td>\r\n                                    </tr>\r\n                                )\r\n                            }))\r\n\r\n                            })}\r\n                        \r\n                        </table>\r\n                    </Box>\r\n                </Box>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Tổng </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}><p>{detailItem['total payment'] }</p></Box>\r\n                </Box>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Phí ship </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}><p>{ detailItem['shipping payment']}</p></Box>\r\n                </Box>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Tổng đơn </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}><p>{detailItem['total payment'] + detailItem['shipping payment']}</p></Box>\r\n                </Box>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> SĐT </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}><p>{detailItem.phone}</p></Box>\r\n                </Box>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Địa chỉ </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}><p>{detailItem.address}</p></Box>\r\n                </Box>\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Thời gian </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}><p>{`${hour}:${minute}  Ngày ${date}/${month}/${year}`}</p></Box>\r\n                </Box>\r\n\r\n                <Box sx={{\r\n                    marginTop:'20px',   \r\n                    \r\n                    textAlign:'start',\r\n                    display:'flex',\r\n                    \r\n                    \r\n                }}>\r\n                    <Box sx={{\r\n                        width:'100px'\r\n                    }}><h4 style={{\r\n                        fontSize:'20px'\r\n                    }}> Trạng thái </h4></Box>\r\n                    <Box sx={{\r\n                        marginLeft:'50px'\r\n                    }}> \r\n                    <button  className={(( status==='' && Status===\"Pending\")||(status===\"Pending\"))? \"status\" : \"\"} \r\n                    onClick={()=>{onHanleSubmitStatus('Pending')}}\r\n                    style={{\r\n                        width:'91px',\r\n                        height:'26px',\r\n                        lineHeight:'15px',\r\n                        borderRadius:'30px',\r\n                        border: 'none',\r\n                        marginRight:'10px'\r\n                    }\r\n                    }>Pending\r\n                    </button>\r\n                    <button  className={(( status==='' && Status===\"Preparing\")||(status===\"Preparing\"))? \"status\" : \"\"} \r\n                    onClick={()=>{onHanleSubmitStatus('Preparing')}}\r\n                    style={{\r\n                        width:'91px',\r\n                        height:'26px',\r\n                        lineHeight:'15px',\r\n                        borderRadius:'30px',\r\n                        border: 'none',\r\n                        marginRight:'10px'\r\n                    }\r\n                    }>Preparing\r\n                    </button>\r\n                    <button  className={(( status==='' && Status===\"Shipping\")||(status===\"Shipping\"))? \"status\" : \"\"}\r\n                    onClick={()=>{onHanleSubmitStatus('Shipping')}}\r\n                     style={{\r\n                        width:'91px',\r\n                        height:'26px',\r\n                        lineHeight:'15px',\r\n                        borderRadius:'30px',\r\n                        border: 'none',\r\n                        marginRight:'10px'\r\n                    }\r\n                    }>Shipping\r\n                    </button>\r\n                    <button   className={(( status==='' && Status===\"Completed\")||(status===\"Completed\"))? \"status\" : \"\"} \r\n                    onClick={()=>{onHanleSubmitStatus('Completed')}}\r\n                    style={{\r\n                        width:'91px',\r\n                        height:'26px',\r\n                        lineHeight:'15px',\r\n                        borderRadius:'30px',\r\n                        border: 'none'\r\n                    }\r\n                    \r\n                    }>Completed\r\n                    </button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderDetail;","import React, { useEffect, useState } from 'react';\r\nimport {Box, Typography} from '@mui/material';\r\nimport { CustomPagination } from '../../components/pizzaMenu';\r\nimport './index.css'\r\nimport OrderDetail from '../../components/OrderReport/OrderDetail';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { Home } from '../Home';\r\nfunction OrderReport() {\r\n    const [OrderLists, setOrderLists] = useState(\r\n        {\r\n    });\r\n        \r\n    // const keys = Object.keys(OrderLists)\r\n    const [keys, setKeys] = useState([])\r\n    const maxrow = 9;\r\n    const totalPage = Math.ceil(keys.length / maxrow);\r\n    const {currentUser} = useAuth();\r\n    const [page, setPage] = useState(1);\r\n    const [orderStart, setOrderStart] = useState(0);\r\n    const [orderEnd, setOrderEnd] = useState(8);\r\n    const [detailItem, setDetailItem] = useState(keys[0])\r\n    const [status, setStatus] = useState('')\r\n    \r\n    \r\n    const OrderList = keys.slice(orderStart, orderEnd +1)\r\n    useEffect(()=>{\r\n        async function fetchOrderLists() {\r\n            const requestUrl='https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/order.json';\r\n            const response = await fetch(requestUrl);\r\n            const responseJSON = await response.json();\r\n            \r\n            setOrderLists(responseJSON);\r\n            const keys = Object.keys(responseJSON).reverse();\r\n            console.log(responseJSON);\r\n            setKeys(keys);\r\n            setDetailItem(keys[0]);\r\n            setStatus(responseJSON[keys[0]].status)\r\n            \r\n        }\r\n\r\n        fetchOrderLists();\r\n    },[])  \r\n    \r\n    console.log(keys[0]);\r\n    console.log(detailItem);\r\n    \r\n    return (\r\n        currentUser ?\r\n        <div style={{\r\n            display:'flex',\r\n            justifyContent:'space-between'\r\n        }\r\n        }>\r\n            <Box sx={{width:'750px',\r\n            padding :'0 0 20px 0',\r\n            \r\n            backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n            borderRadius:'8px',\r\n            minHeight:'750px',\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            justifyContent:'space-between'\r\n            }}>\r\n                <Box><Box sx={{\r\n                    padding:'33px 24px'\r\n                }}>\r\n                <Typography variant=\"h2\"\r\n                sx={{\r\n                    fontWeight: 600,\r\n                    fontSize: '30px',\r\n                    justifyContent:'left',\r\n                    textAlign: 'center',\r\n\r\n                    \r\n                    \r\n                }}>\r\n                    Thông tin đơn hàng\r\n                </Typography>\r\n                \r\n                </Box>\r\n\r\n                <Box sx={{\r\n                    \r\n                }}>\r\n                    <table style={{\r\n                        width:'100%'\r\n                    }}>\r\n                        <tr style={{\r\n                            borderBottom:' 1px solid white',\r\n                            \r\n                        }}>\r\n                            <th className='th-Order' style={{\r\n                                width:'30%',\r\n                                paddingLeft:'20px'\r\n                            }}>ID</th>\r\n                            <th className='th-Order' style={{\r\n                                width:'20%',\r\n                                paddingLeft:'20px'\r\n                            }}>Khách hàng</th>\r\n                            <th className='th-Order' style={{\r\n                                width:'20%',\r\n                                textAlign:'center'\r\n                            }}>Thời gian</th>\r\n                            <th className='th-Order' style={{\r\n                                width: '15%'\r\n                            }}>Tổng Đơn</th>\r\n                            <th className='th-Order' style={{\r\n                                width:'15%',\r\n                                \r\n                            }}>Trạng Thái</th>\r\n                        </tr>\r\n                        {OrderList.map((order,index) => { \r\n                                                    \r\n                                                    //var key = Object.keys(OrderLists[order].detail);\r\n                                                    \r\n                                                    const day = new Date();\r\n                                                    day.setTime(OrderLists[order].time);\r\n                                                    let date = day.getDate();\r\n                                                    let month = day.getMonth();\r\n                                                    let year = day.getFullYear();\r\n                                                    let hour = day.getHours();\r\n                                                    let minute = day.getMinutes();\r\n                                                    \r\n                                                \r\n                                        return(\r\n                            <tr className=\"Order\"\r\n                                tabIndex=\"0\"            \r\n                                 style ={{ cursor:'pointer',\r\n                                 \r\n                                }}\r\n                                 onClick={()=>{setDetailItem(order); setStatus(OrderLists[order].status)}} >\r\n                                <td style={{paddingLeft:'10px'}}>{order}</td>\r\n                                <td style={{paddingLeft:'10px'}}>{OrderLists[order].customer}</td>\r\n                                <td style={{textAlign:'center'}}>{`${hour}:${minute} ${date}/${month}/${year}`}</td>\r\n                                <td>{OrderLists[order]['total payment']}</td>\r\n                                <td>\r\n                                    <button  className={OrderLists[order].status} style={{\r\n                                        width:'91px',\r\n                                        height:'26px',\r\n                                        lineHeight:'15px',\r\n                                        borderRadius:'30px',\r\n                                        border: 'none'\r\n                                    }\r\n                                    }>{OrderLists[order].status}\r\n                                    </button>\r\n                                </td>\r\n                            </tr>)\r\n                        })}\r\n                    </table>\r\n                </Box>\r\n                </Box>\r\n               <Box sx={{\r\n                   marginLeft:'35%',\r\n                   flex:'end'\r\n               }}>\r\n                   <CustomPagination \r\n                   style={{color:'white',\r\n                   \r\n                }}\r\n                   variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {\r\n                setPage(value); \r\n                setOrderStart(maxrow * (value - 1)); \r\n                setOrderEnd(maxrow * value - 1)}} size=\"large\" page={page}/>\r\n        \r\n        </Box>\r\n            </Box>\r\n            <Box>\r\n               \r\n            {OrderLists[detailItem] && <Box sx={{\r\n                backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n                width:'600px',\r\n                minHeight:'750px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <OrderDetail detailItem={OrderLists[detailItem]}\r\n                detailId = {detailItem}\r\n                Status = {status}/>  \r\n            </Box>\r\n            }\r\n            </Box>\r\n        </div> : <Home/>\r\n    );\r\n}\r\n\r\nexport default OrderReport;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nconst axios = require('axios');\r\nexport const fetchAllCombos = createAsyncThunk('combos/fetchAllCombos', async () =>{\r\n    try{\r\n        const response = await axios.get('https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/combo.json');\r\n        return response.data;\r\n    }catch(err){\r\n        console.error(err)\r\n    }\r\n})\r\nconst comboSlice = createSlice({\r\n    name: 'combos',\r\n    initialState: {\r\n        ids:[],\r\n        entities:{},\r\n        fetchingStatus: 'INITIAL'\r\n    },\r\n    reducers: {\r\n        add1Combo(state, action){\r\n            const id = action.payload.id;\r\n            state.entities[id] = action.payload.itm;\r\n            state.ids.push(id);\r\n        },\r\n        delete1Combo(state, action){\r\n            const deleteId = action.payload.id;\r\n            const newIds = state.ids.filter((id) => id !== deleteId );\r\n            state.ids = newIds;\r\n        }\r\n    },\r\n    extraReducers(builders){\r\n        builders\r\n        .addCase(fetchAllCombos.pending, (state, action)=>{\r\n            state.fetchingStatus = 'LOADING'\r\n        })\r\n        .addCase(fetchAllCombos.fulfilled, (state, action)=>{\r\n            state.fetchingStatus = 'SUCCESS'\r\n            state.ids = Object.keys(action.payload)\r\n            state.entities = action.payload\r\n        })\r\n        .addCase(fetchAllCombos.rejected, (state, action)=>{\r\n            state.fetchingStatus = 'FAILED'\r\n        })\r\n    }\r\n})\r\nexport default comboSlice.reducer;\r\nexport const {add1Combo, delete1Combo} = comboSlice.actions;","import { Box, Divider , IconButton, Rating, Stack, Typography, Button, TextField, Modal, Fade, InputAdornment,MenuItem,\r\nRadio,RadioGroup, FormControlLabel, FormControl, FormLabel} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport { useDispatch} from \"react-redux\";\r\nimport { delete1Pizza } from \"../store/categories/pizzaSlice\";\r\nimport { delete1Appetizer } from \"../store/categories/appetizerSlice\";\r\nimport { delete1Dessert } from \"../store/categories/dessertSlice\";\r\nimport { delete1Drink } from \"../store/categories/drinkSlice\";\r\nimport { delete1Kid } from \"../store/categories/kidSlice\";\r\nimport { delete1Vegetable } from \"../store/categories/vegetableSlice\";\r\nimport { delete1Combo } from \"../store/comboSlice\";\r\n\r\nimport axios from 'axios';\r\nconst timeToDate = (time) =>{\r\n    let date = new Date(time)\r\n    let year = date.getFullYear()\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate()\r\n    return year + '/' + month + '/' + day;   \r\n}\r\n// Card Pizza with 'edit' and 'delete' button\r\nexport const PizzaManageCard = (props)=>{\r\n    const dispatch = useDispatch();\r\n    const categories = {\r\n        'pizza':{\r\n            delete: delete1Pizza\r\n        },\r\n        'dessert':{\r\n            delete: delete1Dessert\r\n\r\n        },\r\n        'drink':{\r\n            delete: delete1Drink\r\n\r\n        },\r\n        'vegetable':{\r\n            delete: delete1Vegetable\r\n\r\n        },\r\n        'kid':{\r\n            delete: delete1Kid\r\n\r\n        },\r\n        'appetizer':{\r\n            delete: delete1Appetizer\r\n\r\n        }\r\n    }\r\n    const category = props.category;\r\n    const url = props.cardUrl;\r\n    const id = props.id;\r\n    const [hov, setHov] = useState(false);\r\n    const [editPizza, setEditPizza] = useState(false); //State of modal edit\r\n    const [deletePizza, setDeletePizza] = useState(false); //State of modal delete\r\n    const [name, setName] = useState(props.item.title);\r\n    const [price, setPrice] = useState(props.item.price);\r\n    const [sizes, setSizes] = useState(props.item.size);\r\n    const [description, setDescription] = useState(props.item.description);\r\n    const [image, setImage] = useState(props.item.image_url);\r\n    const [toppings, setToppings] = useState(props.item.topping);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n    }\r\n\r\n    const checkItem = () => {\r\n        if(category == 'pizza'){\r\n            if(name.length == 0 || description.length ==0 || image.length == 0 || price.length == 0 ||\r\n                (toppings[0].topping_name.length ==0 && toppings[0].topping_price.length ==0) || sizes[0].type_price.length ==0 ||\r\n                sizes[0].type_detail.length == 0 ){\r\n                    alert(\"Hãy điền đủ thông tin!\")\r\n                    return false;\r\n                }\r\n            if(isNaN(parseInt(price)) ){\r\n                alert(\"Giá trị không hợp lệ !\");\r\n                return false;\r\n            }\r\n            sizes.forEach(a => {\r\n                if(isNaN(parseInt(a.type_price)) || parseInt(a.type_price) < 0 || a.type_detail.length == 0){\r\n                    alert(\"Giá trị không hợp lệ !\");\r\n                    return false;\r\n                }\r\n            });\r\n            if(!((toppings[0].topping_name.length ==0 && toppings[0].topping_price.length ==0) && toppings.length == 1))\r\n            toppings.forEach(a => {\r\n                if(isNaN(parseInt(a.topping_price)) || parseInt(a.topping_price) <= 0 || a.topping_name.length == 0){\r\n                    alert(\"Giá trị không hợp lệ !\");\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            if(name.length == 0 || description.length ==0 || image.length == 0 || price.length == 0){\r\n                    alert(\"Hãy điền đủ thông tin!\")\r\n                    return false;\r\n                }\r\n            if(isNaN(parseInt(price)) ){\r\n                alert(\"Giá trị không hợp lệ!\");\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    //handle the dynamic Sizes in Modal\r\n    const handleSizeChange = (index, e) => {\r\n        const Sizes = [...sizes];\r\n        Sizes[index][e.target.name] =e.target.value ;\r\n        setSizes(Sizes);\r\n    }\r\n\r\n    const handleAddSize = () => {\r\n        setSizes([...sizes, {type_detail: '', type_price: ''}]);\r\n    }\r\n\r\n    const handleRemoveSize = (index) => {\r\n        const Sizes = [...sizes];\r\n        Sizes.splice(index,1);\r\n        setSizes(Sizes);\r\n    }\r\n    // ...........\r\n\r\n    //handle the dynamic Toppings in Modal\r\n    const handleToppingChange = (index, e) => {\r\n        const Toppings = [...toppings];\r\n        Toppings[index][e.target.name] = e.target.value;\r\n        setToppings(Toppings);\r\n    }\r\n\r\n    const handleAddTopping = () => {\r\n        setToppings([...toppings, {topping_name: '', topping_price: ''}]);\r\n    }\r\n\r\n    const handleRemoveTopping = (index) => {\r\n        const Toppings = [...toppings];\r\n        Toppings.splice(index,1);\r\n        setToppings(Toppings);\r\n    }\r\n    // ...........\r\n    const EditHandle = async () => {\r\n        const newItem = {\r\n            comment: props.item.comment,\r\n            description: description,\r\n            image_url: image,\r\n            order_number: props.item.order_number,\r\n            price: parseInt(price), \r\n            rating: props.item.rating,\r\n            title: name,\r\n        };\r\n        if(category == 'pizza'){\r\n            newItem['size'] = [];\r\n            sizes.forEach(a => newItem['size'].push({\"type_detail\":a.type_detail, \"type_price\": parseInt(a.type_price)}));\r\n            newItem['topping'] = [];\r\n            toppings.forEach(a => newItem['topping'].push({ \"topping_name\":a.topping_name, \"topping_price\": parseInt(a.topping_price)}));\r\n            newItem['type'] = [\"Đế giòn\",\"Đế mềm xốp truyền thống\"];\r\n        }\r\n        try {\r\n            const resp = await axios.put(url, newItem);\r\n            if (resp.statusText === \"OK\"){\r\n\r\n            }else{\r\n                alert(\"Sua khong thanh cong !\");\r\n            }\r\n        } catch (err) {\r\n            // Handle Error Here\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    const DeleteHandle = async () => { \r\n        try {\r\n            const resp = await axios.delete(url);\r\n            console.log(resp);\r\n            if (resp.statusText === \"OK\"){\r\n                // setInterval(window.location.reload(), 1000);\r\n                dispatch(categories[category].delete({id: id}));\r\n            }\r\n        } catch (err) {\r\n            // Handle Error Here\r\n            console.error(err);\r\n        }\r\n    }\r\n    return (\r\n        <Box\r\n        sx={{\r\n            marginTop: '100px'\r\n        }}\r\n        >\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {() => {if(hov === true) switchHov()}}\r\n        sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'start',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\r\n            maxWidth: '200px',\r\n            height: '350px',\r\n            borderRadius: '24px',\r\n            p: 3,\r\n            boxSizing: 'border-box',\r\n            marginRight: {md: 0, sm: 2, xs: 2}\r\n        }}\r\n        >\r\n            <img \r\n            src={image}\r\n            alt={name}\r\n            style={{\r\n            borderRadius: '50%',\r\n            boxShadow: '0px 30px 30px rgba(234, 106, 18, 0.05)',\r\n            alignSelf: 'center',\r\n            transform: 'translateY(-34px)',\r\n            objectFit: 'cover',\r\n            // boxShadow: '1px -1px 5px rgba(0,0,0, 0.5)',\r\n            width: '150px', height: '150px',\r\n            marginTop: '-1000px',\r\n            }}\r\n            />\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{name.length < 16 ? name : name.slice(0, 15) + '...' }\r\n            </Typography>\r\n            <Rating value={props.item.rating} readOnly\r\n            sx={{\r\n                color: hov? 'white':'#EA6A12',\r\n            }}\r\n            icon={<StarRoundedIcon/>}\r\n            emptyIcon={<StarRoundedIcon/>}\r\n            />\r\n            <Stack\r\n            direction='row'\r\n            spacing={3}\r\n            sx={{\r\n                marginTop: '20px'\r\n            }}\r\n            >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': '#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    > {price} VND\r\n                </Typography>\r\n            </Stack>\r\n            <Stack\r\n            spacing={2}\r\n            sx={{width:'100%', marginTop:'14px'}}\r\n            >\r\n                <Button variant=\"contained\" startIcon = {<EditIcon sx={{color: hov?  '#EA6A12': 'white'}}/>}\r\n                sx={{\r\n                    backgroundColor: hov? 'white': 'rgba(234, 106, 18, 0.7)',\r\n                    '&:active, &:hover':{\r\n                        backgroundColor:  'white'\r\n                    }\r\n                }}\r\n                onClick={(e)=>{\r\n                    e.stopPropagation();\r\n                    return setEditPizza(true)}}\r\n                >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '14px',\r\n                        lineHeight: '175%',\r\n                        color: hov?  '#EA6A12': 'white',\r\n                        textAlign: 'center',\r\n                        \r\n                    }}\r\n                    >Sửa\r\n                </Typography>\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon = {<DeleteIcon sx={{color: hov?  '#EA6A12': 'white'}}/>}\r\n                sx={{\r\n                    backgroundColor: hov? 'white': 'rgba(234, 106, 18, 0.7)',\r\n                    '&:active, &:hover':{\r\n                        backgroundColor:  'white'\r\n                    }\r\n                }}\r\n                onClick={(e)=>{\r\n                    e.stopPropagation();\r\n                    return setDeletePizza(true)}}\r\n                >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '14px',\r\n                        lineHeight: '175%',\r\n                        color: hov?  '#EA6A12': 'white',\r\n                        textAlign: 'center'\r\n                    }}\r\n                    >Xóa\r\n                </Typography>\r\n                </Button>\r\n            </Stack>\r\n        </Box>\r\n        <Modal open={editPizza} onClose = {() => {if(hov === true) switchHov() ;setEditPizza(false)}}>\r\n            <Fade in={editPizza} timeout={500}>\r\n            <Stack\r\n            spacing = {2}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 3,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '80%', xs: '90%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Sửa món\r\n                </Typography>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setName(e.target.value)}}\r\n                required defaultValue={name}\r\n                variant=\"standard\"\r\n                id=\"name-field\"\r\n                label=\"Tên\"\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '60%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setPrice(e.target.value)}}\r\n                    required defaultValue={price}\r\n                    variant=\"standard\"\r\n                    id=\"price-field\"\r\n                    label=\"Giá\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,}} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '40%'\r\n                    }}\r\n                />\r\n                </Stack>\r\n\r\n                {\r\n                    category ==='pizza' &&\r\n                    <Box \r\n                    sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxHeight:'162px',\r\n                    overflow: 'auto',\r\n                    }}\r\n                    >\r\n                    {sizes.map((size, index) => (\r\n                        <Stack key={index} direction='row' spacing={2} sx={{marginTop:'6px'}}\r\n                        >\r\n                            <TextField onChange={(e) => {handleSizeChange(index, e)}}\r\n                            required value={size.type_detail}\r\n                            variant=\"standard\" defaultValue={size.type_detail}\r\n                            name=\"type_detail\"\r\n                            label=\"Cỡ\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <TextField onChange={(e) => {handleSizeChange(index, e)}}\r\n                            required value={size.type_price}\r\n                            variant=\"standard\" defaultValue={size.type_price}\r\n                            name=\"type_price\"\r\n                            label=\"Giá cỡ\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'}, endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <IconButton disabled={sizes.length === 1} onClick={(index) => handleRemoveSize(index)}>\r\n                                <RemoveCircleOutlineIcon \r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></RemoveCircleOutlineIcon>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => handleAddSize()}>\r\n                                <AddCircleOutlineIcon\r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></AddCircleOutlineIcon>\r\n                            </IconButton>\r\n                        </Stack>\r\n                    ))}\r\n                    </Box>\r\n                    \r\n                }\r\n\r\n                <TextField onChange={(e) => {setDescription(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={4}\r\n                id=\"description-field\" label=\"Mô tả\" defaultValue={description}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setImage(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={1}\r\n                id=\"image-field\" label=\"URL Ảnh\" defaultValue={image}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n\r\n                {\r\n                    category ==='pizza' &&\r\n                    <Box \r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        maxHeight:'162px',\r\n                        overflow: 'auto',\r\n                    }}\r\n                    >\r\n                    {toppings.map((topping, index) => (\r\n                        <Stack key={index} direction='row' spacing={2} sx={{marginTop:'6px'}}\r\n                        >\r\n                            <TextField onChange={(e) => {handleToppingChange(index, e)}}\r\n                            required value={topping.topping_name}\r\n                            variant=\"standard\" defaultValue={topping.topping_name}\r\n                            name=\"topping_name\"\r\n                            label=\"Tên Topping\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <TextField onChange={(e) => {handleToppingChange(index, e)}}\r\n                            required value={topping.topping_price}\r\n                            variant=\"standard\" defaultValue={topping.topping_price}\r\n                            name=\"topping_price\"\r\n                            label=\"Giá Topping\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'}, endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <IconButton disabled={toppings.length === 1} onClick={(index) => handleRemoveTopping(index)}>\r\n                                <RemoveCircleOutlineIcon \r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></RemoveCircleOutlineIcon>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => handleAddTopping()}>\r\n                                <AddCircleOutlineIcon\r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></AddCircleOutlineIcon>\r\n                            </IconButton>\r\n                        </Stack>\r\n                    ))}\r\n                    </Box>\r\n                }\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{\r\n                        if(checkItem()){\r\n                            if(hov === true) switchHov()\r\n                            setEditPizza(false);\r\n                            EditHandle()}}\r\n                        }\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                    Lưu\r\n                </Button>\r\n               \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        <Modal open={deletePizza} onClose = {() => {if(hov === true ) switchHov() ;setDeletePizza(false)}}>\r\n            <Fade in={deletePizza} timeout={500}>\r\n            <Stack\r\n            spacing = {2}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 3,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '60%', xs: '60%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Bạn có chắc muốn xóa món này ?\r\n                </Typography>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{setDeletePizza(false);\r\n                        return DeleteHandle()}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        width: '50%'\r\n                    }}\r\n                    >\r\n                    Có\r\n                </Button>\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{setDeletePizza(false)}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        width: '50%'\r\n                    }}\r\n                    >\r\n                    Không\r\n                </Button>\r\n                </Stack>\r\n               \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const ComboManageCard = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const combo = props.combo;\r\n    const [hov, setHov] = useState(false);\r\n    const [editCombo, setEditCombo] = useState(false);\r\n    const [deleteCombo, setDeleteCombo] = useState(false);\r\n    const url = props.cardUrl;\r\n    const comboId = props.comboId;\r\n\r\n\r\n    const currencies = [\r\n        {\r\n          value: 'dessert',\r\n          label: 'Dessert',\r\n        },\r\n        {\r\n          value: 'kid',\r\n          label: 'Kid',\r\n        },\r\n        {\r\n          value: 'vegetable',\r\n          label: 'Vegetable',\r\n        },\r\n        {\r\n          value: 'drink',\r\n          label: 'Drink',\r\n        },\r\n        {\r\n            value: 'appetizer',\r\n            label: 'Appetizer',\r\n          },\r\n    ];\r\n\r\n    //Variable of new Combo\r\n    const [title, setTitle] = useState(combo.title);\r\n    const [subtitle, setSubTitle] = useState(combo.subtitle);\r\n    const [banner, setBanner] = useState(combo.banner);\r\n    \r\n    const [description, setDescription] = useState(combo.description);\r\n    const [image, setImage] = useState(combo.image);\r\n    const [start, setStart] = useState(new Date(combo.start * 1000).toLocaleString());\r\n    const [end, setEnd] = useState(new Date(combo.end * 1000).toLocaleString());\r\n    const [off, setOff] = useState(combo.off);\r\n    const [persons, setPerson] = useState(combo.persons);\r\n    const [pizza, setPizza] = useState(combo.pizza);\r\n    let b =[{name: '', number:''},];\r\n    if(combo.hasOwnProperty('free') ){\r\n        b = [];\r\n        let key = Object.keys(combo.free);\r\n        for (const k of key ) b.push({'name' : k, 'number' : combo.free[k]})\r\n        \r\n    }\r\n    const [free, setFree] = useState(b);\r\n    \r\n    let keys = Object.keys(combo);\r\n    let a =[];\r\n    for (const k of keys ) {\r\n        if(k !== \"title\" && k !== \"subtitle\" && k !== \"banner\" && k !== \"image\" && k !== \"description\" && k !== \"start\"\r\n        && k !== \"end\" && k !== \"persons\" && k !== \"pizza\" && k !== \"off\" && k !== \"free\"){\r\n            a.push({'name' : k, 'number' : combo[k],})\r\n        }\r\n    }\r\n    const [categorys, setCategorys] = useState(a);\r\n    const [comboType, setComboType] = useState(combo.hasOwnProperty('free') ? \"free\" : \"off\");\r\n    const [type, setType] = useState(comboType == 'off' ? true : false);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n    }\r\n    const handleChangeType = (event) => {\r\n        setComboType(event.target.value);\r\n        setType(!type);\r\n        \r\n    };\r\n\r\n    const checkCombo = () => {\r\n        if(title.length == 0 || subtitle.length == 0 || (off.length == 0 && (free[0].number == ''))\r\n        || persons.length == 0 || pizza.length ==0 || categorys[0].number =='' || description.length ==0\r\n        || banner.length == 0 || image.length == 0){\r\n            alert(\"Chưa điền đủ thông tin !\")\r\n            return false;\r\n        }\r\n        if(isNaN(parseInt(persons)) || isNaN(parseInt(pizza)) || (isNaN(parseInt(off)) && comboType == 'off') ){\r\n            alert(\"Giá trị không hợp lệ !\");\r\n            return false;\r\n        }\r\n        if(comboType == 'free'){\r\n            free.forEach(a => {\r\n                if(isNaN(parseInt(a.number)) || parseInt(a.number) <= 0){\r\n                    alert(\"Giá trị không hợp lệ !\");\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        categorys.forEach(a => {\r\n            if(isNaN(parseInt(a.number)) || parseInt(a.number) <= 0){\r\n                alert(\"Giá trị không hợp lệ !\");\r\n                return false;\r\n            }\r\n        })\r\n        return true;\r\n    }\r\n\r\n    //handle the dynamic Sizes in Modal\r\n    const handleCategoryChange = (index, e) => {\r\n        const Categories = [...categorys];\r\n        Categories[index][e.target.name] =e.target.name ==='name' ? e.target.value : parseInt(e.target.value);\r\n        setCategorys(Categories);\r\n    }\r\n\r\n    const handleAddCategory = () => {\r\n        setCategorys([...categorys, {name: '', number: ''}]);\r\n    }\r\n\r\n    const handleRemoveCategory = (index,e ) => {\r\n        const Categories = [...categorys];\r\n        Categories.splice(index,1);\r\n        setCategorys(Categories);\r\n    }\r\n    // ...........\r\n    //handle the dynamic Free in Modal\r\n    const handleFreeChange = (index, e) => {\r\n        const Free = [...free];\r\n        Free[index][e.target.name] =e.target.name ==='name' ? e.target.value : parseInt(e.target.value);\r\n        setFree(Free);\r\n    }\r\n\r\n    const handleAddFree = () => {\r\n        setFree([...free, {name: '', number: ''}]);\r\n    }\r\n\r\n    const handleRemoveFree = (index) => {\r\n        const Free = [...free];\r\n        Free.splice(index,1);\r\n        setFree(Free);\r\n    }\r\n    // ...........\r\n\r\n\r\n    const handleEditCombo = async () => {\r\n        const newItem = {\r\n            banner: banner,\r\n            description: description,\r\n            image: image,\r\n            start: Date.parse(start) / 1000,\r\n            end: Date.parse(end) / 1000, \r\n            persons: parseInt(persons),\r\n            title: title,\r\n            subtitle: subtitle,\r\n            pizza: parseInt(pizza),\r\n            off: parseInt(off),\r\n        };\r\n        if(categorys[0].name !== ''){\r\n            categorys.forEach(a => newItem[a.name] = parseInt(a.number));\r\n        }\r\n        if(comboType == 'free'){\r\n            newItem['free'] = {};\r\n            free.forEach(a => newItem['free'][a.name] =parseInt(a.number));\r\n            newItem.off = 0;\r\n        }\r\n\r\n        try {\r\n            const resp = await axios.put(url, newItem);\r\n            if (resp.statusText !== \"OK\"){\r\n                alert(\"Sửa không thành công !\");\r\n            }\r\n        } catch (err) {\r\n            // Handle Error Here\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    const handleDeleteCombo = async () => { \r\n        try {\r\n            const resp = await axios.delete(url);\r\n            if (resp.statusText === \"OK\"){\r\n                dispatch(delete1Combo({id: comboId}));\r\n                // setInterval(window.location.reload(), 1000);\r\n            }\r\n        } catch (err) {\r\n            // Handle Error Here\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Box\r\n        sx={{\r\n            marginTop: '100px'\r\n        }}\r\n        >\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {() => {if(hov === true) switchHov()}}\r\n        sx={{\r\n            display: 'flex',\r\n            flexDirection:'column',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            maxWidth: '274px',\r\n            maxHeight: '400px',\r\n            borderRadius: '24px',\r\n            p: 3,\r\n            boxSizing: 'border-box',\r\n            marginRight: '2.5%',\r\n            marginLeft: '2.5%',\r\n            boxShadow: '1px 1px 5px rgba(0,0,0, 0.5)'\r\n        }}\r\n        >\r\n            <Box\r\n            sx={{display: 'flex',\r\n            alignItems: 'center',}}\r\n            >\r\n            <Stack spacing={1} sx={{minWidth: '150px'}}>\r\n            <Typography variant=\"subtitle1\" \r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: hov? 'white':'#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >❤️ {subtitle.length <= 20 ? subtitle : subtitle.slice(0, 17) + '...'}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{title.slice(0, 15)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        color: hov? 'white': '#959895',\r\n                        textAlign: 'start',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{new Date() / 1000 > end/1000 ? \"Expired\" : timeToDate(start) + \" - \" + timeToDate(end)}   \r\n            </Typography>\r\n            <Divider variant=\"light\"  sx={{\r\n                width: '50%',\r\n                color: hov?'white': 'rgb(0,0,0,0.5)'\r\n            }}/>\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '13px',\r\n                        lineHeight: '22.75px',\r\n                        textAlign: 'start',\r\n                        color: hov? 'white': '#959895',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    >{persons} người             \r\n            </Typography>\r\n            <Stack\r\n            direction='row'\r\n            spacing={1}\r\n            sx={{\r\n                marginTop: '20px'\r\n            }}\r\n            >\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': '#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{off == 0 ? 'Bonus' : off + '% Off'}\r\n                </Typography>\r\n    \r\n            </Stack>\r\n            \r\n            </Stack>\r\n            <img\r\n            src={image}\r\n            alt={title}\r\n            style={{\r\n            borderRadius: '50%',\r\n            objectFit: 'cover',\r\n            //boxShadow: '-10px 0px 30px rgba(0, 0, 0, 0.1)',\r\n            alignItems:'center',\r\n            //transform: 'translateY(-30%)',\r\n            width: '159px', height: '159px',\r\n            }}\r\n            />\r\n            </Box>\r\n            <Box\r\n            >\r\n                <Stack\r\n                spacing={2}\r\n                sx={{width:'100%', marginTop:'14px'}}\r\n                >\r\n                    <Button variant=\"contained\" startIcon = {<EditIcon sx={{color: hov?  '#EA6A12': 'white'}}/>}\r\n                    sx={{\r\n                        width:'100%',\r\n                        backgroundColor: hov? 'white': 'rgba(234, 106, 18, 0.7)',\r\n                        '&:active, &:hover':{\r\n                            backgroundColor:  'white'\r\n                        }\r\n                    }}\r\n                    onClick={(e)=>{\r\n                        e.stopPropagation();\r\n                        return setEditCombo(true)}}\r\n                    >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '14px',\r\n                        lineHeight: '175%',\r\n                        color: hov?  '#EA6A12': 'white',\r\n                        textAlign: 'center',\r\n                        \r\n                    }}\r\n                    >Sửa\r\n                </Typography>\r\n                </Button>\r\n                <Button variant=\"contained\" startIcon = {<DeleteIcon sx={{color: hov?  '#EA6A12': 'white'}}/>}\r\n                sx={{\r\n                    backgroundColor: hov? 'white': 'rgba(234, 106, 18, 0.7)',\r\n                    '&:active, &:hover':{\r\n                        backgroundColor:  'white'\r\n                    }\r\n                }}\r\n                onClick={(e)=>{\r\n                    e.stopPropagation();\r\n                    return setDeleteCombo(true)}}\r\n                >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '14px',\r\n                        lineHeight: '175%',\r\n                        color: hov?  '#EA6A12': 'white',\r\n                        textAlign: 'center'\r\n                    }}\r\n                    >Xóa\r\n                </Typography>\r\n                </Button>\r\n            </Stack>\r\n            </Box>\r\n            \r\n            <Modal open={editCombo} onClose = {() => {if(hov === true) switchHov(); setEditCombo(false)}}>\r\n            <Fade in={editCombo} timeout={500}>\r\n            <Stack\r\n            spacing = {1}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 3,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '80%', xs: '90%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >{'Sửa Combo'}\r\n                </Typography>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setTitle(e.target.value)}}\r\n                required defaultValue={title}\r\n                variant=\"standard\"\r\n                id=\"title\"\r\n                label=\"Tên Combo\"\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '50%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setSubTitle(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={4}\r\n                id=\"subtitle\" label=\"Phụ đề\" defaultValue={subtitle}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '50%'\r\n                }}\r\n                />\r\n                </Stack>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Loại Combo</FormLabel>\r\n                    <RadioGroup row\r\n                        aria-label=\"Type Combo\"\r\n                        name=\"comboType\"\r\n                        value={comboType}\r\n                        onChange={(e) => handleChangeType(e)}\r\n                    >\r\n                        <FormControlLabel value=\"off\" control={<Radio />} label=\"% Giảm giá\" />\r\n                        <FormControlLabel value=\"free\" control={<Radio />} label=\"Miễn phí\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setOff((e.target.value))}}\r\n                    disabled={!type ? true : false} value={off} \r\n                    variant=\"standard\"\r\n                    id=\"off\"\r\n                    label=\"%Giảm giá\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, }} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '40%'\r\n                    }}\r\n                />\r\n                <Box \r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxHeight:'60px',\r\n                    overflow: 'auto',\r\n                    width: '54%'\r\n                }}\r\n                >\r\n                {free && free.map((fre, index) => (\r\n                    <Stack key={index} direction='row' spacing={2} \r\n                    >\r\n                        <TextField\r\n                        name=\"name\" variant=\"standard\" disabled={type ? true : false}\r\n                        select \r\n                        label=\"Loại\"\r\n                        value={fre.name}\r\n                        onChange={(e) => {handleFreeChange(index, e)}}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '70%'\r\n                        }}\r\n                        >\r\n                        {currencies.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n\r\n                        </TextField>\r\n                        \r\n                        <TextField onChange={(e) => {handleFreeChange(index, e)}}\r\n                        value={'' +  fre.number} disabled={type ? true : false}\r\n                        variant=\"standard\"\r\n                        name=\"number\"\r\n                        label=\"Số lượng\"\r\n                        multiline\r\n                        maxRows={1}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '30%'\r\n                        }}\r\n                        />\r\n                        <IconButton disabled={free.length === 1} onClick={(index) => handleRemoveFree(index)}>\r\n                            <RemoveCircleOutlineIcon \r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></RemoveCircleOutlineIcon>\r\n                        </IconButton>\r\n                        <IconButton disabled={type ? true : false} onClick={() => handleAddFree()}>\r\n                            <AddCircleOutlineIcon \r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></AddCircleOutlineIcon>\r\n                        </IconButton>\r\n                    </Stack>\r\n                ))}\r\n                </Box>\r\n                </Stack>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setPerson(e.target.value)}}\r\n                    required defaultValue={persons}\r\n                    variant=\"standard\"\r\n                    id=\"persons\"\r\n                    label=\"Số người\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, }} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '50%'\r\n                    }}\r\n                />\r\n                <TextField onChange={(e) => {setPizza(e.target.value)}}\r\n                    required  defaultValue={pizza}\r\n                    variant=\"standard\"\r\n                    id=\"pizza\"\r\n                    label=\"Pizza\" \r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, }} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '50%'\r\n                    }}\r\n                />\r\n                </Stack>\r\n\r\n                <Box \r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxHeight:'110px',\r\n                    overflow: 'auto',\r\n                }}\r\n                >\r\n                {categorys.map((category, index) => (\r\n                    <Stack key={index} direction='row' spacing={2} sx={{marginTop:'6px'}}\r\n                    >\r\n                        <TextField\r\n                        name=\"name\" variant=\"standard\"\r\n                        select \r\n                        label=\"Loại\"\r\n                        value={category.name}\r\n                        onChange={(e) => {handleCategoryChange(index, e)}}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '40%'\r\n                        }}\r\n                        >\r\n                        {currencies.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n\r\n                        </TextField>\r\n\r\n                        <TextField onChange={(e) => {handleCategoryChange(index, e)}}\r\n                        required defaultValue={category.number}\r\n                        variant=\"standard\"\r\n                        name=\"number\"\r\n                        label=\"Số lượng\"\r\n                        multiline\r\n                        maxRows={1}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '40%'\r\n                        }}\r\n                        />\r\n                        <IconButton disabled={categorys.length === 1} onClick={(e) => handleRemoveCategory(index,e)}>\r\n                            <RemoveCircleOutlineIcon \r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></RemoveCircleOutlineIcon>\r\n                        </IconButton>\r\n                        <IconButton onClick={() => handleAddCategory()}>\r\n                            <AddCircleOutlineIcon\r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></AddCircleOutlineIcon>\r\n                        </IconButton>\r\n                    </Stack>\r\n                ))}\r\n                </Box>\r\n                <TextField onChange={(e) => {setDescription(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={4}\r\n                id=\"description\" label=\"Mô tả\" defaultValue={description}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setBanner(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={1}\r\n                id=\"banner\" label=\"URL Banner\" defaultValue={banner}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setImage(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={1}\r\n                id=\"image\" label=\"URL Ảnh\" defaultValue = {image}\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <Stack\r\n                direction={'row'} spacing={4}\r\n                >\r\n                    <DateTimePicker\r\n                    sx={{width:'50%'}} \r\n                    label=\"Bắt đầu\" \r\n                    value={start}\r\n                    onChange={(newValue) => {\r\n                        setStart(newValue);\r\n                      }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <DateTimePicker\r\n                    sx={{width:'50%'}}\r\n                    label=\"Kết thúc\"\r\n                    value={end}\r\n                    onChange={(newValue) => {setEnd(newValue)}}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </Stack>\r\n                </LocalizationProvider>\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{\r\n                        if(checkCombo()){\r\n                            if(hov === true) switchHov()\r\n                            setEditCombo(false);\r\n                            handleEditCombo();\r\n                        }\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                    Lưu \r\n                </Button>\r\n               \r\n            </Stack>\r\n\r\n            </Fade>\r\n            </Modal>\r\n\r\n            <Modal open={deleteCombo} onClose = {() => {if(hov === true) switchHov() ;setDeleteCombo(false)}}>\r\n            <Fade in={deleteCombo} timeout={500}>\r\n            <Stack\r\n            spacing = {2}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 3,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '60%', xs: '60%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Bạn có muốn xóa combo này?\r\n                </Typography>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{setDeleteCombo(false);\r\n                        return handleDeleteCombo()}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        width: '50%'\r\n                    }}\r\n                    >\r\n                    Có\r\n                </Button>\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{setDeleteCombo(false)}}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        width: '50%'\r\n                    }}\r\n                    >\r\n                    Không\r\n                </Button>\r\n                </Stack>\r\n               \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        </Box>\r\n        </Box>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport {Box, Typography, styled, Pagination, Grow, Button, Modal, Fade, Stack, TextField,IconButton, Snackbar, Radio,MenuItem,\r\nRadioGroup, FormControlLabel, FormControl, FormLabel} from '@mui/material';\r\nimport { useSelector ,useDispatch} from \"react-redux\";\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport { add1Combo } from \"../store/comboSlice\";\r\nimport { add1Pizza } from \"../store/categories/pizzaSlice\";\r\nimport { add1Appetizer } from \"../store/categories/appetizerSlice\";\r\nimport { add1Dessert } from \"../store/categories/dessertSlice\";\r\nimport { add1Drink } from \"../store/categories/drinkSlice\";\r\nimport { add1Kid } from \"../store/categories/kidSlice\";\r\nimport { add1Vegetable } from \"../store/categories/vegetableSlice\";\r\nimport { PizzaManageCard, ComboManageCard } from \"./manageCard\";\r\n\r\n\r\nconst axios = require('axios');\r\nexport const CustomPagination = styled(Pagination)({\r\n    \"& .MuiPaginationItem-root\": {\r\n        fontFamily: 'be Vietnam'\r\n    },\r\n    \"& .MuiPaginationItem-root:active\": {\r\n        backgroundColor: 'rgb(234, 106, 18, 0.5)',\r\n    },\r\n    '& .Mui-selected': {\r\n        backgroundColor: 'rgb(234, 106, 18, 0.5)',\r\n    }\r\n})\r\n\r\nexport const ComboManage = ()=> {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.combos.entities);\r\n    const ids = useSelector(state => state.combos.ids);\r\n    const [addCombo, setAddCombo] = useState(false);\r\n    const url= 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/combo.json';\r\n    const max = 16;\r\n    const [page, setPage] = useState(1);\r\n    const totalPage = Math.ceil(ids.length / max);\r\n    const pageList = [];\r\n\r\n    const currencies = [\r\n        {\r\n          value: 'dessert',\r\n          label: 'Dessert',\r\n        },\r\n        {\r\n          value: 'kid',\r\n          label: 'Kid',\r\n        },\r\n        {\r\n          value: 'vegetable',\r\n          label: 'Vegetable',\r\n        },\r\n        {\r\n          value: 'drink',\r\n          label: 'Drink',\r\n        },\r\n        {\r\n            value: 'appetizer',\r\n            label: 'Appetizer',\r\n          },\r\n    ];\r\n\r\n    //Variable of new Combo\r\n    const [title, setTitle] = useState('');\r\n    const [subtitle, setSubTitle] = useState('');\r\n    const [banner, setBanner] = useState('');\r\n    const [categorys, setCategorys] = useState([\r\n       {name: 'dessert', number:''},\r\n    ]);\r\n    const [free, setFree] = useState([\r\n        {name: 'dessert', number:''},\r\n     ]);\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [start, setStart] = useState(new Date());\r\n    const [end, setEnd] = useState(new Date());\r\n    const [off, setOff] = useState('');\r\n    const [persons, setPerson] = useState('');\r\n    const [pizza, setPizza] = useState('');\r\n    //\r\n\r\n    const [comboType, setComboType] = useState(\"off\");\r\n    const [type, setType] = useState(true);\r\n    const [cmt, setCmt] = useState(false);\r\n    const [posted, setPosted] = useState(false);\r\n    const [message, setMess] = useState('');\r\n\r\n    const closeCmt = () =>{\r\n        setCmt(false);\r\n        \r\n        setCategorys([\r\n            {name: 'desset', number:''},\r\n        ]);\r\n        setFree([\r\n            {name: 'dessert', number:''},\r\n        ]);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setComboType(event.target.value);\r\n        setType(!type);\r\n        \r\n    };\r\n    //handle the dynamic Category in Modal\r\n    const handleCategoryChange = (index, e) => {\r\n        const Categories = [...categorys];\r\n        Categories[index][e.target.name] = (e.target.value);\r\n        setCategorys(Categories);\r\n    }\r\n\r\n    const handleAddCategory = () => {\r\n        setCategorys([...categorys, {name: 'dessert', number: ''}]);\r\n    }\r\n\r\n    const handleRemoveCategory = (index, e) => {\r\n        const Categories = [...categorys];\r\n        Categories.splice(index,1);\r\n        setCategorys(Categories);\r\n    }\r\n    // ...........\r\n\r\n    //handle the dynamic Free in Modal\r\n    const handleFreeChange = (index, e) => {\r\n        const Free = [...free];\r\n        Free[index][e.target.name] =e.target.value ;\r\n        setFree(Free);\r\n    }\r\n\r\n    const handleAddFree = () => {\r\n        setFree([...free, {name: 'dessert', number: ''}]);\r\n    }\r\n\r\n    const handleRemoveFree = (index, e) => {\r\n        const Free = [...free];\r\n        Free.splice(index,1);\r\n        setFree(Free);\r\n    }\r\n    // ...........\r\n\r\n    \r\n\r\n    // const handleaddPizza = () => {\r\n    //     console.log( {\r\n    //         comment : [],\r\n    //         description : newDescription,\r\n    //         image_url : newImage,\r\n    //         order_number : 0,\r\n    //         price : newPrice,\r\n    //         rating: 0,\r\n    //         size: newSizes,\r\n    //         title: newName,\r\n    //         topping: newToppings,\r\n    //         type: [\"Đế giòn\",\"Đế mềm xốp truyền thống\"]\r\n    //     })\r\n    // }\r\n\r\n    //Check combo property\r\n    const checkCombo = () => {\r\n        if(title.length == 0 || subtitle.length == 0 || (off.length == 0 && (free[0].number == ''))\r\n        || persons.length == 0 || pizza.length ==0 || categorys[0].number =='' || description.length ==0\r\n        || banner.length == 0 || image.length == 0){\r\n            alert(\"The form has not been completed !\")\r\n            return false;\r\n        }\r\n        if(isNaN(parseInt(persons)) || isNaN(parseInt(pizza)) || (isNaN(parseInt(off)) && comboType == 'off') ){\r\n            alert(\"Invalid value !\");\r\n            return false;\r\n        }\r\n        if(comboType == 'free'){\r\n            free.forEach(a => {\r\n                if(isNaN(parseInt(a.number)) || parseInt(a.number) <= 0){\r\n                    alert(\"Invalid value !\");\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        categorys.forEach(a => {\r\n            if(isNaN(parseInt(a.number)) || parseInt(a.number) <= 0){\r\n                alert(\"Invalid value !\");\r\n                return false;\r\n            }\r\n        })\r\n        return true;\r\n    }\r\n    \r\n\r\n    const handleAddCombo = async () => {\r\n        const newItem = {\r\n            banner: banner,\r\n            description: description,\r\n            image: image,\r\n            start: Date.parse(start) / 1000,\r\n            end: Date.parse(end) / 1000, \r\n            persons: parseInt(persons),\r\n            title: title,\r\n            subtitle: subtitle,\r\n            pizza: parseInt(pizza),\r\n            off: parseInt(off),\r\n        };\r\n\r\n        if(categorys[0].name !== ''){\r\n            categorys.forEach(a => newItem[a.name] = parseInt(a.number));\r\n        }\r\n        if(comboType == 'free'){\r\n            newItem['free'] = {};\r\n            free.forEach(a => newItem['free'][a.name] = parseInt(a.number));\r\n            newItem.off = 0;\r\n        }\r\n        try {\r\n            const resp = await axios.post(url, newItem);\r\n            if (resp.statusText === \"OK\"){\r\n                dispatch(add1Combo({id: resp.data.name, itm: newItem}));\r\n                setMess('Đã thêm thành công');\r\n                setPosted(true);\r\n            }\r\n            closeCmt();\r\n        } catch (err) {\r\n            // Handle Error Here\r\n            alert(err);\r\n            setMess('Có sự cố xảy ra');\r\n            setPosted(false);\r\n        }\r\n    }\r\n\r\n\r\n    for(let i = 1;i <= totalPage;i++)pageList.push(i);\r\n    return(\r\n        <Box sx={{p: 5, marginBottom: '100px', width: '100%'}}>\r\n        <Box sx={{display: 'flex', justifyContent: 'space-between', padding: '0 50px 30px 50px'}}\r\n        >\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                    >Combos\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n                    onClick ={() => setAddCombo(true)}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2,\r\n                        marginRight: 2\r\n                    }}\r\n                    >\r\n                        Thêm Combo\r\n        </Button>\r\n        <Modal open={addCombo} onClose = {() => {setAddCombo(false)}}>\r\n            <Fade in={addCombo} timeout={500}>\r\n            <Stack\r\n            spacing = {2}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 3,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '80%', xs: '90%'},\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '40px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >{'Combo của bạn'}\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setTitle(e.target.value)}}\r\n                required\r\n                variant=\"standard\"\r\n                id=\"title\"\r\n                label=\"Combo\"\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '50%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setSubTitle(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={4}\r\n                id=\"subtitle\" label=\"Phụ đề\"\r\n                inputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '50%'\r\n                }}\r\n                />\r\n                </Stack>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Loại Combo</FormLabel>\r\n                    <RadioGroup row\r\n                        aria-label=\"Type Combo\"\r\n                        name=\"comboType\"\r\n                        value={comboType}\r\n                        onChange={(e) => handleChange(e)}\r\n                    >\r\n                        <FormControlLabel value=\"off\" control={<Radio />} label=\"% Giảm giá\" />\r\n                        <FormControlLabel value=\"free\" control={<Radio />} label=\"Miễn phí\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                \r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setOff(e.target.value)}}\r\n                    disabled={!type ? true : false} value={off}\r\n                    variant=\"standard\"\r\n                    id=\"off\"\r\n                    label=\"% giảm giá\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, }} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '40%'\r\n                    }}\r\n                />\r\n                <Box \r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxHeight:'60px',\r\n                    overflow: 'auto',\r\n                    width: '54%'\r\n                }}\r\n                >\r\n                {free.map((fre, index) => (\r\n                    <Stack key={index} direction='row' spacing={2} \r\n                    >\r\n                        <TextField\r\n                        name=\"name\" variant=\"standard\" disabled={type ? true : false}\r\n                        select \r\n                        label=\"Loại\"\r\n                        value={fre.name}\r\n                        onChange={(e) => {handleFreeChange(index, e)}}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '70%'\r\n                        }}\r\n                        >\r\n                        {currencies.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n\r\n                        </TextField>\r\n                        <TextField onChange={(e) => {handleFreeChange(index, e)}}\r\n                        value={'' +  fre.number} disabled={type ? true : false}\r\n                        variant=\"standard\"\r\n                        name=\"number\"\r\n                        label=\"Số lượng\"\r\n                        multiline\r\n                        maxRows={1}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '30%'\r\n                        }}\r\n                        />\r\n                        <IconButton disabled={free.length === 1} onClick={(e) => handleRemoveFree(index, e)}>\r\n                            <RemoveCircleOutlineIcon \r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></RemoveCircleOutlineIcon>\r\n                        </IconButton>\r\n                        <IconButton disabled={type ? true : false} onClick={() => handleAddFree()}>\r\n                            <AddCircleOutlineIcon \r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></AddCircleOutlineIcon>\r\n                        </IconButton>\r\n                    </Stack>\r\n                ))}\r\n                </Box>\r\n                </Stack>\r\n\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setPerson((e.target.value))}}\r\n                    required \r\n                    variant=\"standard\"\r\n                    id=\"person\"\r\n                    label=\"Người\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, }} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '50%'\r\n                    }}\r\n                />\r\n                <TextField onChange={(e) => {setPizza((e.target.value))}}\r\n                    required \r\n                    variant=\"standard\"\r\n                    id=\"pizza\"\r\n                    label=\"Pizza\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, }} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '50%'\r\n                    }}\r\n                />\r\n                </Stack>\r\n\r\n                <Box \r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    maxHeight:'110px',\r\n                    overflow: 'auto',\r\n                }}\r\n                >\r\n                {categorys.map((category, index) => (\r\n                    <Stack key={index} direction='row' spacing={2} sx={{marginTop:'6px'}}\r\n                    >\r\n                        <TextField\r\n                        name=\"name\" variant=\"standard\"\r\n                        select \r\n                        label=\"Loại\"\r\n                        value={category.name}\r\n                        onChange={(e) => {handleCategoryChange(index, e)}}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '40%'\r\n                        }}\r\n                        >\r\n                        {currencies.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                        </TextField>\r\n                        <TextField onChange={(e) => {handleCategoryChange(index, e)}}\r\n                        required value={'' +  category.number}\r\n                        variant=\"standard\"\r\n                        name=\"number\"\r\n                        label=\"Số lượng\"\r\n                        multiline\r\n                        maxRows={1}\r\n                        color='warning'\r\n                        InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                        InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                        sx={{\r\n                            width: '40%'\r\n                        }}\r\n                        />\r\n                        <IconButton disabled={categorys.length === 1} onClick={(e) => handleRemoveCategory(index, e)}>\r\n                            <RemoveCircleOutlineIcon \r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></RemoveCircleOutlineIcon>\r\n                        </IconButton>\r\n                        <IconButton onClick={() => handleAddCategory()}>\r\n                            <AddCircleOutlineIcon\r\n                            sx={{\r\n                                color:  '#EA6A12',\r\n                                '&:hover, &:active':{\r\n                                color: '#07143B'\r\n                                },\r\n                            }}\r\n                            ></AddCircleOutlineIcon>\r\n                        </IconButton>\r\n                    </Stack>\r\n                ))}\r\n                </Box>\r\n                <TextField onChange={(e) => {setDescription(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={4}\r\n                id=\"description\" label=\"Mô tả\"\r\n                inputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setBanner(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={1}\r\n                id=\"banner\" label=\"URL Banner\"\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setImage(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={1}\r\n                id=\"image\" label=\"URL Ảnh\"\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <Stack\r\n                direction={'row'} spacing={4}\r\n                >\r\n                    <DateTimePicker\r\n                    sx={{width:'50%'}} variant=\"standard\"\r\n                    label=\"Bắt đầu\" \r\n                    value={start}\r\n                    onChange={(newValue) => {\r\n                        setStart(newValue);\r\n                      }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                    <DateTimePicker\r\n                    sx={{width:'50%'}}\r\n                    label=\"Kết thúc\"\r\n                    value={end}\r\n                    onChange={(newValue) => setEnd(newValue)}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </Stack>\r\n                </LocalizationProvider>\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{\r\n                        if(checkCombo()){\r\n                            setAddCombo(false);\r\n                            handleAddCombo();\r\n                        }\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2,\r\n                    }}\r\n                    >\r\n                    Thêm\r\n                </Button>\r\n               \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        <Snackbar\r\n        open={posted}\r\n        onClose={() => {setPosted(false)}}\r\n        message={message}\r\n        autoHideDuration={6000}\r\n        />\r\n        </Box>\r\n        \r\n        {\r\n            pageList.map(p => {return(\r\n            <Grow in={page===p} mountOnEnter unmountOnExit timeout={page===p ? 1000: 0}>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            {\r\n                ids\r\n                .map((id, index) =>{\r\n                    return (index >= (page - 1)*max && index < page * max) ?\r\n                        <Box sx={{marginRight: '90px'}}>\r\n                            <ComboManageCard combo = {products[id]}\r\n                            comboId = {id} \r\n                            cardUrl = {'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/combo/'  + id + '.json'}\r\n                            />\r\n                            \r\n                        </Box>\r\n                    : false\r\n                })\r\n            }\r\n            </Box>\r\n                </Grow>   \r\n            )})\r\n        }\r\n        <Box sx={{marginTop: '100px', alignItems: 'center', width: '100%', marginLeft: '40%'}}>\r\n        <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}\r\n        />\r\n        </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport const PizzaManage = (props)=> {\r\n    const dispatch = useDispatch();\r\n    const categories = {\r\n        'pizza':{\r\n            selector: useSelector(state => state.pizzas),\r\n            menuName: 'Pizzas',\r\n            add: add1Pizza,\r\n            dbPath: 'main_courses',\r\n        },\r\n        'dessert':{\r\n            selector: useSelector(state => state.desserts),\r\n            menuName: 'Tráng miệng',\r\n            add: add1Dessert,\r\n            dbPath: 'dessert'\r\n        },\r\n        'drink':{\r\n            selector: useSelector(state => state.drinks),\r\n            menuName: 'Đồ uống',\r\n            add: add1Drink,\r\n            dbPath: 'drink'\r\n        },\r\n        'vegetable':{\r\n            selector: useSelector(state => state.vegetables),\r\n            menuName: 'Món chay',\r\n            add: add1Vegetable,\r\n            dbPath: 'vegetarian'\r\n        },\r\n        'kid':{\r\n            selector: useSelector(state => state.kids),\r\n            menuName: 'Đồ cho bé',\r\n            add: add1Kid,\r\n            dbPath: 'kid'\r\n        },\r\n        'appetizer':{\r\n            selector: useSelector(state => state.appetizers),\r\n            menuName: 'Khai vị',\r\n            add: add1Appetizer,\r\n            dbPath: 'appetizer'\r\n        }\r\n    }\r\n    const category = props.category;\r\n    const products = categories[category].selector.entities;\r\n    const ids = categories[category].selector.ids;\r\n    const [addPizza, setAddPizza] = useState(false);\r\n    const url= 'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_' + categories[category].dbPath + '.json';\r\n    const max = 30;\r\n    const [page, setPage] = useState(1);\r\n    const totalPage = Math.ceil(ids.length / max);\r\n    const pageList = [];\r\n    //Variable of new Pizza\r\n    const [newName, setNewName] = useState('');\r\n    const [newPrice, setNewPrice] = useState('');\r\n    const [newSizes, setNewSizes] = useState([\r\n       {type_detail: '', type_price:''},\r\n    ]);\r\n    const [newToppings, setNewToppings] = useState([\r\n        {topping_name: '', topping_price:''},\r\n     ]);\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [newImage, setNewImage] = useState('');\r\n    //\r\n    const [cmt, setCmt] = useState(false);\r\n    const [posted, setPosted] = useState(false);\r\n    const [message, setMess] = useState('');\r\n\r\n    const closeCmt = () =>{\r\n        setCmt(false);\r\n        setNewName('');\r\n        setNewDescription('');\r\n        setNewImage('');\r\n        setNewPrice(0);\r\n        setNewToppings([\r\n            {topping_name: '', topping_price:''},\r\n        ]);\r\n        setNewSizes([\r\n            {type_detail: '', type_price:''},\r\n        ]);\r\n    }\r\n\r\n    const checkItem = () => {\r\n            if(category == 'pizza'){\r\n                if(newName.length == 0 || newDescription.length ==0 || newImage.length == 0 || newPrice.length == 0 ||\r\n                    !(newToppings[0].topping_name.length ==0 && newToppings[0].topping_price.length ==0) || \r\n                    newSizes[0].type_price.length ==0 || newSizes[0].type_detail.length ==0 ){\r\n                        alert(\"Hãy điền đủ thông tin!\")\r\n                        return false;\r\n                    }\r\n                    if(isNaN(parseInt(newPrice)) ){\r\n                        alert(\"Giá trị không hợp lệ\");\r\n                        return false;\r\n                    }\r\n                    newSizes.forEach(a => {\r\n                        if(isNaN(parseInt(a.type_price)) || parseInt(a.type_price) < 0 || a.type_detail.length == 0){\r\n                            alert(\"Giá trị không hợp lệ !\");\r\n                            return false;\r\n                        }\r\n                    });\r\n                    newToppings.forEach(a => {\r\n                        if(isNaN(parseInt(a.topping_price)) || parseInt(a.topping_price) <= 0 || a.topping_name.length == 0){\r\n                            alert(\"Giá trị không hợp lệ!\");\r\n                            return false;\r\n                        }\r\n                    });\r\n            }\r\n            else{\r\n                if(newName.length == 0 || newDescription.length ==0 || newImage.length == 0 || newPrice.length == 0){\r\n                        alert(\"Chưa điền đủ thông tin !\")\r\n                        return false;\r\n                    }\r\n                    if(isNaN(parseInt(newPrice)) ){\r\n                        alert(\"Giá trị không hợp lệ!\");\r\n                        return false;\r\n                    }\r\n            }\r\n            return true;\r\n        }\r\n    //handle the dynamic Sizes in Modal\r\n    const handleSizeChange = (index, e) => {\r\n        const Sizes = [...newSizes];\r\n        Sizes[index][e.target.name] = e.target.value ;\r\n        setNewSizes(Sizes);\r\n    }\r\n\r\n    const handleAddSize = () => {\r\n        setNewSizes([...newSizes, {type_detail: '', type_price: ''}]);\r\n    }\r\n\r\n    const handleRemoveSize = (index, e) => {\r\n        const Sizes = [...newSizes];\r\n        Sizes.splice(index,1);\r\n        setNewSizes(Sizes);\r\n    }\r\n\r\n    const handleToppingChange = (index, e) => {\r\n        const Toppings = [...newToppings];\r\n        Toppings[index][e.target.name] = e.target.value ;\r\n        setNewToppings(Toppings);\r\n    }\r\n\r\n    const handleAddTopping = () => {\r\n        setNewToppings([...newToppings, {topping_name: '', topping_price: ''}]);\r\n    }\r\n\r\n    const handleRemoveTopping = (index, e) => {\r\n        const Toppings = [...newToppings];\r\n        Toppings.splice(index,1);\r\n        setNewToppings(Toppings);\r\n    }\r\n    \r\n\r\n    const handleAddPizza = async () => {\r\n        const newItem = {\r\n            comment: [],\r\n            description: newDescription,\r\n            image_url: newImage,\r\n            order_number: 0,\r\n            price: parseInt(newPrice), \r\n            rating: 0,\r\n            title: newName,\r\n        };\r\n        if(category == 'pizza'){\r\n            newItem['size'] = [];\r\n            newSizes.forEach(a => newItem['size'].push({\"type_detail\":a.type_detail, \"type_price\": parseInt(a.type_price)}));\r\n            newItem['topping'] = [];\r\n            newToppings.forEach(a => newItem['topping'].push({ \"topping_name\":a.topping_name, \"topping_price\": parseInt(a.topping_price)}));\r\n            newItem['type'] = [\"Đế giòn\",\"Đế mềm xốp truyền thống\"];\r\n        }\r\n        try {\r\n            const resp = await axios.post(url, newItem);\r\n            if (resp.status === 200){\r\n                dispatch(categories[category].add({id: resp.data.name, itm: newItem}));\r\n\r\n\r\n                setMess('Đã thêm thành công');\r\n                setPosted(true);\r\n                // setInterval(window.location.reload(), 1000);\r\n            }\r\n            closeCmt()\r\n        } catch (err) {\r\n            // Handle Error Here\r\n            console.error(err);\r\n            setMess('Có sự cố xảy ra');\r\n            setPosted(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    for(let i = 1;i <= totalPage;i++)pageList.push(i);\r\n    return(\r\n        <Box sx={{p: 5, marginBottom: '100px', width: '100%'}}>\r\n        <Box sx={{display: 'flex', justifyContent: 'space-between', padding: '0 50px 30px 50px'}}\r\n        >\r\n        <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                    }}\r\n                    >{categories[category].menuName}\r\n        </Typography>\r\n        <Button variant=\"contained\" \r\n                    onClick ={() => setAddPizza(true)}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2,\r\n                        marginRight: 2\r\n                    }}\r\n                    >\r\n                        {'Thêm ' + categories[category].menuName.slice(0, categories[category].menuName.length )}\r\n        </Button>\r\n        <Modal open={addPizza} onClose = {() => {setAddPizza(false)}}>\r\n            <Fade in={addPizza} timeout={500}>\r\n            <Stack\r\n            spacing = {2}\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 3,\r\n                boxShadow: 24,\r\n                width: {md: '50%', sm: '80%', xs: '90%'}\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >{categories[category].menuName.slice(0, categories[category].menuName.length )}\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={2}>\r\n                <TextField onChange={(e) => {setNewName(e.target.value)}}\r\n                required\r\n                variant=\"standard\"\r\n                id=\"name-field\"\r\n                label=\"Tên\"\r\n                multiline\r\n                maxRows={1}\r\n                color='warning'\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '60%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setNewPrice((e.target.value))}}\r\n                    required \r\n                    variant=\"standard\"\r\n                    id=\"price-field\"\r\n                    label=\"Giá\"\r\n                    multiline\r\n                    maxRows={1}\r\n                    color='warning'\r\n                    InputProps={{style: {fontFamily: 'be Vietnam'}, endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,}} // font size of input text\r\n                    InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                    sx={{\r\n                        width: '40%'\r\n                    }}\r\n                />\r\n                </Stack>\r\n\r\n                {category ==='pizza' &&\r\n                    <Box \r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        maxHeight:'162px',\r\n                        overflow: 'auto',\r\n                    }}\r\n                    >\r\n                    {newSizes.map((newSize, index) => (\r\n                        <Stack key={index} direction='row' spacing={2} sx={{marginTop:'6px'}}\r\n                        >\r\n                            <TextField onChange={(e) => {handleSizeChange(index, e)}}\r\n                            required value={newSize.type_detail}\r\n                            variant=\"standard\"\r\n                            name=\"type_detail\"\r\n                            label=\"Cỡ\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <TextField onChange={(e) => {handleSizeChange(index, e)}}\r\n                            required value={newSize.type_price}\r\n                            variant=\"standard\"\r\n                            name=\"type_price\"\r\n                            label=\"Giá cỡ\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'}, endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <IconButton disabled={newSizes.length === 1} onClick={(e) => handleRemoveSize(index, e)}>\r\n                                <RemoveCircleOutlineIcon \r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></RemoveCircleOutlineIcon>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => handleAddSize()}>\r\n                                <AddCircleOutlineIcon\r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></AddCircleOutlineIcon>\r\n                            </IconButton>\r\n                        </Stack>\r\n                    ))}\r\n                    </Box>\r\n                }\r\n\r\n                <TextField onChange={(e) => {setNewDescription(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={4}\r\n                id=\"description-field\" label=\"Mô tả\"\r\n                inputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                <TextField onChange={(e) => {setNewImage(e.target.value)}}\r\n                required variant=\"standard\" multiline color='warning' maxRows={1}\r\n                id=\"image-field\" label=\"URL Ảnh\"\r\n                inputProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input text\r\n                InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                sx={{\r\n                    width: '100%'\r\n                }}\r\n                />\r\n                \r\n                { category ==='pizza' &&\r\n                    <Box \r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        maxHeight:'162px',\r\n                        overflow: 'auto',\r\n                    }}\r\n                    >\r\n                    {newToppings.map((newTopping, index) => (\r\n                        <Stack key={index} direction='row' spacing={2} sx={{marginTop:'6px'}}\r\n                        >\r\n                            <TextField onChange={(e) => {handleToppingChange(index, e)}}\r\n                            required value={newTopping.topping_name}\r\n                            variant=\"standard\"\r\n                            name=\"topping_name\"\r\n                            label=\"Tên Topping\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'},}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <TextField onChange={(e) => {handleToppingChange(index, e)}}\r\n                            required value={newTopping.topping_price}\r\n                            variant=\"standard\"\r\n                            name=\"topping_price\"\r\n                            label=\"Giá Topping\"\r\n                            multiline\r\n                            maxRows={1}\r\n                            color='warning'\r\n                            InputProps={{style: {fontFamily: 'be Vietnam'}, endAdornment: <InputAdornment position=\"end\">VND</InputAdornment>,}} // font size of input text\r\n                            InputLabelProps={{style: {fontFamily: 'be Vietnam'}}} // font size of input label\r\n                            sx={{\r\n                                width: '40%'\r\n                            }}\r\n                            />\r\n                            <IconButton disabled={newToppings.length === 1} onClick={(e) => handleRemoveTopping(index, e)}>\r\n                                <RemoveCircleOutlineIcon \r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></RemoveCircleOutlineIcon>\r\n                            </IconButton>\r\n                            <IconButton onClick={() => handleAddTopping()}>\r\n                                <AddCircleOutlineIcon\r\n                                sx={{\r\n                                    color:  '#EA6A12',\r\n                                    '&:hover, &:active':{\r\n                                    color: '#07143B'\r\n                                    },\r\n                                }}\r\n                                ></AddCircleOutlineIcon>\r\n                            </IconButton>\r\n                        </Stack>\r\n                    ))}\r\n                    </Box>\r\n                }\r\n\r\n                <Button variant=\"contained\" \r\n                    onClick={()=>{\r\n                        if(checkItem()){\r\n                            setAddPizza(false);\r\n                            handleAddPizza();\r\n                        }                  \r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        alignSelf: 'center',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                    Thêm món\r\n                </Button>\r\n               \r\n            </Stack>\r\n            </Fade>\r\n        </Modal>\r\n        <Snackbar\r\n        open={posted}\r\n        onClose={() => {setPosted(false)}}\r\n        message={message}\r\n        autoHideDuration={6000}\r\n        />\r\n        </Box>\r\n        \r\n        {\r\n            pageList.map(p => {return(\r\n            <Grow in={page===p} mountOnEnter unmountOnExit timeout={page===p ? 1000: 0}>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            {\r\n                ids\r\n                .map((id, index) =>{\r\n                    return (index >= (page - 1)*max && index < page * max) ?\r\n                        <Box sx={{marginLeft: '40px'}}>\r\n                            <PizzaManageCard item = {products[id]} category ={category}\r\n                            id = {id} \r\n                            cardUrl = {'https://pizzahust-d7124-default-rtdb.asia-southeast1.firebasedatabase.app/menu/menu_' \r\n                            + categories[category].dbPath + '/' + id + '.json'}\r\n                            />\r\n                            \r\n                        </Box>\r\n                    : false\r\n                })\r\n            }\r\n            </Box>\r\n                </Grow>   \r\n            )})\r\n        }\r\n        <Box sx={{marginTop: '100px', alignItems: 'center', width: '100%', marginLeft: '40%'}}>\r\n        <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}\r\n        />\r\n        </Box>\r\n        </Box>\r\n    )\r\n}","import React from \"react\";\r\nimport {Box, Typography, Tab } from '@mui/material';\r\nimport {TabContext, TabList, TabPanel} from '@mui/lab';\r\nimport { ComboManage, PizzaManage } from \"../components/manageCategory\";\r\nimport { styled } from \"@mui/system\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { Home } from \"./Home\";\r\nexport const MyTab = styled(Tab)({\r\n    fontFamily: 'be Vietnam',\r\n    fontWeight: '600',\r\n    fontSize: '20px',\r\n    borderBottom: '1px solid #e8e8e8',\r\n    '& .MuiTabs-indicator': {\r\n    backgroundColor: '#1890ff',\r\n    },\r\n    textTransform: 'none',\r\n    color: '#EA6A12',\r\n    '&.Mui-selected': {\r\n      color: '#07143B',\r\n    },\r\n\r\n})\r\n\r\n\r\nexport const ManagePage = ()=>{\r\n    const {currentUser} = useAuth();\r\n    const [value, setValue] = React.useState('1');\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return( currentUser?\r\n            <Box style={{\r\n                width: '100%',\r\n                }}>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >Quản lý món\r\n                </Typography>\r\n                <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider', marginLeft:3 }}>\r\n                    <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n                        <MyTab label=\"Pizza\" value=\"1\" />\r\n                        <MyTab label=\"Tráng miệng\" value=\"2\" />\r\n                        <MyTab label=\"Khai vị\" value=\"3\" />\r\n                        <MyTab label=\"Món chay\" value=\"4\" />\r\n                        <MyTab label=\"Đồ cho bé\" value=\"5\" />\r\n                        <MyTab label=\"Đồ uống\" value=\"6\" />\r\n                        <MyTab label=\"Combo\" value=\"7\" />\r\n\r\n                    </TabList>\r\n                    </Box>\r\n                    <TabPanel value=\"1\">\r\n                        <PizzaManage category= {'pizza'} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\">\r\n                        <PizzaManage category= {'dessert'} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"3\">\r\n                        <PizzaManage category= {'appetizer'} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"4\">\r\n                        <PizzaManage category= {'vegetable'} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"5\">\r\n                        <PizzaManage category= {'kid'} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"6\">\r\n                        <PizzaManage category= {'drink'} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"7\">\r\n                        <ComboManage />\r\n                    </TabPanel>\r\n                </TabContext>\r\n                </Box>\r\n            </Box> : <Home/> \r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Box, Card, CardContent, CardMedia, Divider, IconButton, Stack, Typography, Modal, Checkbox, Button, Fade} from '@mui/material';\r\nimport { useParams } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AddCircleRounded, InfoRounded, KeyboardArrowLeftRounded, KeyboardArrowRightRounded, SwapHorizontalCircleRounded } from '@mui/icons-material';\r\nimport { CustomPagination } from './pizzaMenu';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux'\r\nimport {itemAdded, itemUpdated} from '../store/cartComboSlice'\r\nconst label ={\r\n    'kid':'đồ cho bé',\r\n    'pizza':'pizza',\r\n    'appetizer':'khai vị',\r\n    'vegetable':'đồ chay',\r\n    'drink':'đồ uống',\r\n    'dessert':'tráng miệng'\r\n}\r\nconst timeToDate = (time) =>{\r\n    let date = new Date(time * 1000)\r\n    let year = date.getFullYear()\r\n    let month = date.getMonth() + 1\r\n    let day = date.getDate()\r\n    return year + '/' + month + '/' + day;   \r\n}\r\nexport const ChooseCard = (props)=>{\r\n    const navigate = useNavigate();\r\n    const category = props.category;\r\n    const slotId = props.slotId;\r\n    const handleAdd = props.handleAdd;\r\n    const handleClose = props.handleClose;\r\n    const productId = props.productId;\r\n    const image = props.image;\r\n    let name = props.name;\r\n    if(name.length > 20){\r\n        name = name.substring(0, 15);\r\n        name += '...';\r\n    }\r\n    const price = props.price;\r\n    const [hov, setHov] = useState(false);\r\n    const switchHov = ()=>{\r\n        setHov(prev => !prev);\r\n    }\r\n    return (\r\n        <Box\r\n        sx={{\r\n            marginTop: '100px',\r\n            alignSelf: 'flex-end'\r\n        }}\r\n        >\r\n        <Box\r\n        onMouseEnter={switchHov}\r\n        onMouseLeave = {switchHov}\r\n        sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'start',\r\n            backgroundColor: hov ?'rgba(234, 106, 18, 0.7)': 'rgba(255, 255, 255, 0.4)',\r\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\r\n            width: '200px',\r\n            height: '230px',\r\n            borderRadius: '24px',\r\n            p: 3,\r\n            boxSizing: 'border-box',\r\n            marginRight: {md: 0, sm: 2, xs: 2}\r\n        }}\r\n        >\r\n            <img\r\n            src={image}\r\n            alt={name}\r\n            style={{\r\n            borderRadius: '50%',\r\n            boxShadow: '0px 30px 30px rgba(234, 106, 18, 0.05)',\r\n            alignSelf: 'center',\r\n            marginTop: '-1000px',\r\n            transform: 'translateY(-20px)',\r\n            width: '150px', height: '150px',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{name}\r\n            </Typography>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '13px',\r\n                        lineHeight: '175%',\r\n                        color: hov? 'white': '#EA6A12',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >$ {price}\r\n                </Typography>\r\n                <Stack spacing={2} direction=\"row\" sx={{alignSelf:\"flex-end\"}}>\r\n                <IconButton\r\n                size=\"small\"\r\n                sx={{\r\n                width: '24px',\r\n                height: '24px'\r\n                }}\r\n                onClick={() =>{\r\n                    handleAdd(slotId, productId, price)\r\n                    handleClose()\r\n                }}\r\n                >\r\n                \r\n                <AddCircleRounded\r\n                    sx={{\r\n                        color: hov ? 'white':'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n                </IconButton>\r\n                <IconButton\r\n                size=\"small\"\r\n                sx={{\r\n                width: '24px',\r\n                height: '24px'\r\n                }}\r\n                onClick={() =>{\r\n                    navigate('/' + category + '/' + productId)\r\n                }}\r\n                >\r\n                \r\n                <InfoRounded\r\n                    sx={{\r\n                        color: hov ? 'white':'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n                </IconButton>\r\n                </Stack>\r\n                \r\n        </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport const ComboChooseModal = (props) =>{\r\n    const menu = {\r\n        'pizza': useSelector(state => state.pizzas),\r\n        'kid': useSelector(state => state.kids),\r\n        'drink': useSelector(state => state.drinks),\r\n        'appetizer': useSelector(state => state.appetizers),\r\n        'vegetable': useSelector(state => state.vegetables),\r\n        'dessert': useSelector(state => state.desserts),\r\n    }\r\n    const handleAdd = props.handleAdd;\r\n    const handleClose = props.handleClose;\r\n    const category = props.category;\r\n    const slotId = props.slotId;\r\n    const max = 5;\r\n    const ids = menu[category].ids;\r\n    const products = menu[category].entities;\r\n    const totalPage = Math.ceil(ids.length / max);\r\n    const [page, setPage] = useState(1)\r\n    \r\n    return(\r\n        <Modal open= {true} onClose={handleClose}>\r\n            <Box\r\n            sx={{\r\n                borderRadius: '24px',\r\n                backgroundColor: 'white',\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                p: 4,\r\n                boxShadow: 24,\r\n                width: {md: '80%', sm: '80%', xs: '90%'},\r\n            }}\r\n            >\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: '40px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        margin: '20px'\r\n                    }}\r\n                    >Chọn {label[category]} \r\n            </Typography>\r\n            <Box sx={{\r\n                m: 1,\r\n                p: 2,\r\n                backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n                display: 'flex',\r\n                justifyContent: 'space-evenly',\r\n                overflow: 'auto'\r\n            }}>\r\n            {\r\n                ids\r\n                .map((id, index) =>{\r\n                    return (index >= (page - 1)*max && index < page * max) &&\r\n                        \r\n                            <ChooseCard image={products[id].image_url} name={products[id].title} price={products[id].price}\r\n                            handleAdd = {handleAdd} category = {category} slotId = {slotId}\r\n                            productId = {id} handleClose = {handleClose}\r\n                            />\r\n                        \r\n                })\r\n            }\r\n            </Box>\r\n            <Box sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n            <CustomPagination variant=\"outlined\" shape=\"rounded\" count={totalPage}\r\n            onChange={(event, value) => {setPage(value)}} size=\"large\" page={page}\r\n            />\r\n            </Box>\r\n            \r\n            </Box>\r\n        </Modal>\r\n    )\r\n}\r\nexport const AddSlot = (props) =>{\r\n    const slotId = props.slotId;\r\n    const category = props.category;\r\n    const openModal = props.openModal;\r\n    return(\r\n        <Box\r\n        sx={{\r\n            borderRadius: '12px',\r\n            borderColor: '#EA6A12',\r\n            borderStyle: 'dashed',\r\n            borderWidth: '2px',\r\n            width: '100%',\r\n            alignItems: 'center',\r\n            m: 3,\r\n            p: 3,\r\n            backgroundColor: 'rgba(252, 237, 227, 0.3)'\r\n        }}\r\n        >\r\n            <IconButton\r\n                sx={{\r\n                }}\r\n                onClick={() => {openModal(slotId)}}\r\n                >\r\n                <AddCircleRounded\r\n                    sx={{\r\n                        width: '50px',\r\n                        height: '50px',\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n                </IconButton>\r\n            <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '20px',\r\n                        lineHeight: '22.75px',\r\n                        color: 'black',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Chọn {label[category]}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\nexport const AddedExtra = (props) =>{\r\n    const menu = {\r\n        'pizza': useSelector(state => state.pizzas),\r\n        'kid': useSelector(state => state.kids),\r\n        'drink': useSelector(state => state.drinks),\r\n        'appetizer': useSelector(state => state.appetizers),\r\n        'vegetable': useSelector(state => state.vegetables),\r\n        'dessert': useSelector(state => state.desserts),\r\n    }\r\n    const category = props.category;\r\n    const slotId = props.slotId;\r\n    const openModal = props.openModal;\r\n    const productId = props.productId;\r\n    const product = menu[category].entities[productId];\r\n    return (\r\n        <Box\r\n        sx={{\r\n            backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n            borderRadius: '20px',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            p:3,\r\n            m: 3\r\n        }}\r\n        >\r\n            <Box \r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            <Box\r\n            sx={{\r\n                display: {md: 'block', sm: 'none', xs: 'none'}\r\n            }}\r\n            >\r\n            <img\r\n            src={product.image_url}\r\n            alt={product.title}\r\n            style={{\r\n            width: '150px',\r\n            height: '150px',\r\n            borderRadius: '50%',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            </Box>\r\n            <Stack spacing = {2} sx={{\r\n                marginLeft: {md: '50px', sm: 0, xs: 0}\r\n            }}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '35px', sm: '25px', xs: '20px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n            >{product.title}\r\n            </Typography>\r\n            <Divider variant='middle' sx={{width: '50%'}}/>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '20px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n            >{product.price}đ\r\n            </Typography>\r\n            </Stack>\r\n            </Box>\r\n            <IconButton\r\n            onClick={() =>{\r\n                openModal(slotId)\r\n            }}\r\n            >\r\n                <SwapHorizontalCircleRounded\r\n                    sx={{\r\n                        width: '50px',\r\n                        height: '50px',\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\nexport const AddedPizza = (props) =>{\r\n    const slotId = props.slotId;\r\n    const openModal = props.openModal;\r\n    const productId = props.productId;\r\n    const pizzaInfo = props.pizzaInfo;\r\n    const handleChange = props.handleChange;\r\n    const product = useSelector(state => state.pizzas.entities[productId]);\r\n    return (\r\n        <Box\r\n        sx={{\r\n            backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n            borderRadius: '20px',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            p:3,\r\n            m: 3\r\n        }}\r\n        >\r\n            <Box \r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                width: {md: '90%', sm: '95%', xs: '95%'}\r\n            }}\r\n            >\r\n                <Box\r\n            sx={{\r\n                display: {md: 'block', sm: 'none', xs: 'none'}\r\n            }}\r\n            >\r\n            <img\r\n            src={product.image_url}\r\n            alt={product.title}\r\n            style={{\r\n            width: '150px',\r\n            height: '150px',\r\n            borderRadius: '50%',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            </Box>\r\n            <Stack spacing = {2} sx={{\r\n                marginLeft: {md: '50px', sm: 0, xs: 0},\r\n                width: {md: '70%', sm: '100%', xs: '100%'}\r\n            }}>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                width: '100%'\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '35px', sm: '30px', xs: '25px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n                >{product.title}\r\n                </Typography>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: {md: '25px', sm: '20px', xs: '20px'},\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n                >Giá: {pizzaInfo.price}VND\r\n                </Typography>\r\n            </Box>\r\n            \r\n            <Divider variant='middle' sx={{width: '50%'}}/>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                width: {md: '70%', sm: '90%', xs: '90%'},\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            <Stack spacing={1} direction='row'\r\n                sx={{\r\n                    alignItems: 'center'\r\n                }}\r\n                >\r\n                <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: {md: '20px', sm: '15px', xs: '15px'},\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Cỡ: \r\n                </Typography>\r\n                <IconButton \r\n                onClick = {() =>{\r\n                    const currentSize = pizzaInfo.size ? pizzaInfo.size : 0\r\n                    const newSize = currentSize > 0 ? currentSize - 1: 0\r\n                    const currentPrice = pizzaInfo.price;\r\n                    const newPrice = currentPrice - product.size[currentSize].type_price + product.size[newSize].type_price\r\n                    handleChange(slotId, {\r\n                        productId: productId,\r\n                        pizzaInfo:{\r\n                            ...pizzaInfo,\r\n                            size: newSize,\r\n                            price: newPrice\r\n                        }\r\n                    })\r\n                }}\r\n                >\r\n                    <KeyboardArrowLeftRounded/>\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '20px', sm: '15px', xs: '15px'},\r\n                        lineHeight: '175%',\r\n                        color:'#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{product.size[pizzaInfo.size ? pizzaInfo.size: 0].type_detail}\r\n                </Typography>\r\n                <IconButton \r\n                onClick = {() =>{\r\n                    const currentSize = pizzaInfo.size ? pizzaInfo.size : 0\r\n                    const newSize = currentSize < product.size.length - 1 ? currentSize + 1: currentSize\r\n                    const currentPrice = pizzaInfo.price;\r\n                    const newPrice = currentPrice - product.size[currentSize].type_price + product.size[newSize].type_price\r\n                    handleChange(slotId, {\r\n                        productId: productId,\r\n                        pizzaInfo:{\r\n                            ...pizzaInfo,\r\n                            size: newSize,\r\n                            price: newPrice\r\n                        }\r\n                    })\r\n                }}\r\n                >\r\n                    <KeyboardArrowRightRounded/>\r\n                </IconButton>\r\n                </Stack>\r\n                <Stack spacing={1} direction=\"row\"\r\n                \r\n                sx={{\r\n                    alignItems: 'center'\r\n                }}\r\n                \r\n                >\r\n                <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: {md: '20px', sm: '15px', xs: '15px'},\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Đế: \r\n                </Typography>\r\n                <IconButton\r\n                onClick = {() =>{\r\n                    const currentType = pizzaInfo.type ? pizzaInfo.type : 0\r\n                    const newType = 1 - currentType\r\n                    handleChange(slotId, {\r\n                        productId: productId,\r\n                        pizzaInfo:{\r\n                            ...pizzaInfo,\r\n                            type: newType,\r\n                        }\r\n                    })\r\n                }}\r\n                >\r\n                    <KeyboardArrowLeftRounded/>\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: {md: '20px', sm: '15px', xs: '15px'},\r\n                        lineHeight: '175%',\r\n                        color:'#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >{product.type[pizzaInfo.type ? pizzaInfo.type: 0].slice(0, 10)}\r\n                </Typography>\r\n                <IconButton \r\n                onClick = {() =>{\r\n                    const currentType = pizzaInfo.type ? pizzaInfo.type : 0\r\n                    const newType = 1 - currentType\r\n                    handleChange(slotId, {\r\n                        productId: productId,\r\n                        pizzaInfo:{\r\n                            ...pizzaInfo,\r\n                            type: newType,\r\n                        }\r\n                    })\r\n                }}\r\n                >\r\n                    <KeyboardArrowRightRounded/>\r\n                </IconButton>\r\n                </Stack>\r\n            </Box>\r\n\r\n            <Typography variant=\"body1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: {md: '20px', sm: '15px', xs: '15px'},\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start'\r\n                    }}\r\n                    >Toppings: \r\n            </Typography>\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                width: '100%'\r\n            }}\r\n            >\r\n                {\r\n                    product.topping.map((top, index) =>\r\n                        <Stack direction='row' spacing={3} sx={{width: {md: '70%', sm: '100%', xs: '100%'}, alignItems: 'center'}}>\r\n                            <Checkbox \r\n                                sx={{\r\n                                    '&.Mui-checked': {\r\n                                    color: '#EA6A12',\r\n                                    },\r\n                                }}\r\n                                checked = {pizzaInfo.topping ? pizzaInfo.topping[index] : false}\r\n                                onChange={() =>{\r\n                                    const currentTopping = pizzaInfo.topping ? pizzaInfo.topping : {}\r\n                                    const newTopping = {\r\n                                        ...currentTopping\r\n                                    }\r\n                                    newTopping[index] = currentTopping[index] === true? false : true\r\n                                    const currentPrice = pizzaInfo.price;\r\n                                    const newPrice = newTopping[index] ? currentPrice + top.topping_price : currentPrice - top.topping_price\r\n                                    handleChange(slotId, {\r\n                                        productId: productId,\r\n                                        pizzaInfo:{\r\n                                            ...pizzaInfo,\r\n                                            topping: newTopping,\r\n                                            price: newPrice\r\n                                        }\r\n                                    })\r\n                                }}\r\n                            />\r\n                            <Typography variant=\"body1\"\r\n                            sx={{\r\n                            fontFamily: 'be Vietnam',\r\n                            fontWeight: 700,\r\n                            fontSize: '15px',\r\n                            lineHeight: '22.75px',\r\n                            color: '#07143B',\r\n                            textAlign: 'start'\r\n                            }}\r\n                            >{top.topping_name} - {top.topping_price}đ\r\n                            </Typography>\r\n                        </Stack>    \r\n                    )\r\n                }\r\n            </Box>\r\n            </Stack>\r\n            </Box>\r\n            <IconButton\r\n            onClick={() =>{\r\n                openModal(slotId)\r\n            }}\r\n            >\r\n                <SwapHorizontalCircleRounded\r\n                    sx={{\r\n                        width: '50px',\r\n                        height: '50px',\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                    }}\r\n                />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\nexport const CustomProduct = (props) =>{\r\n    const number = props.number;\r\n    const category = props.category;\r\n    const slot = props.slot;\r\n    const handleAdd = props.handleAdd;\r\n    const offset = props.offset ? props.offset : 0;\r\n    const [open, setOpen] = useState(false);\r\n    const [openSlot, setOpenSlot] = useState(-1);\r\n    const openModal = (id) =>{\r\n        setOpen(true)\r\n        setOpenSlot(id)\r\n    }\r\n    const range = [];\r\n    for(let i=offset;i<offset + number;i++)range.push(i);\r\n    return (\r\n        <Box\r\n        sx={{\r\n            width: '100%'\r\n        }}\r\n        >\r\n            <Divider variant='middle'/>\r\n            <Typography\r\n                    style={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 1000,\r\n                        fontSize: '30px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginTop: '50px',\r\n                        marginLeft: '20px'\r\n                    }}\r\n                    >{label[category]} x{number}\r\n            </Typography>\r\n            <Box sx={{alignItems: 'center', display: 'flex', flexWrap: 'wrap'}}>\r\n                {\r\n                    range.map(i => slot[i] ? category !== 'pizza'?\r\n                    <AddedExtra category={category} slotId = {i} productId={slot[i].productId} openModal = {openModal}/> \r\n                    : <AddedPizza slotId = {i} productId={slot[i].productId} openModal = {openModal}\r\n                    handleChange = {props.handleChange} pizzaInfo = {slot[i].pizzaInfo}\r\n                    /> \r\n                    :<AddSlot \r\n                    category={category} slotId = {i} \r\n                    openModal={openModal}/>)\r\n                }\r\n            </Box>\r\n            {\r\n                open && <ComboChooseModal\r\n                category = {category}\r\n                slotId = {openSlot}\r\n                handleClose = {() =>{setOpen(false)}}\r\n                handleAdd = {handleAdd}\r\n                />\r\n            }\r\n        </Box>\r\n    )\r\n}\r\nconst round = (num)=> Math.round(num * 100) / 100;\r\nexport const SingleCombo = () =>{\r\n    \r\n    const location = useLocation();\r\n    const cartId = location.state ? location.state.cartId: -1;\r\n    const cartInfo = location.state ? location.state.cartInfo: {};\r\n    const {comboId} = useParams();\r\n    const combo = useSelector(state => state.combos.entities[comboId]);\r\n    const [kidSlot, setKidSlot] = useState(cartId >= 0 ? cartInfo.kidSlot: {})\r\n    const [drinkSlot, setDrinkSlot] = useState(cartId >= 0 ? cartInfo.drinkSlot: {})\r\n    const [vegetableSlot, setVegetableSlot] = useState(cartId >= 0 ? cartInfo.vegetableSlot: {})\r\n    const [appetizerSlot, setAppetizerSlot] = useState(cartId >= 0 ? cartInfo.appetizerSlot: {})\r\n    const [dessertSlot, setDessertSlot] = useState(cartId >= 0 ? cartInfo.dessertSlot: {})\r\n    const [pizzaSlot, setPizzaSlot] = useState(cartId >= 0 ? cartInfo.pizzaSlot: {})\r\n    const extras = [\r\n        {category: 'kid', number: combo.kid, slot: kidSlot, setSlot: setKidSlot},\r\n        {category: 'drink', number: combo.drink, slot: drinkSlot, setSlot: setDrinkSlot},\r\n        {category: 'vegetable', number: combo.vegetable, slot: vegetableSlot, setSlot: setVegetableSlot},\r\n        {category: 'appetizer', number: combo.appetizer, slot: appetizerSlot, setSlot: setAppetizerSlot},\r\n        {category: 'dessert', number: combo.dessert, slot: dessertSlot, setSlot: setDessertSlot},\r\n    ]\r\n    let proNum = combo.pizza;\r\n    extras.map(extra => proNum += extra.number ? extra.number : 0)\r\n    if(combo.free){\r\n        extras[0].freeNumber = combo.free.kid ? combo.free.kid: 0;\r\n        extras[1].freeNumber = combo.free.drink ? combo.free.drink: 0;\r\n        extras[2].freeNumber = combo.free.vegetable ? combo.free.vegetable: 0;\r\n        extras[3].freeNumber = combo.free.appetizer ? combo.free.appetizer: 0;\r\n        extras[4].freeNumber = combo.free.dessert ? combo.free.dessert: 0;\r\n        proNum += combo.free.pizza ? combo.free.pizza : 0;\r\n        extras.map(extra => proNum += extra.freeNumber)\r\n    }\r\n    \r\n    const initTotal = cartId >= 0 ? round((cartInfo.total * 100 / (100 - combo.off)) / cartInfo.number) : 0\r\n    const [total, setTotal] = useState(initTotal);\r\n    const [num, setNum] = useState(cartId >= 0 ? cartInfo.number :1);\r\n    const [filled, setFilled] = useState(cartId >= 0 ? proNum: 0);\r\n    const [done, setDone] = useState(false);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    console.log(Date.now()/ 1000)\r\n    console.log(combo.end)\r\n    const valid = Date.now() / 1000 >= combo.start && Date.now() / 1000 <= combo.end\r\n    return valid? (\r\n        <Box sx ={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            marginTop: '50px',\r\n            marginBottom: '100px'\r\n        }}>\r\n            <Card sx = {{\r\n                width: {md: '85%', sm: '95%', xs: '95%'}\r\n            }}>\r\n                <CardMedia \r\n                component= \"img\"\r\n                height = '400px'\r\n                image = {combo.banner}\r\n                alt = {combo.title}\r\n                />\r\n                <CardContent>\r\n                <Box\r\n        sx={{\r\n            backgroundColor:'rgba(252, 237, 227, 0.3)',\r\n            display: 'flex',\r\n            borderRadius: '24px',\r\n            justifyContent: {md: 'flex-start', sm:'center', xs: 'center'},\r\n            alignItems: 'center',\r\n            p: {md: 5, sm: 2, xs: 1},\r\n            m: {md: 5, sm: 2, xs: 1},\r\n            flexWrap: {xs: 'wrap',sm: 'wrap', md: 'nowrap'}\r\n        }}\r\n        >\r\n            <img\r\n            src={combo.image}\r\n            alt={combo.title}\r\n            style={{\r\n            width: '200px',\r\n            height: '200px',\r\n            borderRadius: '50%',\r\n            objectFit: 'cover'\r\n            }}\r\n            />\r\n            <Box sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                width: '100%',\r\n                marginLeft: {md: '10%', sm: 0, xs: 0},\r\n            }}>\r\n            <Stack spacing={2}\r\n            sx={{\r\n                width: '100%',\r\n                marginTop: {md: 0, sm: '50px', xs: '50px'}\r\n            }}>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '35px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        \r\n                    }}\r\n                    >{combo.title}\r\n                </Typography>\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '15px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'start',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{combo.subtitle}\r\n                </Typography>\r\n                <Divider sx = {{maxWidth: '50%'}}/>\r\n                <Stack spacing={1}>\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 1000,\r\n                        fontSize: '15px',\r\n                        lineHeight: '22px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{timeToDate(combo.start)} - {timeToDate(combo.end)}\r\n                </Typography>\r\n                {\r\n                    combo.off > 0 &&\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 1000,\r\n                        fontSize: '15px',\r\n                        lineHeight: '22px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden',\r\n                        display: {md: 'none', sm: 'block', xs: 'block'}\r\n                    }}\r\n                    >{combo.off}% Off\r\n                </Typography>\r\n                }\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '15px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'start',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{combo.description}\r\n                </Typography>\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 400,\r\n                        fontSize: '15px',\r\n                        lineHeight: '22.75px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'start',\r\n                        maxWidth: '80%',\r\n                        maxHeight: '65px',\r\n                        overflow: 'hidden'\r\n                    }}\r\n                    >{combo.persons} người\r\n                </Typography>\r\n                </Stack>\r\n            </Stack>\r\n\r\n            <Box\r\n            sx={{\r\n                borderRadius: '50%',\r\n                boxSizing: 'border-box',\r\n                width: '150px', height: '110px',\r\n                backgroundColor: 'rgba(252, 237, 227)',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                display: {md: 'flex', sm: 'none', xs: 'none'}\r\n                //boxShadow: '1px 1px 5px black'\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 1000,\r\n                        fontSize: '35px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        textOverflow: 'ellipsis'\r\n                    }}\r\n                    >{combo.off > 0 ? `-${combo.off}%`: \"Bonus\"}\r\n                </Typography>\r\n            </Box>\r\n            </Box>\r\n                </Box>\r\n                {\r\n                    (combo.pizza && combo.pizza > 0) && \r\n                    <CustomProduct \r\n                    category=\"pizza\" number={combo.pizza}\r\n                    slot = {pizzaSlot}\r\n                    handleAdd = {(slotId, productId, price) =>{\r\n                        setPizzaSlot(prev =>{\r\n                            let New = {...prev}\r\n                            if(!prev[slotId]) setFilled(prev => prev + 1)\r\n                            const currentPrice = prev[slotId] && prev[slotId].pizzaInfo && prev[slotId].pizzaInfo.price? \r\n                            prev[slotId].pizzaInfo.price : 0;\r\n                            setTotal(prev => prev - currentPrice + price)\r\n                            delete New[slotId]\r\n                            New[slotId] = {productId: productId, pizzaInfo: {\r\n                                price: price, \r\n                                size: 0,\r\n                                type: 0,\r\n                                topping: {}\r\n                            }}\r\n                            return New\r\n                        })\r\n                    }}\r\n                    handleChange = {(slotId, newPizza) =>{\r\n                        setPizzaSlot(prev =>{\r\n                            let New = {...prev}\r\n                            const currentPrice = prev[slotId] && prev[slotId].pizzaInfo && prev[slotId].pizzaInfo.price? \r\n                            prev[slotId].pizzaInfo.price : 0;\r\n                            setTotal(prev => prev - currentPrice + newPizza.pizzaInfo.price)\r\n                            New[slotId] = newPizza\r\n                            return New\r\n                        })\r\n                    }}\r\n                    />\r\n                }\r\n                {\r\n                    extras.map(extra =>{\r\n                        return extra.number && extra.number > 0 && \r\n                        <CustomProduct\r\n                        number = {extra.number} category = {extra.category} slot = {extra.slot}\r\n                        handleAdd = {(slotId, productId, price) =>{\r\n                            extra.setSlot(prev =>{\r\n                                let New = {...prev}\r\n                                if(!prev[slotId]) setFilled(prev => prev + 1)\r\n                                const currentPrice = prev[slotId] && prev[slotId].price? \r\n                                prev[slotId].price : 0;\r\n                                setTotal(prev => prev - currentPrice + price)\r\n                                New[slotId] = {productId: productId, price: price}\r\n                                return New\r\n                            })\r\n                        }}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    combo.free &&\r\n                    <Box sx={{\r\n                        width: '100%'\r\n                    }}>\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: '35px',\r\n                        lineHeight: '175%',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px',\r\n                        m: 3\r\n                    }}\r\n                    >Bonus (100% miễn phí)\r\n                    </Typography>\r\n                    {\r\n                        combo.free.pizza && combo.free.pizza > 0 && \r\n                        <CustomProduct \r\n                        category=\"pizza\" number={combo.free.pizza}\r\n                        slot = {pizzaSlot}\r\n                        offset = {combo.pizza}\r\n                        handleAdd = {(slotId, productId, price) =>{\r\n                            setPizzaSlot(prev =>{\r\n                                let New = {...prev}\r\n                                if(!prev[slotId]) setFilled(prev => prev + 1)\r\n                                delete New[slotId]\r\n                                New[slotId] = {productId: productId, pizzaInfo: {\r\n                                    price: 0, \r\n                                    size: 0,\r\n                                    type: 0,\r\n                                    topping: {}\r\n                                }}\r\n                                return New\r\n                            })\r\n                        }}\r\n                        handleChange = {(slotId, newPizza) =>{\r\n                            setPizzaSlot(prev =>{\r\n                                let New = {...prev}\r\n                                New[slotId] = newPizza\r\n                                return New\r\n                            })\r\n                        }}\r\n                        />\r\n                    }\r\n                    {\r\n                    extras.map(extra =>{\r\n                        return extra.freeNumber && extra.freeNumber > 0 && \r\n                        <CustomProduct\r\n                        number = {extra.freeNumber} category = {extra.category} slot = {extra.slot}\r\n                        offset = {extra.number}\r\n                        handleAdd = {(slotId, productId, price) =>{\r\n                            extra.setSlot(prev =>{\r\n                                let New = {...prev}\r\n                                if(!prev[slotId]) setFilled(prev => prev + 1)\r\n                                New[slotId] = {productId: productId, price: 0}\r\n                                return New\r\n                            })\r\n                        }}\r\n                        />\r\n                    })\r\n                    }\r\n                    </Box>\r\n                }\r\n                <Divider variant='middle'/>\r\n                <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    width: '100%',\r\n                    p: 5,\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                    flexWrap: 'wrap'\r\n                }}\r\n                > \r\n                <Stack direction= \"row\"\r\n                spacing={5}\r\n                sx={{\r\n                alignItems: 'center',\r\n                }}\r\n                >\r\n                    <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: '35px',\r\n                        lineHeight: '175%',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >Số lượng: \r\n                </Typography>\r\n                <IconButton\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                onClick = {()=>{setNum(prev => (prev === 1)? 1: prev - 1)}}\r\n                >\r\n                    <KeyboardArrowLeftRounded\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n                <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 600,\r\n                        fontSize: '16px',\r\n                        lineHeight: '175%',\r\n                        color: 'black',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px'\r\n                    }}\r\n                    >{num}\r\n                </Typography>\r\n                <IconButton\r\n                onClick = {()=>{setNum(prev => (prev === 10)? 10: prev + 1)}}\r\n                sx={{\r\n                    width: '40px',\r\n                    height: '40px',\r\n                    '&:hover, &:active':{\r\n                        color: 'white'\r\n                    }\r\n                }}\r\n                >\r\n                    <KeyboardArrowRightRounded\r\n                    sx={{\r\n                        color: 'rgba(234, 106, 18, 0.7)',\r\n                        width: '40px',\r\n                        height: '40px'\r\n                    }}\r\n                    />\r\n                </IconButton>\r\n                </Stack>  \r\n                <Stack spacing={1} direction='row'>\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 1000,\r\n                        fontSize: '35px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                        textOverflow: 'ellipsis'\r\n                    }}\r\n                    >Tổng tiền: {round(total* num *(100 - combo.off) / 100)} VND\r\n                    </Typography>\r\n                    {\r\n                    combo.off > 0 &&\r\n                    <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 500,\r\n                        fontSize: '25px',\r\n                        lineHeight: '52px',\r\n                        color: '#EA6A12',\r\n                        textAlign: 'center',\r\n                        textOverflow: 'ellipsis',\r\n                        textDecoration: 'line-through'\r\n                    }}\r\n                    >({round(total * num)} vnd)\r\n                    </Typography>\r\n                    }\r\n                </Stack>\r\n                </Box>\r\n                <Button variant=\"contained\" \r\n                    disabled={filled < proNum}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginTop: 3\r\n                    }}\r\n                    onClick = {() =>{\r\n                        if(cartId >= 0){\r\n                            dispatch(itemUpdated({\r\n                                id: cartId,\r\n                                data:{\r\n                                    comboId: comboId,\r\n                                    pizzaSlot: pizzaSlot,\r\n                                    kidSlot: kidSlot,\r\n                                    vegetableSlot: vegetableSlot,\r\n                                    appetizerSlot: appetizerSlot,\r\n                                    dessertSlot: dessertSlot,\r\n                                    drinkSlot: drinkSlot,\r\n                                    number: num,\r\n                                    total: round(total* num *(100 - combo.off) / 100)\r\n                                }\r\n                            }))\r\n                        }\r\n                        else dispatch(itemAdded({\r\n                            comboId: comboId,\r\n                            pizzaSlot: pizzaSlot,\r\n                            kidSlot: kidSlot,\r\n                            vegetableSlot: vegetableSlot,\r\n                            appetizerSlot: appetizerSlot,\r\n                            dessertSlot: dessertSlot,\r\n                            drinkSlot: drinkSlot,\r\n                            number: num,\r\n                            total: round(total* num *(100 - combo.off) / 100)\r\n                        }))\r\n                        setDone(true)\r\n                    }}\r\n                    >\r\n                        {cartId >= 0 ? \"Cập nhập giỏ hàng\" : \"Thêm vào giỏ hàng\"}\r\n                </Button>\r\n                <Modal open={done} >\r\n            <Fade in={done} timeout={500}>\r\n            <Stack\r\n            spacing={3}\r\n            sx={{\r\n                backgroundColor: 'white',\r\n                borderRadius: '24px',\r\n                width: '500px',\r\n                p: 5,\r\n                position: 'absolute',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                alignItems: 'center'\r\n            }}\r\n            >\r\n                <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'Playfair Display',\r\n                        fontWeight: 700,\r\n                        fontSize: '20px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'center',\r\n                    }}\r\n                    >Đã cập nhập giỏ hàng của bạn\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={5}>\r\n                <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        setDone(false);\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        height: '45px',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Xong\r\n                </Button>\r\n                <Button variant=\"contained\" \r\n                    onClick = {()=>{\r\n                        navigate('/cart');\r\n                    }}\r\n                    sx={{\r\n                        backgroundColor: '#EA6A12',\r\n                        borderRadius: '100px',\r\n                        //maxWidth: '150px',\r\n                        height: '45px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 'normal',\r\n                        fontSize: '15px',\r\n                        lineHeight: '175%',\r\n                        color: 'white',\r\n                        '&:hover, &:active':{\r\n                            backgroundColor: '#f57c00'\r\n                        },\r\n                        marginBottom: 2\r\n                    }}\r\n                    >\r\n                        Xem giỏ hàng\r\n                </Button>\r\n                </Stack>\r\n                \r\n                </Stack>\r\n                </Fade>\r\n                </Modal>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    ):(\r\n        <Typography variant=\"subtitle1\"\r\n                    sx={{\r\n                        fontFamily: 'Fairplay Display',\r\n                        fontWeight: 600,\r\n                        fontSize: '35px',\r\n                        lineHeight: '175%',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginBottom: '10px',\r\n                        m: 3\r\n                    }}\r\n                    >Combo này đã hết hạn hoặc có lỗi xảy ra\r\n                    </Typography>\r\n    )\r\n}","import React from \"react\";\r\nimport {Box, CircularProgress, Typography} from '@mui/material';\r\nimport {SingleCombo} from \"../components/singleCombo\"\r\nimport { useSelector } from \"react-redux\";\r\nexport const SingleComboPage = ()=>{\r\n    const fetchingStatus = useSelector(state => state.combos.fetchingStatus)\r\n    return(\r\n        <Box style={{\r\n            width: '100%',\r\n        }}>\r\n        {\r\n        fetchingStatus === 'SUCCESS'?\r\n            <SingleCombo/>:\r\n        fetchingStatus === 'LOADING' || fetchingStatus === 'INITIAL'?\r\n        <Box sx= {{width: '100%', alignItems: 'center'}}>\r\n            <Typography variant=\"h6\"\r\n                    sx={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '30px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        m: 3\r\n                    }}\r\n                    >hãy chờ một chút\r\n            </Typography>\r\n            <CircularProgress/>\r\n        </Box>\r\n        :<Box sx= {{width: '100%', alignItems: 'center'}}>\r\n        <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '30px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    m: 3\r\n                }}\r\n                >Có lỗi xảy ra\r\n        </Typography>\r\n        </Box>\r\n        }\r\n        </Box>\r\n    )\r\n}","import { Box, Card, Divider, Step, StepLabel, Stepper, Typography } from '@mui/material'\r\nimport React from 'react'\r\nexport const Bill = (props) =>{\r\n    const label ={\r\n        'kid':'Đồ cho bé',\r\n        'pizza':'Pizza',\r\n        'appetizer':'Khai vị',\r\n        'vegetable':'Đồ chay',\r\n        'drink':'Đồ uống',\r\n        'dessert':'Tráng miệng'\r\n    }\r\n    const order = props.order;\r\n    console.log(order);\r\n    const categories = ['kid', 'dessert', 'appetizer', 'drink', 'vegetable']\r\n    //const categories = ['Đồ cho bé', 'Tráng miệng', 'Khai vị', 'Đồ uống', 'Đồ chay']\r\n    const steps = ['Duyệt', 'Chuẩn bị', 'Vận chuyển', 'Hoàn thành']\r\n    const activeStep = steps.findIndex(step => step === order.status)\r\n    const timeToDate = (time) =>{\r\n        let date = new Date(time)\r\n        let year = date.getFullYear()\r\n        let month = date.getMonth() + 1\r\n        let day = date.getDate()\r\n        let hour = date.getHours()\r\n        let min = date.getMinutes()\r\n        let sec = date.getSeconds()\r\n        return year + '/' + month + '/' + day + \" - \" + hour + \":\" + min + \":\" + sec;   \r\n    }\r\n    return(\r\n        <Card\r\n        sx={{\r\n            width: '60%',\r\n            p: 5\r\n        }}\r\n        >\r\n            <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '30px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'center',\r\n                    m: 3,\r\n                    width: '100%'\r\n                }}\r\n                >{\"Mã đơn: \" + props.code}\r\n            </Typography>\r\n            <Divider variant='middle'/>\r\n            <pre\r\n                style={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '16px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    marginLeft: '20px',\r\n                }}\r\n                >{\"Tên: \" + order.customer + \"\\t\\t\\tSố điện thoại: \" + order.phone + \r\n                \"\\nĐịa chỉ: \" + order.address + \"\\t\\t\\tThời gian: \" + timeToDate(order.time)}\r\n            </pre>\r\n            <Divider variant='middle'/>\r\n            {order.detail.pizza &&\r\n            <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 1000,\r\n                    fontSize: '20px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    marginLeft: '20px',\r\n                    m: 3,\r\n                }}\r\n                >Pizzas: \r\n            </Typography>\r\n            }\r\n            {order.detail.pizza && order.detail.pizza.map(pizza =>\r\n                <pre\r\n                style={{\r\n                    width: '50%',\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '16px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    marginLeft: '20px',\r\n                    m: 3,\r\n                }}\r\n                >{\"+ Mã sản phẩm: \" + pizza.id + \"\\t\\tx\" + pizza.number}\r\n                </pre>\r\n            )}\r\n            <Box\r\n            sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between', flexWrap: 'wrap'\r\n            }}\r\n            >\r\n            {\r\n                categories.map(category => order.detail[category] &&\r\n                    <Box sx={{width: '50%'}}>\r\n                    <Divider variant='middle' sx={{width: '50%'}}/>\r\n                    <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 1000,\r\n                    fontSize: '20px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    marginLeft: '20px',\r\n                    m: 3,\r\n                }}\r\n                >{label[category]} \r\n            </Typography>\r\n                    {\r\n                    order.detail[category].map(product =>\r\n                        <pre\r\n                        style={{\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '16px',\r\n                        lineHeight: '52px',\r\n                        color: '#07143B',\r\n                        textAlign: 'start',\r\n                        marginLeft: '20px',\r\n                        m: 3,\r\n                        }}\r\n                        >{\"+ Mã sản phẩm: \" + product.id + \"\\t\\tx\" + product.number}\r\n                        </pre>\r\n                    )}\r\n                    </Box>\r\n                )\r\n            }\r\n            </Box>\r\n            <Divider variant='middle'/>\r\n            <pre\r\n                style={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '16px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'start',\r\n                    marginLeft: '20px',\r\n                    m: 3,\r\n                }}\r\n                >{\"Tổng tiền: \" + order['total payment'] + \"\\nPhí vận chuyển: \" + order['shipping payment']}\r\n            </pre>\r\n            <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 1000,\r\n                    fontSize: '20px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    width: '100%',\r\n                    m: 3,\r\n                }}\r\n                >Trạng thái:\r\n            </Typography>\r\n            <Stepper\r\n            color='warning'\r\n            activeStep={activeStep}\r\n            alternativeLabel\r\n            >\r\n                {\r\n                    steps.map(step =>\r\n                        <Step key={step}>\r\n                            <StepLabel>{step}</StepLabel>\r\n                        </Step>    \r\n                    )\r\n                }\r\n            </Stepper>\r\n        </Card>\r\n    )\r\n}","import { Box, Card, Typography } from '@mui/material';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Bill } from '../components/bill';\r\nimport { fetchOrders } from '../store/orderSlice';\r\nexport const OrderPage = () =>{\r\n    const orders = useSelector(state => state.orders)\r\n    const dispatch= useDispatch()\r\n    useEffect(() =>{\r\n        //console.log(orders.ids)\r\n        dispatch(fetchOrders())\r\n    }, [])\r\n    const [currentId, setCurrentId] = useState(0);\r\n    return orders.fetchingStatus === 'SUCCESS' && orders.ids.length > 0 && (\r\n        <Box\r\n        sx={{\r\n            width:\"95%\",\r\n            margin: \"50px\",\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        }}\r\n        >\r\n            <Bill\r\n                    code = {orders.ids[currentId]}\r\n                    order = {orders.entities[orders.ids[currentId]]}\r\n            />  \r\n            <Box sx={{\r\n                width: '40%', p: 5\r\n            }}>\r\n                <Typography variant=\"h6\"\r\n                sx={{\r\n                    fontFamily: 'be Vietnam',\r\n                    fontWeight: 700,\r\n                    fontSize: '30px',\r\n                    lineHeight: '52px',\r\n                    color: '#07143B',\r\n                    textAlign: 'center',\r\n                    marginBottom: '10px',\r\n                    width: '100%'\r\n                }}\r\n                >Danh sách đơn hàng\r\n            </Typography>\r\n            <Box sx={{\r\n                width: '100%',\r\n                overflow: \"auto\",\r\n                maxHeight: '1000px'\r\n            }}>\r\n            {\r\n                orders.ids.map((id,index) =>\r\n                    <Box\r\n                    sx={{\r\n                        marginBottom: '10px',\r\n                        borderRadius: '24px',\r\n                        fontFamily: 'be Vietnam',\r\n                        fontWeight: 700,\r\n                        fontSize: '16px',\r\n                        lineHeight: '52px',\r\n                        color: index===currentId ? 'white':'#07143B',\r\n                        textAlign: 'center',\r\n                        backgroundColor: index===currentId ? '#EA6A12': 'white',\r\n                        boxShadow: '1px 1px 10px rgb(0,0,0,0.1)'\r\n                    }}\r\n                    onClick = {() =>{\r\n                        setCurrentId(index)\r\n                    }}\r\n                    >\r\n                        {\"Mã đơn hàng: \" + id}\r\n                    </Box>\r\n                )\r\n            }\r\n            </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import './App.css';\r\nimport { MenuBar } from './components/sidebar';\r\nimport { CartPage } from './pages/cartPage';\r\nimport { Home } from './pages/Home';\r\nimport { PizzaPage } from './pages/pizza';\r\nimport { SinglePage } from './pages/singlePage';\r\nimport Dashboard from './components/dashboard'\r\nimport {Box} from '@mui/material';\r\nimport { Searchbar } from './components/searchbar';\r\nimport {BrowserRouter , Routes, Route} from 'react-router-dom';\r\nimport { ComboPage } from './pages/comboPage';\r\nimport SignIn from './pages/SignIn';\r\nimport AuthContextProvider from './context/AuthContext';\r\nimport { SingleExtraPage } from './pages/singleExtraPage';\r\nimport ForgetPassword from './pages/ForgetPassword';\r\nimport OrderReport from './pages/OrderReport';\r\nimport {ManagePage} from './pages/managePage';\r\nimport { fetchAllDesserts } from \"./store/categories/dessertSlice\";\r\nimport { fetchAllDrinks } from \"./store/categories/drinkSlice\";\r\nimport { fetchAllVegetables } from \"./store/categories/vegetableSlice\";\r\nimport { fetchAllKids } from \"./store/categories/kidSlice\";\r\nimport { fetchAllPizzas} from \"./store/categories/pizzaSlice\";\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAllAppetizers } from './store/categories/appetizerSlice';\r\nimport { fetchAllCombos } from './store/comboSlice';\r\nimport { SingleComboPage } from './pages/singleComboPage';\r\nimport { OrderPage } from './pages/orderPage';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  useEffect(()=>{\r\n    dispatch(fetchAllPizzas())\r\n    dispatch(fetchAllVegetables())\r\n    dispatch(fetchAllDesserts())\r\n    dispatch(fetchAllDrinks())\r\n    dispatch(fetchAllKids())\r\n    dispatch(fetchAllAppetizers())\r\n    dispatch(fetchAllCombos())\r\n  })\r\n\r\n  return (\r\n      <body>\r\n     \r\n        <div className=\"App\">\r\n        <div style={{\r\n            backgroundColor: 'rgba(252, 237, 227, 0.3)',\r\n            display: 'flex',\r\n            position: 'relative',\r\n            minHeight: '100vh'\r\n        }}>\r\n          <BrowserRouter>\r\n          <AuthContextProvider>\r\n          <MenuBar/>\r\n          <Box style={{\r\n            width: '100%',\r\n          }}>\r\n            <Searchbar/>\r\n            \r\n              <Routes>\r\n                <Route exact path='/order_report' element ={ <OrderReport/>}/>\r\n                <Route exact path='/signin' element ={<SignIn/>}/>\r\n                <Route exact path='/reset_password' element ={<ForgetPassword/>}/>\r\n                <Route path=\"/\" element={<Home/>}/>\r\n                <Route path=\"/cart\" element={<CartPage/>}/>\r\n                <Route path = \"/menu/:category\" element={<PizzaPage/>}/>\r\n                <Route path=\"/pizza/:productId\" element={<SinglePage/>}/>\r\n                <Route path=\"/:category/:productId\" element={<SingleExtraPage/>}/>\r\n                <Route path=\"/combo\" element={<ComboPage/>}/>\r\n                <Route path=\"/statistic\" element={<Dashboard/>}/>\r\n                <Route path=\"/combo/:comboId\" element = {<SingleComboPage/>}/>\r\n                <Route path=\"/order\" element={<OrderPage/>}/>\r\n                <Route path=\"/create_menu\" element={<ManagePage/>}/>\r\n              </Routes>\r\n          </Box>\r\n          </AuthContextProvider>\r\n          </BrowserRouter>\r\n        </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport pizzaReducer from \"./categories/pizzaSlice.js\";\r\nimport cartReducer from \"./cartSlice\";\r\nimport comboReducer from \"./comboSlice\";\r\nimport dessertSlice from \"./categories/dessertSlice\";\r\nimport drinkSlice from \"./categories/drinkSlice\";\r\nimport kidSlice from \"./categories/kidSlice\";\r\nimport vegetableSlice from \"./categories/vegetableSlice\";\r\nimport appetizerSlice from \"./categories/appetizerSlice\";\r\nimport cartExtraReducer from './cartExtraSlice';\r\nimport cartComboReducer from './cartComboSlice';\r\nimport orderSlice from './orderSlice';\r\nimport {combineReducers} from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// storage.removeItem('persist:root');\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\nconst rootReducer = combineReducers({\r\n    pizzas: pizzaReducer,\r\n    cart: cartReducer,\r\n    cartExtras: cartExtraReducer,\r\n    cartCombos: cartComboReducer,\r\n    combos: comboReducer,\r\n    desserts: dessertSlice,\r\n    drinks: drinkSlice,\r\n    kids: kidSlice,\r\n    vegetables: vegetableSlice,\r\n    appetizers: appetizerSlice,\r\n    orders: orderSlice\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nexport const store =  configureStore({reducer: persistedReducer});\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport {store, persistor} from './store/store';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n    <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}